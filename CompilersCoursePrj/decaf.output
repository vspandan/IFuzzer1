Grammar

    0 $accept: program $end

    1 program: CLASS ID '{' field_decl method_decl '}'
    2        | CLASS ID '{' method_decl '}'

    3 field_decl: type fields ';'

    4 fields: field_block
    5       | field_block ',' fields

    6 field_block: ID
    7            | ID '[' INT_LITERAL ']'

    8 method_decl: type ID '(' args_decl ')' block
    9            | VOID ID '(' args_decl ')' block
   10            | %empty

   11 args_decl: type ID
   12          | type ID ',' args_decl

   13 block: '{' '}'
   14      | '{' statement '}'

   15 type: INT
   16     | BOOLEAN

   17 statement: location ASSIGN_OP expr ';'
   18          | method_call ';'
   19          | IF '(' expr ')' block ELSE block
   20          | IF '(' expr ')' block
   21          | FOR ID '=' expr ',' expr block
   22          | RETURN ';'
   23          | BREAK ';'
   24          | CONTINUE ';'
   25          | block

   26 method_call: method_name '(' ')'
   27            | CALLOUT '(' STRING_LITERAL ',' callout_arg ')'
   28            | CALLOUT '(' STRING_LITERAL ')'

   29 method_name: ID

   30 location: ID
   31         | ID '[' expr ']'

   32 expr: expr ARITH_OP term1
   33     | term1

   34 term1: term1 REL_OP term2
   35      | term2

   36 term2: term2 EQ_OP term3
   37      | term3

   38 term3: term3 COND_OP term4
   39      | term4

   40 term4: location
   41      | method_call
   42      | literal
   43      | '-' term4
   44      | '!' term4
   45      | '(' expr ')'

   46 callout_arg: expr
   47            | STRING_LITERAL

   48 bool_literal: TRUE
   49             | FALSE

   50 literal: INT_LITERAL
   51        | bool_literal


Terminals, with rules where they appear

$end (0) 0
'!' (33) 44
'(' (40) 8 9 19 20 26 27 28 45
')' (41) 8 9 19 20 26 27 28 45
',' (44) 5 12 21 27
'-' (45) 43
';' (59) 3 17 18 22 23 24
'=' (61) 21
'[' (91) 7 31
']' (93) 7 31
'{' (123) 1 2 13 14
'}' (125) 1 2 13 14
error (256)
INT (258) 15
BOOLEAN (259) 16
IF (260) 19 20
ELSE (261) 19
FOR (262) 21
RETURN (263) 22
BREAK (264) 23
CONTINUE (265) 24
CLASS (266) 1 2
VOID (267) 9
CALLOUT (268) 27 28
TRUE (269) 48
FALSE (270) 49
ASSIGN_OP (271) 17
ID (272) 1 2 6 7 8 9 11 12 21 29 30 31
STRING_LITERAL (273) 27 28 47
ARITH_OP (274) 32
REL_OP (275) 34
EQ_OP (276) 36
COND_OP (277) 38
INT_LITERAL (278) 7 50


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
program (36)
    on left: 1 2, on right: 0
field_decl (37)
    on left: 3, on right: 1
fields (38)
    on left: 4 5, on right: 3 5
field_block (39)
    on left: 6 7, on right: 4 5
method_decl (40)
    on left: 8 9 10, on right: 1 2
args_decl (41)
    on left: 11 12, on right: 8 9 12
block (42)
    on left: 13 14, on right: 8 9 19 20 21 25
type (43)
    on left: 15 16, on right: 3 8 11 12
statement (44)
    on left: 17 18 19 20 21 22 23 24 25, on right: 14
method_call (45)
    on left: 26 27 28, on right: 18 41
method_name (46)
    on left: 29, on right: 26
location (47)
    on left: 30 31, on right: 17 40
expr (48)
    on left: 32 33, on right: 17 19 20 21 31 32 45 46
term1 (49)
    on left: 34 35, on right: 32 33 34
term2 (50)
    on left: 36 37, on right: 34 35 36
term3 (51)
    on left: 38 39, on right: 36 37 38
term4 (52)
    on left: 40 41 42 43 44 45, on right: 38 39 43 44
callout_arg (53)
    on left: 46 47, on right: 27
bool_literal (54)
    on left: 48 49, on right: 51
literal (55)
    on left: 50 51, on right: 42


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . ID '{' field_decl method_decl '}'
    2        | CLASS . ID '{' method_decl '}'

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS ID . '{' field_decl method_decl '}'
    2        | CLASS ID . '{' method_decl '}'

    '{'  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS ID '{' . field_decl method_decl '}'
    2        | CLASS ID '{' . method_decl '}'

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    VOID     shift, and go to state 8

    $default  reduce using rule 10 (method_decl)

    field_decl   go to state 9
    method_decl  go to state 10
    type         go to state 11


State 6

   15 type: INT .

    $default  reduce using rule 15 (type)


State 7

   16 type: BOOLEAN .

    $default  reduce using rule 16 (type)


State 8

    9 method_decl: VOID . ID '(' args_decl ')' block

    ID  shift, and go to state 12


State 9

    1 program: CLASS ID '{' field_decl . method_decl '}'

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    VOID     shift, and go to state 8

    $default  reduce using rule 10 (method_decl)

    method_decl  go to state 13
    type         go to state 14


State 10

    2 program: CLASS ID '{' method_decl . '}'

    '}'  shift, and go to state 15


State 11

    3 field_decl: type . fields ';'
    8 method_decl: type . ID '(' args_decl ')' block

    ID  shift, and go to state 16

    fields       go to state 17
    field_block  go to state 18


State 12

    9 method_decl: VOID ID . '(' args_decl ')' block

    '('  shift, and go to state 19


State 13

    1 program: CLASS ID '{' field_decl method_decl . '}'

    '}'  shift, and go to state 20


State 14

    8 method_decl: type . ID '(' args_decl ')' block

    ID  shift, and go to state 21


State 15

    2 program: CLASS ID '{' method_decl '}' .

    $default  reduce using rule 2 (program)


State 16

    6 field_block: ID .
    7            | ID . '[' INT_LITERAL ']'
    8 method_decl: type ID . '(' args_decl ')' block

    '['  shift, and go to state 22
    '('  shift, and go to state 23

    $default  reduce using rule 6 (field_block)


State 17

    3 field_decl: type fields . ';'

    ';'  shift, and go to state 24


State 18

    4 fields: field_block .
    5       | field_block . ',' fields

    ','  shift, and go to state 25

    $default  reduce using rule 4 (fields)


State 19

    9 method_decl: VOID ID '(' . args_decl ')' block

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    args_decl  go to state 26
    type       go to state 27


State 20

    1 program: CLASS ID '{' field_decl method_decl '}' .

    $default  reduce using rule 1 (program)


State 21

    8 method_decl: type ID . '(' args_decl ')' block

    '('  shift, and go to state 23


State 22

    7 field_block: ID '[' . INT_LITERAL ']'

    INT_LITERAL  shift, and go to state 28


State 23

    8 method_decl: type ID '(' . args_decl ')' block

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    args_decl  go to state 29
    type       go to state 27


State 24

    3 field_decl: type fields ';' .

    $default  reduce using rule 3 (field_decl)


State 25

    5 fields: field_block ',' . fields

    ID  shift, and go to state 30

    fields       go to state 31
    field_block  go to state 18


State 26

    9 method_decl: VOID ID '(' args_decl . ')' block

    ')'  shift, and go to state 32


State 27

   11 args_decl: type . ID
   12          | type . ID ',' args_decl

    ID  shift, and go to state 33


State 28

    7 field_block: ID '[' INT_LITERAL . ']'

    ']'  shift, and go to state 34


State 29

    8 method_decl: type ID '(' args_decl . ')' block

    ')'  shift, and go to state 35


State 30

    6 field_block: ID .
    7            | ID . '[' INT_LITERAL ']'

    '['  shift, and go to state 22

    $default  reduce using rule 6 (field_block)


State 31

    5 fields: field_block ',' fields .

    $default  reduce using rule 5 (fields)


State 32

    9 method_decl: VOID ID '(' args_decl ')' . block

    '{'  shift, and go to state 36

    block  go to state 37


State 33

   11 args_decl: type ID .
   12          | type ID . ',' args_decl

    ','  shift, and go to state 38

    $default  reduce using rule 11 (args_decl)


State 34

    7 field_block: ID '[' INT_LITERAL ']' .

    $default  reduce using rule 7 (field_block)


State 35

    8 method_decl: type ID '(' args_decl ')' . block

    '{'  shift, and go to state 36

    block  go to state 39


State 36

   13 block: '{' . '}'
   14      | '{' . statement '}'

    IF        shift, and go to state 40
    FOR       shift, and go to state 41
    RETURN    shift, and go to state 42
    BREAK     shift, and go to state 43
    CONTINUE  shift, and go to state 44
    CALLOUT   shift, and go to state 45
    ID        shift, and go to state 46
    '{'       shift, and go to state 36
    '}'       shift, and go to state 47

    block        go to state 48
    statement    go to state 49
    method_call  go to state 50
    method_name  go to state 51
    location     go to state 52


State 37

    9 method_decl: VOID ID '(' args_decl ')' block .

    $default  reduce using rule 9 (method_decl)


State 38

   12 args_decl: type ID ',' . args_decl

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    args_decl  go to state 53
    type       go to state 27


State 39

    8 method_decl: type ID '(' args_decl ')' block .

    $default  reduce using rule 8 (method_decl)


State 40

   19 statement: IF . '(' expr ')' block ELSE block
   20          | IF . '(' expr ')' block

    '('  shift, and go to state 54


State 41

   21 statement: FOR . ID '=' expr ',' expr block

    ID  shift, and go to state 55


State 42

   22 statement: RETURN . ';'

    ';'  shift, and go to state 56


State 43

   23 statement: BREAK . ';'

    ';'  shift, and go to state 57


State 44

   24 statement: CONTINUE . ';'

    ';'  shift, and go to state 58


State 45

   27 method_call: CALLOUT . '(' STRING_LITERAL ',' callout_arg ')'
   28            | CALLOUT . '(' STRING_LITERAL ')'

    '('  shift, and go to state 59


State 46

   29 method_name: ID .
   30 location: ID .
   31         | ID . '[' expr ']'

    '['  shift, and go to state 60

    '('       reduce using rule 29 (method_name)
    $default  reduce using rule 30 (location)


State 47

   13 block: '{' '}' .

    $default  reduce using rule 13 (block)


State 48

   25 statement: block .

    $default  reduce using rule 25 (statement)


State 49

   14 block: '{' statement . '}'

    '}'  shift, and go to state 61


State 50

   18 statement: method_call . ';'

    ';'  shift, and go to state 62


State 51

   26 method_call: method_name . '(' ')'

    '('  shift, and go to state 63


State 52

   17 statement: location . ASSIGN_OP expr ';'

    ASSIGN_OP  shift, and go to state 64


State 53

   12 args_decl: type ID ',' args_decl .

    $default  reduce using rule 12 (args_decl)


State 54

   19 statement: IF '(' . expr ')' block ELSE block
   20          | IF '(' . expr ')' block

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 65
    FALSE        shift, and go to state 66
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 67
    '-'          shift, and go to state 68
    '!'          shift, and go to state 69
    '('          shift, and go to state 70

    method_call   go to state 71
    method_name   go to state 51
    location      go to state 72
    expr          go to state 73
    term1         go to state 74
    term2         go to state 75
    term3         go to state 76
    term4         go to state 77
    bool_literal  go to state 78
    literal       go to state 79


State 55

   21 statement: FOR ID . '=' expr ',' expr block

    '='  shift, and go to state 80


State 56

   22 statement: RETURN ';' .

    $default  reduce using rule 22 (statement)


State 57

   23 statement: BREAK ';' .

    $default  reduce using rule 23 (statement)


State 58

   24 statement: CONTINUE ';' .

    $default  reduce using rule 24 (statement)


State 59

   27 method_call: CALLOUT '(' . STRING_LITERAL ',' callout_arg ')'
   28            | CALLOUT '(' . STRING_LITERAL ')'

    STRING_LITERAL  shift, and go to state 81


State 60

   31 location: ID '[' . expr ']'

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 65
    FALSE        shift, and go to state 66
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 67
    '-'          shift, and go to state 68
    '!'          shift, and go to state 69
    '('          shift, and go to state 70

    method_call   go to state 71
    method_name   go to state 51
    location      go to state 72
    expr          go to state 82
    term1         go to state 74
    term2         go to state 75
    term3         go to state 76
    term4         go to state 77
    bool_literal  go to state 78
    literal       go to state 79


State 61

   14 block: '{' statement '}' .

    $default  reduce using rule 14 (block)


State 62

   18 statement: method_call ';' .

    $default  reduce using rule 18 (statement)


State 63

   26 method_call: method_name '(' . ')'

    ')'  shift, and go to state 83


State 64

   17 statement: location ASSIGN_OP . expr ';'

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 65
    FALSE        shift, and go to state 66
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 67
    '-'          shift, and go to state 68
    '!'          shift, and go to state 69
    '('          shift, and go to state 70

    method_call   go to state 71
    method_name   go to state 51
    location      go to state 72
    expr          go to state 84
    term1         go to state 74
    term2         go to state 75
    term3         go to state 76
    term4         go to state 77
    bool_literal  go to state 78
    literal       go to state 79


State 65

   48 bool_literal: TRUE .

    $default  reduce using rule 48 (bool_literal)


State 66

   49 bool_literal: FALSE .

    $default  reduce using rule 49 (bool_literal)


State 67

   50 literal: INT_LITERAL .

    $default  reduce using rule 50 (literal)


State 68

   43 term4: '-' . term4

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 65
    FALSE        shift, and go to state 66
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 67
    '-'          shift, and go to state 68
    '!'          shift, and go to state 69
    '('          shift, and go to state 70

    method_call   go to state 71
    method_name   go to state 51
    location      go to state 72
    term4         go to state 85
    bool_literal  go to state 78
    literal       go to state 79


State 69

   44 term4: '!' . term4

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 65
    FALSE        shift, and go to state 66
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 67
    '-'          shift, and go to state 68
    '!'          shift, and go to state 69
    '('          shift, and go to state 70

    method_call   go to state 71
    method_name   go to state 51
    location      go to state 72
    term4         go to state 86
    bool_literal  go to state 78
    literal       go to state 79


State 70

   45 term4: '(' . expr ')'

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 65
    FALSE        shift, and go to state 66
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 67
    '-'          shift, and go to state 68
    '!'          shift, and go to state 69
    '('          shift, and go to state 70

    method_call   go to state 71
    method_name   go to state 51
    location      go to state 72
    expr          go to state 87
    term1         go to state 74
    term2         go to state 75
    term3         go to state 76
    term4         go to state 77
    bool_literal  go to state 78
    literal       go to state 79


State 71

   41 term4: method_call .

    $default  reduce using rule 41 (term4)


State 72

   40 term4: location .

    $default  reduce using rule 40 (term4)


State 73

   19 statement: IF '(' expr . ')' block ELSE block
   20          | IF '(' expr . ')' block
   32 expr: expr . ARITH_OP term1

    ARITH_OP  shift, and go to state 88
    ')'       shift, and go to state 89


State 74

   33 expr: term1 .
   34 term1: term1 . REL_OP term2

    REL_OP  shift, and go to state 90

    $default  reduce using rule 33 (expr)


State 75

   35 term1: term2 .
   36 term2: term2 . EQ_OP term3

    EQ_OP  shift, and go to state 91

    $default  reduce using rule 35 (term1)


State 76

   37 term2: term3 .
   38 term3: term3 . COND_OP term4

    COND_OP  shift, and go to state 92

    $default  reduce using rule 37 (term2)


State 77

   39 term3: term4 .

    $default  reduce using rule 39 (term3)


State 78

   51 literal: bool_literal .

    $default  reduce using rule 51 (literal)


State 79

   42 term4: literal .

    $default  reduce using rule 42 (term4)


State 80

   21 statement: FOR ID '=' . expr ',' expr block

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 65
    FALSE        shift, and go to state 66
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 67
    '-'          shift, and go to state 68
    '!'          shift, and go to state 69
    '('          shift, and go to state 70

    method_call   go to state 71
    method_name   go to state 51
    location      go to state 72
    expr          go to state 93
    term1         go to state 74
    term2         go to state 75
    term3         go to state 76
    term4         go to state 77
    bool_literal  go to state 78
    literal       go to state 79


State 81

   27 method_call: CALLOUT '(' STRING_LITERAL . ',' callout_arg ')'
   28            | CALLOUT '(' STRING_LITERAL . ')'

    ','  shift, and go to state 94
    ')'  shift, and go to state 95


State 82

   31 location: ID '[' expr . ']'
   32 expr: expr . ARITH_OP term1

    ARITH_OP  shift, and go to state 88
    ']'       shift, and go to state 96


State 83

   26 method_call: method_name '(' ')' .

    $default  reduce using rule 26 (method_call)


State 84

   17 statement: location ASSIGN_OP expr . ';'
   32 expr: expr . ARITH_OP term1

    ARITH_OP  shift, and go to state 88
    ';'       shift, and go to state 97


State 85

   43 term4: '-' term4 .

    $default  reduce using rule 43 (term4)


State 86

   44 term4: '!' term4 .

    $default  reduce using rule 44 (term4)


State 87

   32 expr: expr . ARITH_OP term1
   45 term4: '(' expr . ')'

    ARITH_OP  shift, and go to state 88
    ')'       shift, and go to state 98


State 88

   32 expr: expr ARITH_OP . term1

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 65
    FALSE        shift, and go to state 66
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 67
    '-'          shift, and go to state 68
    '!'          shift, and go to state 69
    '('          shift, and go to state 70

    method_call   go to state 71
    method_name   go to state 51
    location      go to state 72
    term1         go to state 99
    term2         go to state 75
    term3         go to state 76
    term4         go to state 77
    bool_literal  go to state 78
    literal       go to state 79


State 89

   19 statement: IF '(' expr ')' . block ELSE block
   20          | IF '(' expr ')' . block

    '{'  shift, and go to state 36

    block  go to state 100


State 90

   34 term1: term1 REL_OP . term2

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 65
    FALSE        shift, and go to state 66
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 67
    '-'          shift, and go to state 68
    '!'          shift, and go to state 69
    '('          shift, and go to state 70

    method_call   go to state 71
    method_name   go to state 51
    location      go to state 72
    term2         go to state 101
    term3         go to state 76
    term4         go to state 77
    bool_literal  go to state 78
    literal       go to state 79


State 91

   36 term2: term2 EQ_OP . term3

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 65
    FALSE        shift, and go to state 66
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 67
    '-'          shift, and go to state 68
    '!'          shift, and go to state 69
    '('          shift, and go to state 70

    method_call   go to state 71
    method_name   go to state 51
    location      go to state 72
    term3         go to state 102
    term4         go to state 77
    bool_literal  go to state 78
    literal       go to state 79


State 92

   38 term3: term3 COND_OP . term4

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 65
    FALSE        shift, and go to state 66
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 67
    '-'          shift, and go to state 68
    '!'          shift, and go to state 69
    '('          shift, and go to state 70

    method_call   go to state 71
    method_name   go to state 51
    location      go to state 72
    term4         go to state 103
    bool_literal  go to state 78
    literal       go to state 79


State 93

   21 statement: FOR ID '=' expr . ',' expr block
   32 expr: expr . ARITH_OP term1

    ARITH_OP  shift, and go to state 88
    ','       shift, and go to state 104


State 94

   27 method_call: CALLOUT '(' STRING_LITERAL ',' . callout_arg ')'

    CALLOUT         shift, and go to state 45
    TRUE            shift, and go to state 65
    FALSE           shift, and go to state 66
    ID              shift, and go to state 46
    STRING_LITERAL  shift, and go to state 105
    INT_LITERAL     shift, and go to state 67
    '-'             shift, and go to state 68
    '!'             shift, and go to state 69
    '('             shift, and go to state 70

    method_call   go to state 71
    method_name   go to state 51
    location      go to state 72
    expr          go to state 106
    term1         go to state 74
    term2         go to state 75
    term3         go to state 76
    term4         go to state 77
    callout_arg   go to state 107
    bool_literal  go to state 78
    literal       go to state 79


State 95

   28 method_call: CALLOUT '(' STRING_LITERAL ')' .

    $default  reduce using rule 28 (method_call)


State 96

   31 location: ID '[' expr ']' .

    $default  reduce using rule 31 (location)


State 97

   17 statement: location ASSIGN_OP expr ';' .

    $default  reduce using rule 17 (statement)


State 98

   45 term4: '(' expr ')' .

    $default  reduce using rule 45 (term4)


State 99

   32 expr: expr ARITH_OP term1 .
   34 term1: term1 . REL_OP term2

    REL_OP  shift, and go to state 90

    $default  reduce using rule 32 (expr)


State 100

   19 statement: IF '(' expr ')' block . ELSE block
   20          | IF '(' expr ')' block .

    ELSE  shift, and go to state 108

    $default  reduce using rule 20 (statement)


State 101

   34 term1: term1 REL_OP term2 .
   36 term2: term2 . EQ_OP term3

    EQ_OP  shift, and go to state 91

    $default  reduce using rule 34 (term1)


State 102

   36 term2: term2 EQ_OP term3 .
   38 term3: term3 . COND_OP term4

    COND_OP  shift, and go to state 92

    $default  reduce using rule 36 (term2)


State 103

   38 term3: term3 COND_OP term4 .

    $default  reduce using rule 38 (term3)


State 104

   21 statement: FOR ID '=' expr ',' . expr block

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 65
    FALSE        shift, and go to state 66
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 67
    '-'          shift, and go to state 68
    '!'          shift, and go to state 69
    '('          shift, and go to state 70

    method_call   go to state 71
    method_name   go to state 51
    location      go to state 72
    expr          go to state 109
    term1         go to state 74
    term2         go to state 75
    term3         go to state 76
    term4         go to state 77
    bool_literal  go to state 78
    literal       go to state 79


State 105

   47 callout_arg: STRING_LITERAL .

    $default  reduce using rule 47 (callout_arg)


State 106

   32 expr: expr . ARITH_OP term1
   46 callout_arg: expr .

    ARITH_OP  shift, and go to state 88

    $default  reduce using rule 46 (callout_arg)


State 107

   27 method_call: CALLOUT '(' STRING_LITERAL ',' callout_arg . ')'

    ')'  shift, and go to state 110


State 108

   19 statement: IF '(' expr ')' block ELSE . block

    '{'  shift, and go to state 36

    block  go to state 111


State 109

   21 statement: FOR ID '=' expr ',' expr . block
   32 expr: expr . ARITH_OP term1

    ARITH_OP  shift, and go to state 88
    '{'       shift, and go to state 36

    block  go to state 112


State 110

   27 method_call: CALLOUT '(' STRING_LITERAL ',' callout_arg ')' .

    $default  reduce using rule 27 (method_call)


State 111

   19 statement: IF '(' expr ')' block ELSE block .

    $default  reduce using rule 19 (statement)


State 112

   21 statement: FOR ID '=' expr ',' expr block .

    $default  reduce using rule 21 (statement)
