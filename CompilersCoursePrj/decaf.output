Terminals unused in grammar

   '-'


State 10 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: CLASS ID '{' field_decls method_decl '}'
    2        | CLASS ID '{' method_decl '}'

    3 field_decls: field_decl
    4            | field_decl field_decls

    5 field_decl: type fields ':'

    6 fields: field_block
    7       | field_block ',' fields

    8 field_block: ID
    9            | ID '[' INT_LITERAL ']'

   10 method_decl: type ID '(' args_decl ')' block
   11            | VOID ID '(' args_decl ')' block
   12            | %empty

   13 args_decl: type ID
   14          | type ID ',' args_decl

   15 vars: ID ';'
   16     | ID ',' vars

   17 var_decl: type vars var_decl
   18         | type vars

   19 block: '{' block_body '}'

   20 statements: statement
   21           | statement statements

   22 block_body: var_decl statements
   23           | var_decl
   24           | statements
   25           | %empty

   26 type: INT
   27     | BOOLEAN

   28 statement: location ASSGN_OP expr ';'
   29          | method_call ';'
   30          | IF '(' expr ')' block ELSE block
   31          | IF '(' expr ')' block
   32          | FOR ID E_ASSIGN_OP expr ',' expr block
   33          | RETURN ';'
   34          | RETURN expr ';'
   35          | BREAK ';'
   36          | CONTINUE ';'
   37          | block

   38 ASSGN_OP: ASSIGN_OP
   39         | E_ASSIGN_OP

   40 exprs: expr
   41      | expr ',' exprs

   42 callout_args: callout_arg
   43             | callout_arg ',' callout_args

   44 method_call: method_name '(' ')'
   45            | method_name '(' exprs ')'
   46            | CALLOUT '(' STRING_LITERAL ',' callout_args ')'
   47            | CALLOUT '(' STRING_LITERAL ')'

   48 method_name: ID

   49 location: ID
   50         | ID '[' expr ']'

   51 ARTH_OP: ARITH_OP
   52        | MINUS

   53 expr: expr ARTH_OP term1
   54     | term1

   55 term1: term1 REL_OP term2
   56      | term2

   57 term2: term2 EQ_OP term3
   58      | term3

   59 term3: term3 COND_OP term4
   60      | term4

   61 term4: location
   62      | method_call
   63      | literal
   64      | MINUS term4
   65      | '!' term4
   66      | '(' expr ')'

   67 callout_arg: expr
   68            | STRING_LITERAL

   69 bool_literal: TRUE
   70             | FALSE

   71 literal: INT_LITERAL
   72        | bool_literal


Terminals, with rules where they appear

$end (0) 0
'!' (33) 65
'(' (40) 10 11 30 31 44 45 46 47 66
')' (41) 10 11 30 31 44 45 46 47 66
',' (44) 7 14 16 32 41 43 46
'-' (45)
':' (58) 5
';' (59) 15 28 29 33 34 35 36
'[' (91) 9 50
']' (93) 9 50
'{' (123) 1 2 19
'}' (125) 1 2 19
error (256)
INT (258) 26
BOOLEAN (259) 27
IF (260) 30 31
ELSE (261) 30
FOR (262) 32
RETURN (263) 33 34
BREAK (264) 35
CONTINUE (265) 36
CLASS (266) 1 2
VOID (267) 11
CALLOUT (268) 46 47
TRUE (269) 69
FALSE (270) 70
ASSIGN_OP (271) 38
ID (272) 1 2 8 9 10 11 13 14 15 16 32 48 49 50
STRING_LITERAL (273) 46 47 68
ARITH_OP (274) 51
REL_OP (275) 55
EQ_OP (276) 57
COND_OP (277) 59
INT_LITERAL (278) 9 71
E_ASSIGN_OP (279) 32 39
MINUS (280) 52 64


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1 2, on right: 0
field_decls (39)
    on left: 3 4, on right: 1 4
field_decl (40)
    on left: 5, on right: 3 4
fields (41)
    on left: 6 7, on right: 5 7
field_block (42)
    on left: 8 9, on right: 6 7
method_decl (43)
    on left: 10 11 12, on right: 1 2
args_decl (44)
    on left: 13 14, on right: 10 11 14
vars (45)
    on left: 15 16, on right: 16 17 18
var_decl (46)
    on left: 17 18, on right: 17 22 23
block (47)
    on left: 19, on right: 10 11 30 31 32 37
statements (48)
    on left: 20 21, on right: 21 22 24
block_body (49)
    on left: 22 23 24 25, on right: 19
type (50)
    on left: 26 27, on right: 5 10 13 14 17 18
statement (51)
    on left: 28 29 30 31 32 33 34 35 36 37, on right: 20 21
ASSGN_OP (52)
    on left: 38 39, on right: 28
exprs (53)
    on left: 40 41, on right: 41 45
callout_args (54)
    on left: 42 43, on right: 43 46
method_call (55)
    on left: 44 45 46 47, on right: 29 62
method_name (56)
    on left: 48, on right: 44 45
location (57)
    on left: 49 50, on right: 28 61
ARTH_OP (58)
    on left: 51 52, on right: 53
expr (59)
    on left: 53 54, on right: 28 30 31 32 34 40 41 50 53 66 67
term1 (60)
    on left: 55 56, on right: 53 54 55
term2 (61)
    on left: 57 58, on right: 55 56 57
term3 (62)
    on left: 59 60, on right: 57 58 59
term4 (63)
    on left: 61 62 63 64 65 66, on right: 59 60 64 65
callout_arg (64)
    on left: 67 68, on right: 42 43
bool_literal (65)
    on left: 69 70, on right: 72
literal (66)
    on left: 71 72, on right: 63


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . ID '{' field_decls method_decl '}'
    2        | CLASS . ID '{' method_decl '}'

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS ID . '{' field_decls method_decl '}'
    2        | CLASS ID . '{' method_decl '}'

    '{'  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS ID '{' . field_decls method_decl '}'
    2        | CLASS ID '{' . method_decl '}'

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    VOID     shift, and go to state 8

    $default  reduce using rule 12 (method_decl)

    field_decls  go to state 9
    field_decl   go to state 10
    method_decl  go to state 11
    type         go to state 12


State 6

   26 type: INT .

    $default  reduce using rule 26 (type)


State 7

   27 type: BOOLEAN .

    $default  reduce using rule 27 (type)


State 8

   11 method_decl: VOID . ID '(' args_decl ')' block

    ID  shift, and go to state 13


State 9

    1 program: CLASS ID '{' field_decls . method_decl '}'

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    VOID     shift, and go to state 8

    $default  reduce using rule 12 (method_decl)

    method_decl  go to state 14
    type         go to state 15


State 10

    3 field_decls: field_decl .
    4            | field_decl . field_decls

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    INT       [reduce using rule 3 (field_decls)]
    BOOLEAN   [reduce using rule 3 (field_decls)]
    $default  reduce using rule 3 (field_decls)

    field_decls  go to state 16
    field_decl   go to state 10
    type         go to state 17


State 11

    2 program: CLASS ID '{' method_decl . '}'

    '}'  shift, and go to state 18


State 12

    5 field_decl: type . fields ':'
   10 method_decl: type . ID '(' args_decl ')' block

    ID  shift, and go to state 19

    fields       go to state 20
    field_block  go to state 21


State 13

   11 method_decl: VOID ID . '(' args_decl ')' block

    '('  shift, and go to state 22


State 14

    1 program: CLASS ID '{' field_decls method_decl . '}'

    '}'  shift, and go to state 23


State 15

   10 method_decl: type . ID '(' args_decl ')' block

    ID  shift, and go to state 24


State 16

    4 field_decls: field_decl field_decls .

    $default  reduce using rule 4 (field_decls)


State 17

    5 field_decl: type . fields ':'

    ID  shift, and go to state 25

    fields       go to state 20
    field_block  go to state 21


State 18

    2 program: CLASS ID '{' method_decl '}' .

    $default  reduce using rule 2 (program)


State 19

    8 field_block: ID .
    9            | ID . '[' INT_LITERAL ']'
   10 method_decl: type ID . '(' args_decl ')' block

    '['  shift, and go to state 26
    '('  shift, and go to state 27

    $default  reduce using rule 8 (field_block)


State 20

    5 field_decl: type fields . ':'

    ':'  shift, and go to state 28


State 21

    6 fields: field_block .
    7       | field_block . ',' fields

    ','  shift, and go to state 29

    $default  reduce using rule 6 (fields)


State 22

   11 method_decl: VOID ID '(' . args_decl ')' block

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    args_decl  go to state 30
    type       go to state 31


State 23

    1 program: CLASS ID '{' field_decls method_decl '}' .

    $default  reduce using rule 1 (program)


State 24

   10 method_decl: type ID . '(' args_decl ')' block

    '('  shift, and go to state 27


State 25

    8 field_block: ID .
    9            | ID . '[' INT_LITERAL ']'

    '['  shift, and go to state 26

    $default  reduce using rule 8 (field_block)


State 26

    9 field_block: ID '[' . INT_LITERAL ']'

    INT_LITERAL  shift, and go to state 32


State 27

   10 method_decl: type ID '(' . args_decl ')' block

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    args_decl  go to state 33
    type       go to state 31


State 28

    5 field_decl: type fields ':' .

    $default  reduce using rule 5 (field_decl)


State 29

    7 fields: field_block ',' . fields

    ID  shift, and go to state 25

    fields       go to state 34
    field_block  go to state 21


State 30

   11 method_decl: VOID ID '(' args_decl . ')' block

    ')'  shift, and go to state 35


State 31

   13 args_decl: type . ID
   14          | type . ID ',' args_decl

    ID  shift, and go to state 36


State 32

    9 field_block: ID '[' INT_LITERAL . ']'

    ']'  shift, and go to state 37


State 33

   10 method_decl: type ID '(' args_decl . ')' block

    ')'  shift, and go to state 38


State 34

    7 fields: field_block ',' fields .

    $default  reduce using rule 7 (fields)


State 35

   11 method_decl: VOID ID '(' args_decl ')' . block

    '{'  shift, and go to state 39

    block  go to state 40


State 36

   13 args_decl: type ID .
   14          | type ID . ',' args_decl

    ','  shift, and go to state 41

    $default  reduce using rule 13 (args_decl)


State 37

    9 field_block: ID '[' INT_LITERAL ']' .

    $default  reduce using rule 9 (field_block)


State 38

   10 method_decl: type ID '(' args_decl ')' . block

    '{'  shift, and go to state 39

    block  go to state 42


State 39

   19 block: '{' . block_body '}'

    INT       shift, and go to state 6
    BOOLEAN   shift, and go to state 7
    IF        shift, and go to state 43
    FOR       shift, and go to state 44
    RETURN    shift, and go to state 45
    BREAK     shift, and go to state 46
    CONTINUE  shift, and go to state 47
    CALLOUT   shift, and go to state 48
    ID        shift, and go to state 49
    '{'       shift, and go to state 39

    $default  reduce using rule 25 (block_body)

    var_decl     go to state 50
    block        go to state 51
    statements   go to state 52
    block_body   go to state 53
    type         go to state 54
    statement    go to state 55
    method_call  go to state 56
    method_name  go to state 57
    location     go to state 58


State 40

   11 method_decl: VOID ID '(' args_decl ')' block .

    $default  reduce using rule 11 (method_decl)


State 41

   14 args_decl: type ID ',' . args_decl

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    args_decl  go to state 59
    type       go to state 31


State 42

   10 method_decl: type ID '(' args_decl ')' block .

    $default  reduce using rule 10 (method_decl)


State 43

   30 statement: IF . '(' expr ')' block ELSE block
   31          | IF . '(' expr ')' block

    '('  shift, and go to state 60


State 44

   32 statement: FOR . ID E_ASSIGN_OP expr ',' expr block

    ID  shift, and go to state 61


State 45

   33 statement: RETURN . ';'
   34          | RETURN . expr ';'

    CALLOUT      shift, and go to state 48
    TRUE         shift, and go to state 62
    FALSE        shift, and go to state 63
    ID           shift, and go to state 49
    INT_LITERAL  shift, and go to state 64
    MINUS        shift, and go to state 65
    '!'          shift, and go to state 66
    '('          shift, and go to state 67
    ';'          shift, and go to state 68

    method_call   go to state 69
    method_name   go to state 57
    location      go to state 70
    expr          go to state 71
    term1         go to state 72
    term2         go to state 73
    term3         go to state 74
    term4         go to state 75
    bool_literal  go to state 76
    literal       go to state 77


State 46

   35 statement: BREAK . ';'

    ';'  shift, and go to state 78


State 47

   36 statement: CONTINUE . ';'

    ';'  shift, and go to state 79


State 48

   46 method_call: CALLOUT . '(' STRING_LITERAL ',' callout_args ')'
   47            | CALLOUT . '(' STRING_LITERAL ')'

    '('  shift, and go to state 80


State 49

   48 method_name: ID .
   49 location: ID .
   50         | ID . '[' expr ']'

    '['  shift, and go to state 81

    '('       reduce using rule 48 (method_name)
    $default  reduce using rule 49 (location)


State 50

   22 block_body: var_decl . statements
   23           | var_decl .

    IF        shift, and go to state 43
    FOR       shift, and go to state 44
    RETURN    shift, and go to state 45
    BREAK     shift, and go to state 46
    CONTINUE  shift, and go to state 47
    CALLOUT   shift, and go to state 48
    ID        shift, and go to state 49
    '{'       shift, and go to state 39

    $default  reduce using rule 23 (block_body)

    block        go to state 51
    statements   go to state 82
    statement    go to state 55
    method_call  go to state 56
    method_name  go to state 57
    location     go to state 58


State 51

   37 statement: block .

    $default  reduce using rule 37 (statement)


State 52

   24 block_body: statements .

    $default  reduce using rule 24 (block_body)


State 53

   19 block: '{' block_body . '}'

    '}'  shift, and go to state 83


State 54

   17 var_decl: type . vars var_decl
   18         | type . vars

    ID  shift, and go to state 84

    vars  go to state 85


State 55

   20 statements: statement .
   21           | statement . statements

    IF        shift, and go to state 43
    FOR       shift, and go to state 44
    RETURN    shift, and go to state 45
    BREAK     shift, and go to state 46
    CONTINUE  shift, and go to state 47
    CALLOUT   shift, and go to state 48
    ID        shift, and go to state 49
    '{'       shift, and go to state 39

    $default  reduce using rule 20 (statements)

    block        go to state 51
    statements   go to state 86
    statement    go to state 55
    method_call  go to state 56
    method_name  go to state 57
    location     go to state 58


State 56

   29 statement: method_call . ';'

    ';'  shift, and go to state 87


State 57

   44 method_call: method_name . '(' ')'
   45            | method_name . '(' exprs ')'

    '('  shift, and go to state 88


State 58

   28 statement: location . ASSGN_OP expr ';'

    ASSIGN_OP    shift, and go to state 89
    E_ASSIGN_OP  shift, and go to state 90

    ASSGN_OP  go to state 91


State 59

   14 args_decl: type ID ',' args_decl .

    $default  reduce using rule 14 (args_decl)


State 60

   30 statement: IF '(' . expr ')' block ELSE block
   31          | IF '(' . expr ')' block

    CALLOUT      shift, and go to state 48
    TRUE         shift, and go to state 62
    FALSE        shift, and go to state 63
    ID           shift, and go to state 49
    INT_LITERAL  shift, and go to state 64
    MINUS        shift, and go to state 65
    '!'          shift, and go to state 66
    '('          shift, and go to state 67

    method_call   go to state 69
    method_name   go to state 57
    location      go to state 70
    expr          go to state 92
    term1         go to state 72
    term2         go to state 73
    term3         go to state 74
    term4         go to state 75
    bool_literal  go to state 76
    literal       go to state 77


State 61

   32 statement: FOR ID . E_ASSIGN_OP expr ',' expr block

    E_ASSIGN_OP  shift, and go to state 93


State 62

   69 bool_literal: TRUE .

    $default  reduce using rule 69 (bool_literal)


State 63

   70 bool_literal: FALSE .

    $default  reduce using rule 70 (bool_literal)


State 64

   71 literal: INT_LITERAL .

    $default  reduce using rule 71 (literal)


State 65

   64 term4: MINUS . term4

    CALLOUT      shift, and go to state 48
    TRUE         shift, and go to state 62
    FALSE        shift, and go to state 63
    ID           shift, and go to state 49
    INT_LITERAL  shift, and go to state 64
    MINUS        shift, and go to state 65
    '!'          shift, and go to state 66
    '('          shift, and go to state 67

    method_call   go to state 69
    method_name   go to state 57
    location      go to state 70
    term4         go to state 94
    bool_literal  go to state 76
    literal       go to state 77


State 66

   65 term4: '!' . term4

    CALLOUT      shift, and go to state 48
    TRUE         shift, and go to state 62
    FALSE        shift, and go to state 63
    ID           shift, and go to state 49
    INT_LITERAL  shift, and go to state 64
    MINUS        shift, and go to state 65
    '!'          shift, and go to state 66
    '('          shift, and go to state 67

    method_call   go to state 69
    method_name   go to state 57
    location      go to state 70
    term4         go to state 95
    bool_literal  go to state 76
    literal       go to state 77


State 67

   66 term4: '(' . expr ')'

    CALLOUT      shift, and go to state 48
    TRUE         shift, and go to state 62
    FALSE        shift, and go to state 63
    ID           shift, and go to state 49
    INT_LITERAL  shift, and go to state 64
    MINUS        shift, and go to state 65
    '!'          shift, and go to state 66
    '('          shift, and go to state 67

    method_call   go to state 69
    method_name   go to state 57
    location      go to state 70
    expr          go to state 96
    term1         go to state 72
    term2         go to state 73
    term3         go to state 74
    term4         go to state 75
    bool_literal  go to state 76
    literal       go to state 77


State 68

   33 statement: RETURN ';' .

    $default  reduce using rule 33 (statement)


State 69

   62 term4: method_call .

    $default  reduce using rule 62 (term4)


State 70

   61 term4: location .

    $default  reduce using rule 61 (term4)


State 71

   34 statement: RETURN expr . ';'
   53 expr: expr . ARTH_OP term1

    ARITH_OP  shift, and go to state 97
    MINUS     shift, and go to state 98
    ';'       shift, and go to state 99

    ARTH_OP  go to state 100


State 72

   54 expr: term1 .
   55 term1: term1 . REL_OP term2

    REL_OP  shift, and go to state 101

    $default  reduce using rule 54 (expr)


State 73

   56 term1: term2 .
   57 term2: term2 . EQ_OP term3

    EQ_OP  shift, and go to state 102

    $default  reduce using rule 56 (term1)


State 74

   58 term2: term3 .
   59 term3: term3 . COND_OP term4

    COND_OP  shift, and go to state 103

    $default  reduce using rule 58 (term2)


State 75

   60 term3: term4 .

    $default  reduce using rule 60 (term3)


State 76

   72 literal: bool_literal .

    $default  reduce using rule 72 (literal)


State 77

   63 term4: literal .

    $default  reduce using rule 63 (term4)


State 78

   35 statement: BREAK ';' .

    $default  reduce using rule 35 (statement)


State 79

   36 statement: CONTINUE ';' .

    $default  reduce using rule 36 (statement)


State 80

   46 method_call: CALLOUT '(' . STRING_LITERAL ',' callout_args ')'
   47            | CALLOUT '(' . STRING_LITERAL ')'

    STRING_LITERAL  shift, and go to state 104


State 81

   50 location: ID '[' . expr ']'

    CALLOUT      shift, and go to state 48
    TRUE         shift, and go to state 62
    FALSE        shift, and go to state 63
    ID           shift, and go to state 49
    INT_LITERAL  shift, and go to state 64
    MINUS        shift, and go to state 65
    '!'          shift, and go to state 66
    '('          shift, and go to state 67

    method_call   go to state 69
    method_name   go to state 57
    location      go to state 70
    expr          go to state 105
    term1         go to state 72
    term2         go to state 73
    term3         go to state 74
    term4         go to state 75
    bool_literal  go to state 76
    literal       go to state 77


State 82

   22 block_body: var_decl statements .

    $default  reduce using rule 22 (block_body)


State 83

   19 block: '{' block_body '}' .

    $default  reduce using rule 19 (block)


State 84

   15 vars: ID . ';'
   16     | ID . ',' vars

    ','  shift, and go to state 106
    ';'  shift, and go to state 107


State 85

   17 var_decl: type vars . var_decl
   18         | type vars .

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    $default  reduce using rule 18 (var_decl)

    var_decl  go to state 108
    type      go to state 54


State 86

   21 statements: statement statements .

    $default  reduce using rule 21 (statements)


State 87

   29 statement: method_call ';' .

    $default  reduce using rule 29 (statement)


State 88

   44 method_call: method_name '(' . ')'
   45            | method_name '(' . exprs ')'

    CALLOUT      shift, and go to state 48
    TRUE         shift, and go to state 62
    FALSE        shift, and go to state 63
    ID           shift, and go to state 49
    INT_LITERAL  shift, and go to state 64
    MINUS        shift, and go to state 65
    '!'          shift, and go to state 66
    '('          shift, and go to state 67
    ')'          shift, and go to state 109

    exprs         go to state 110
    method_call   go to state 69
    method_name   go to state 57
    location      go to state 70
    expr          go to state 111
    term1         go to state 72
    term2         go to state 73
    term3         go to state 74
    term4         go to state 75
    bool_literal  go to state 76
    literal       go to state 77


State 89

   38 ASSGN_OP: ASSIGN_OP .

    $default  reduce using rule 38 (ASSGN_OP)


State 90

   39 ASSGN_OP: E_ASSIGN_OP .

    $default  reduce using rule 39 (ASSGN_OP)


State 91

   28 statement: location ASSGN_OP . expr ';'

    CALLOUT      shift, and go to state 48
    TRUE         shift, and go to state 62
    FALSE        shift, and go to state 63
    ID           shift, and go to state 49
    INT_LITERAL  shift, and go to state 64
    MINUS        shift, and go to state 65
    '!'          shift, and go to state 66
    '('          shift, and go to state 67

    method_call   go to state 69
    method_name   go to state 57
    location      go to state 70
    expr          go to state 112
    term1         go to state 72
    term2         go to state 73
    term3         go to state 74
    term4         go to state 75
    bool_literal  go to state 76
    literal       go to state 77


State 92

   30 statement: IF '(' expr . ')' block ELSE block
   31          | IF '(' expr . ')' block
   53 expr: expr . ARTH_OP term1

    ARITH_OP  shift, and go to state 97
    MINUS     shift, and go to state 98
    ')'       shift, and go to state 113

    ARTH_OP  go to state 100


State 93

   32 statement: FOR ID E_ASSIGN_OP . expr ',' expr block

    CALLOUT      shift, and go to state 48
    TRUE         shift, and go to state 62
    FALSE        shift, and go to state 63
    ID           shift, and go to state 49
    INT_LITERAL  shift, and go to state 64
    MINUS        shift, and go to state 65
    '!'          shift, and go to state 66
    '('          shift, and go to state 67

    method_call   go to state 69
    method_name   go to state 57
    location      go to state 70
    expr          go to state 114
    term1         go to state 72
    term2         go to state 73
    term3         go to state 74
    term4         go to state 75
    bool_literal  go to state 76
    literal       go to state 77


State 94

   64 term4: MINUS term4 .

    $default  reduce using rule 64 (term4)


State 95

   65 term4: '!' term4 .

    $default  reduce using rule 65 (term4)


State 96

   53 expr: expr . ARTH_OP term1
   66 term4: '(' expr . ')'

    ARITH_OP  shift, and go to state 97
    MINUS     shift, and go to state 98
    ')'       shift, and go to state 115

    ARTH_OP  go to state 100


State 97

   51 ARTH_OP: ARITH_OP .

    $default  reduce using rule 51 (ARTH_OP)


State 98

   52 ARTH_OP: MINUS .

    $default  reduce using rule 52 (ARTH_OP)


State 99

   34 statement: RETURN expr ';' .

    $default  reduce using rule 34 (statement)


State 100

   53 expr: expr ARTH_OP . term1

    CALLOUT      shift, and go to state 48
    TRUE         shift, and go to state 62
    FALSE        shift, and go to state 63
    ID           shift, and go to state 49
    INT_LITERAL  shift, and go to state 64
    MINUS        shift, and go to state 65
    '!'          shift, and go to state 66
    '('          shift, and go to state 67

    method_call   go to state 69
    method_name   go to state 57
    location      go to state 70
    term1         go to state 116
    term2         go to state 73
    term3         go to state 74
    term4         go to state 75
    bool_literal  go to state 76
    literal       go to state 77


State 101

   55 term1: term1 REL_OP . term2

    CALLOUT      shift, and go to state 48
    TRUE         shift, and go to state 62
    FALSE        shift, and go to state 63
    ID           shift, and go to state 49
    INT_LITERAL  shift, and go to state 64
    MINUS        shift, and go to state 65
    '!'          shift, and go to state 66
    '('          shift, and go to state 67

    method_call   go to state 69
    method_name   go to state 57
    location      go to state 70
    term2         go to state 117
    term3         go to state 74
    term4         go to state 75
    bool_literal  go to state 76
    literal       go to state 77


State 102

   57 term2: term2 EQ_OP . term3

    CALLOUT      shift, and go to state 48
    TRUE         shift, and go to state 62
    FALSE        shift, and go to state 63
    ID           shift, and go to state 49
    INT_LITERAL  shift, and go to state 64
    MINUS        shift, and go to state 65
    '!'          shift, and go to state 66
    '('          shift, and go to state 67

    method_call   go to state 69
    method_name   go to state 57
    location      go to state 70
    term3         go to state 118
    term4         go to state 75
    bool_literal  go to state 76
    literal       go to state 77


State 103

   59 term3: term3 COND_OP . term4

    CALLOUT      shift, and go to state 48
    TRUE         shift, and go to state 62
    FALSE        shift, and go to state 63
    ID           shift, and go to state 49
    INT_LITERAL  shift, and go to state 64
    MINUS        shift, and go to state 65
    '!'          shift, and go to state 66
    '('          shift, and go to state 67

    method_call   go to state 69
    method_name   go to state 57
    location      go to state 70
    term4         go to state 119
    bool_literal  go to state 76
    literal       go to state 77


State 104

   46 method_call: CALLOUT '(' STRING_LITERAL . ',' callout_args ')'
   47            | CALLOUT '(' STRING_LITERAL . ')'

    ','  shift, and go to state 120
    ')'  shift, and go to state 121


State 105

   50 location: ID '[' expr . ']'
   53 expr: expr . ARTH_OP term1

    ARITH_OP  shift, and go to state 97
    MINUS     shift, and go to state 98
    ']'       shift, and go to state 122

    ARTH_OP  go to state 100


State 106

   16 vars: ID ',' . vars

    ID  shift, and go to state 84

    vars  go to state 123


State 107

   15 vars: ID ';' .

    $default  reduce using rule 15 (vars)


State 108

   17 var_decl: type vars var_decl .

    $default  reduce using rule 17 (var_decl)


State 109

   44 method_call: method_name '(' ')' .

    $default  reduce using rule 44 (method_call)


State 110

   45 method_call: method_name '(' exprs . ')'

    ')'  shift, and go to state 124


State 111

   40 exprs: expr .
   41      | expr . ',' exprs
   53 expr: expr . ARTH_OP term1

    ARITH_OP  shift, and go to state 97
    MINUS     shift, and go to state 98
    ','       shift, and go to state 125

    $default  reduce using rule 40 (exprs)

    ARTH_OP  go to state 100


State 112

   28 statement: location ASSGN_OP expr . ';'
   53 expr: expr . ARTH_OP term1

    ARITH_OP  shift, and go to state 97
    MINUS     shift, and go to state 98
    ';'       shift, and go to state 126

    ARTH_OP  go to state 100


State 113

   30 statement: IF '(' expr ')' . block ELSE block
   31          | IF '(' expr ')' . block

    '{'  shift, and go to state 39

    block  go to state 127


State 114

   32 statement: FOR ID E_ASSIGN_OP expr . ',' expr block
   53 expr: expr . ARTH_OP term1

    ARITH_OP  shift, and go to state 97
    MINUS     shift, and go to state 98
    ','       shift, and go to state 128

    ARTH_OP  go to state 100


State 115

   66 term4: '(' expr ')' .

    $default  reduce using rule 66 (term4)


State 116

   53 expr: expr ARTH_OP term1 .
   55 term1: term1 . REL_OP term2

    REL_OP  shift, and go to state 101

    $default  reduce using rule 53 (expr)


State 117

   55 term1: term1 REL_OP term2 .
   57 term2: term2 . EQ_OP term3

    EQ_OP  shift, and go to state 102

    $default  reduce using rule 55 (term1)


State 118

   57 term2: term2 EQ_OP term3 .
   59 term3: term3 . COND_OP term4

    COND_OP  shift, and go to state 103

    $default  reduce using rule 57 (term2)


State 119

   59 term3: term3 COND_OP term4 .

    $default  reduce using rule 59 (term3)


State 120

   46 method_call: CALLOUT '(' STRING_LITERAL ',' . callout_args ')'

    CALLOUT         shift, and go to state 48
    TRUE            shift, and go to state 62
    FALSE           shift, and go to state 63
    ID              shift, and go to state 49
    STRING_LITERAL  shift, and go to state 129
    INT_LITERAL     shift, and go to state 64
    MINUS           shift, and go to state 65
    '!'             shift, and go to state 66
    '('             shift, and go to state 67

    callout_args  go to state 130
    method_call   go to state 69
    method_name   go to state 57
    location      go to state 70
    expr          go to state 131
    term1         go to state 72
    term2         go to state 73
    term3         go to state 74
    term4         go to state 75
    callout_arg   go to state 132
    bool_literal  go to state 76
    literal       go to state 77


State 121

   47 method_call: CALLOUT '(' STRING_LITERAL ')' .

    $default  reduce using rule 47 (method_call)


State 122

   50 location: ID '[' expr ']' .

    $default  reduce using rule 50 (location)


State 123

   16 vars: ID ',' vars .

    $default  reduce using rule 16 (vars)


State 124

   45 method_call: method_name '(' exprs ')' .

    $default  reduce using rule 45 (method_call)


State 125

   41 exprs: expr ',' . exprs

    CALLOUT      shift, and go to state 48
    TRUE         shift, and go to state 62
    FALSE        shift, and go to state 63
    ID           shift, and go to state 49
    INT_LITERAL  shift, and go to state 64
    MINUS        shift, and go to state 65
    '!'          shift, and go to state 66
    '('          shift, and go to state 67

    exprs         go to state 133
    method_call   go to state 69
    method_name   go to state 57
    location      go to state 70
    expr          go to state 111
    term1         go to state 72
    term2         go to state 73
    term3         go to state 74
    term4         go to state 75
    bool_literal  go to state 76
    literal       go to state 77


State 126

   28 statement: location ASSGN_OP expr ';' .

    $default  reduce using rule 28 (statement)


State 127

   30 statement: IF '(' expr ')' block . ELSE block
   31          | IF '(' expr ')' block .

    ELSE  shift, and go to state 134

    $default  reduce using rule 31 (statement)


State 128

   32 statement: FOR ID E_ASSIGN_OP expr ',' . expr block

    CALLOUT      shift, and go to state 48
    TRUE         shift, and go to state 62
    FALSE        shift, and go to state 63
    ID           shift, and go to state 49
    INT_LITERAL  shift, and go to state 64
    MINUS        shift, and go to state 65
    '!'          shift, and go to state 66
    '('          shift, and go to state 67

    method_call   go to state 69
    method_name   go to state 57
    location      go to state 70
    expr          go to state 135
    term1         go to state 72
    term2         go to state 73
    term3         go to state 74
    term4         go to state 75
    bool_literal  go to state 76
    literal       go to state 77


State 129

   68 callout_arg: STRING_LITERAL .

    $default  reduce using rule 68 (callout_arg)


State 130

   46 method_call: CALLOUT '(' STRING_LITERAL ',' callout_args . ')'

    ')'  shift, and go to state 136


State 131

   53 expr: expr . ARTH_OP term1
   67 callout_arg: expr .

    ARITH_OP  shift, and go to state 97
    MINUS     shift, and go to state 98

    $default  reduce using rule 67 (callout_arg)

    ARTH_OP  go to state 100


State 132

   42 callout_args: callout_arg .
   43             | callout_arg . ',' callout_args

    ','  shift, and go to state 137

    $default  reduce using rule 42 (callout_args)


State 133

   41 exprs: expr ',' exprs .

    $default  reduce using rule 41 (exprs)


State 134

   30 statement: IF '(' expr ')' block ELSE . block

    '{'  shift, and go to state 39

    block  go to state 138


State 135

   32 statement: FOR ID E_ASSIGN_OP expr ',' expr . block
   53 expr: expr . ARTH_OP term1

    ARITH_OP  shift, and go to state 97
    MINUS     shift, and go to state 98
    '{'       shift, and go to state 39

    block    go to state 139
    ARTH_OP  go to state 100


State 136

   46 method_call: CALLOUT '(' STRING_LITERAL ',' callout_args ')' .

    $default  reduce using rule 46 (method_call)


State 137

   43 callout_args: callout_arg ',' . callout_args

    CALLOUT         shift, and go to state 48
    TRUE            shift, and go to state 62
    FALSE           shift, and go to state 63
    ID              shift, and go to state 49
    STRING_LITERAL  shift, and go to state 129
    INT_LITERAL     shift, and go to state 64
    MINUS           shift, and go to state 65
    '!'             shift, and go to state 66
    '('             shift, and go to state 67

    callout_args  go to state 140
    method_call   go to state 69
    method_name   go to state 57
    location      go to state 70
    expr          go to state 131
    term1         go to state 72
    term2         go to state 73
    term3         go to state 74
    term4         go to state 75
    callout_arg   go to state 132
    bool_literal  go to state 76
    literal       go to state 77


State 138

   30 statement: IF '(' expr ')' block ELSE block .

    $default  reduce using rule 30 (statement)


State 139

   32 statement: FOR ID E_ASSIGN_OP expr ',' expr block .

    $default  reduce using rule 32 (statement)


State 140

   43 callout_args: callout_arg ',' callout_args .

    $default  reduce using rule 43 (callout_args)
