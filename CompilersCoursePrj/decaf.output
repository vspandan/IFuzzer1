Grammar

    0 $accept: program $end

    1 program: CLASS ID '{' field_decl method_decl '}'
    2        | CLASS ID '{' method_decl '}'

    3 field_decl: type fields ';'

    4 fields: field_block
    5       | field_block ',' fields

    6 field_block: ID
    7            | ID '[' INT_LITERAL ']'

    8 method_decl: type ID '(' args_decl ')' block
    9            | VOID ID '(' args_decl ')' block
   10            | %empty

   11 args_decl: type ID
   12          | type ID ',' args_decl

   13 vars: ID ';'
   14     | ID ',' vars

   15 var_decl: type vars var_decl
   16         | type vars

   17 block: '{' block_body '}'

   18 statements: statement
   19           | statement statements

   20 block_body: var_decl statements
   21           | var_decl
   22           | statements
   23           | %empty

   24 type: INT
   25     | BOOLEAN

   26 statement: location ASSIGN_OP expr ';'
   27          | method_call ';'
   28          | IF '(' expr ')' block ELSE block
   29          | IF '(' expr ')' block
   30          | FOR ID '=' expr ',' expr block
   31          | RETURN ';'
   32          | RETURN expr ';'
   33          | BREAK ';'
   34          | CONTINUE ';'
   35          | block

   36 exprs: expr
   37      | expr ',' exprs

   38 callout_args: callout_arg
   39             | callout_arg ',' callout_args

   40 method_call: method_name '(' ')'
   41            | method_name '(' exprs ')'
   42            | CALLOUT '(' STRING_LITERAL ',' callout_args ')'
   43            | CALLOUT '(' STRING_LITERAL ')'

   44 method_name: ID

   45 location: ID
   46         | ID '[' expr ']'

   47 expr: expr ARITH_OP term1
   48     | term1

   49 term1: term1 REL_OP term2
   50      | term2

   51 term2: term2 EQ_OP term3
   52      | term3

   53 term3: term3 COND_OP term4
   54      | term4

   55 term4: location
   56      | method_call
   57      | literal
   58      | '-' term4
   59      | '!' term4
   60      | '(' expr ')'

   61 callout_arg: expr
   62            | STRING_LITERAL

   63 bool_literal: TRUE
   64             | FALSE

   65 literal: INT_LITERAL
   66        | bool_literal


Terminals, with rules where they appear

$end (0) 0
'!' (33) 59
'(' (40) 8 9 28 29 40 41 42 43 60
')' (41) 8 9 28 29 40 41 42 43 60
',' (44) 5 12 14 30 37 39 42
'-' (45) 58
';' (59) 3 13 26 27 31 32 33 34
'=' (61) 30
'[' (91) 7 46
']' (93) 7 46
'{' (123) 1 2 17
'}' (125) 1 2 17
error (256)
INT (258) 24
BOOLEAN (259) 25
IF (260) 28 29
ELSE (261) 28
FOR (262) 30
RETURN (263) 31 32
BREAK (264) 33
CONTINUE (265) 34
CLASS (266) 1 2
VOID (267) 9
CALLOUT (268) 42 43
TRUE (269) 63
FALSE (270) 64
ASSIGN_OP (271) 26
ID (272) 1 2 6 7 8 9 11 12 13 14 30 44 45 46
STRING_LITERAL (273) 42 43 62
ARITH_OP (274) 47
REL_OP (275) 49
EQ_OP (276) 51
COND_OP (277) 53
INT_LITERAL (278) 7 65


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
program (36)
    on left: 1 2, on right: 0
field_decl (37)
    on left: 3, on right: 1
fields (38)
    on left: 4 5, on right: 3 5
field_block (39)
    on left: 6 7, on right: 4 5
method_decl (40)
    on left: 8 9 10, on right: 1 2
args_decl (41)
    on left: 11 12, on right: 8 9 12
vars (42)
    on left: 13 14, on right: 14 15 16
var_decl (43)
    on left: 15 16, on right: 15 20 21
block (44)
    on left: 17, on right: 8 9 28 29 30 35
statements (45)
    on left: 18 19, on right: 19 20 22
block_body (46)
    on left: 20 21 22 23, on right: 17
type (47)
    on left: 24 25, on right: 3 8 11 12 15 16
statement (48)
    on left: 26 27 28 29 30 31 32 33 34 35, on right: 18 19
exprs (49)
    on left: 36 37, on right: 37 41
callout_args (50)
    on left: 38 39, on right: 39 42
method_call (51)
    on left: 40 41 42 43, on right: 27 56
method_name (52)
    on left: 44, on right: 40 41
location (53)
    on left: 45 46, on right: 26 55
expr (54)
    on left: 47 48, on right: 26 28 29 30 32 36 37 46 47 60 61
term1 (55)
    on left: 49 50, on right: 47 48 49
term2 (56)
    on left: 51 52, on right: 49 50 51
term3 (57)
    on left: 53 54, on right: 51 52 53
term4 (58)
    on left: 55 56 57 58 59 60, on right: 53 54 58 59
callout_arg (59)
    on left: 61 62, on right: 38 39
bool_literal (60)
    on left: 63 64, on right: 66
literal (61)
    on left: 65 66, on right: 57


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . ID '{' field_decl method_decl '}'
    2        | CLASS . ID '{' method_decl '}'

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS ID . '{' field_decl method_decl '}'
    2        | CLASS ID . '{' method_decl '}'

    '{'  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS ID '{' . field_decl method_decl '}'
    2        | CLASS ID '{' . method_decl '}'

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    VOID     shift, and go to state 8

    $default  reduce using rule 10 (method_decl)

    field_decl   go to state 9
    method_decl  go to state 10
    type         go to state 11


State 6

   24 type: INT .

    $default  reduce using rule 24 (type)


State 7

   25 type: BOOLEAN .

    $default  reduce using rule 25 (type)


State 8

    9 method_decl: VOID . ID '(' args_decl ')' block

    ID  shift, and go to state 12


State 9

    1 program: CLASS ID '{' field_decl . method_decl '}'

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    VOID     shift, and go to state 8

    $default  reduce using rule 10 (method_decl)

    method_decl  go to state 13
    type         go to state 14


State 10

    2 program: CLASS ID '{' method_decl . '}'

    '}'  shift, and go to state 15


State 11

    3 field_decl: type . fields ';'
    8 method_decl: type . ID '(' args_decl ')' block

    ID  shift, and go to state 16

    fields       go to state 17
    field_block  go to state 18


State 12

    9 method_decl: VOID ID . '(' args_decl ')' block

    '('  shift, and go to state 19


State 13

    1 program: CLASS ID '{' field_decl method_decl . '}'

    '}'  shift, and go to state 20


State 14

    8 method_decl: type . ID '(' args_decl ')' block

    ID  shift, and go to state 21


State 15

    2 program: CLASS ID '{' method_decl '}' .

    $default  reduce using rule 2 (program)


State 16

    6 field_block: ID .
    7            | ID . '[' INT_LITERAL ']'
    8 method_decl: type ID . '(' args_decl ')' block

    '['  shift, and go to state 22
    '('  shift, and go to state 23

    $default  reduce using rule 6 (field_block)


State 17

    3 field_decl: type fields . ';'

    ';'  shift, and go to state 24


State 18

    4 fields: field_block .
    5       | field_block . ',' fields

    ','  shift, and go to state 25

    $default  reduce using rule 4 (fields)


State 19

    9 method_decl: VOID ID '(' . args_decl ')' block

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    args_decl  go to state 26
    type       go to state 27


State 20

    1 program: CLASS ID '{' field_decl method_decl '}' .

    $default  reduce using rule 1 (program)


State 21

    8 method_decl: type ID . '(' args_decl ')' block

    '('  shift, and go to state 23


State 22

    7 field_block: ID '[' . INT_LITERAL ']'

    INT_LITERAL  shift, and go to state 28


State 23

    8 method_decl: type ID '(' . args_decl ')' block

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    args_decl  go to state 29
    type       go to state 27


State 24

    3 field_decl: type fields ';' .

    $default  reduce using rule 3 (field_decl)


State 25

    5 fields: field_block ',' . fields

    ID  shift, and go to state 30

    fields       go to state 31
    field_block  go to state 18


State 26

    9 method_decl: VOID ID '(' args_decl . ')' block

    ')'  shift, and go to state 32


State 27

   11 args_decl: type . ID
   12          | type . ID ',' args_decl

    ID  shift, and go to state 33


State 28

    7 field_block: ID '[' INT_LITERAL . ']'

    ']'  shift, and go to state 34


State 29

    8 method_decl: type ID '(' args_decl . ')' block

    ')'  shift, and go to state 35


State 30

    6 field_block: ID .
    7            | ID . '[' INT_LITERAL ']'

    '['  shift, and go to state 22

    $default  reduce using rule 6 (field_block)


State 31

    5 fields: field_block ',' fields .

    $default  reduce using rule 5 (fields)


State 32

    9 method_decl: VOID ID '(' args_decl ')' . block

    '{'  shift, and go to state 36

    block  go to state 37


State 33

   11 args_decl: type ID .
   12          | type ID . ',' args_decl

    ','  shift, and go to state 38

    $default  reduce using rule 11 (args_decl)


State 34

    7 field_block: ID '[' INT_LITERAL ']' .

    $default  reduce using rule 7 (field_block)


State 35

    8 method_decl: type ID '(' args_decl ')' . block

    '{'  shift, and go to state 36

    block  go to state 39


State 36

   17 block: '{' . block_body '}'

    INT       shift, and go to state 6
    BOOLEAN   shift, and go to state 7
    IF        shift, and go to state 40
    FOR       shift, and go to state 41
    RETURN    shift, and go to state 42
    BREAK     shift, and go to state 43
    CONTINUE  shift, and go to state 44
    CALLOUT   shift, and go to state 45
    ID        shift, and go to state 46
    '{'       shift, and go to state 36

    $default  reduce using rule 23 (block_body)

    var_decl     go to state 47
    block        go to state 48
    statements   go to state 49
    block_body   go to state 50
    type         go to state 51
    statement    go to state 52
    method_call  go to state 53
    method_name  go to state 54
    location     go to state 55


State 37

    9 method_decl: VOID ID '(' args_decl ')' block .

    $default  reduce using rule 9 (method_decl)


State 38

   12 args_decl: type ID ',' . args_decl

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    args_decl  go to state 56
    type       go to state 27


State 39

    8 method_decl: type ID '(' args_decl ')' block .

    $default  reduce using rule 8 (method_decl)


State 40

   28 statement: IF . '(' expr ')' block ELSE block
   29          | IF . '(' expr ')' block

    '('  shift, and go to state 57


State 41

   30 statement: FOR . ID '=' expr ',' expr block

    ID  shift, and go to state 58


State 42

   31 statement: RETURN . ';'
   32          | RETURN . expr ';'

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 59
    FALSE        shift, and go to state 60
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 61
    '-'          shift, and go to state 62
    '!'          shift, and go to state 63
    ';'          shift, and go to state 64
    '('          shift, and go to state 65

    method_call   go to state 66
    method_name   go to state 54
    location      go to state 67
    expr          go to state 68
    term1         go to state 69
    term2         go to state 70
    term3         go to state 71
    term4         go to state 72
    bool_literal  go to state 73
    literal       go to state 74


State 43

   33 statement: BREAK . ';'

    ';'  shift, and go to state 75


State 44

   34 statement: CONTINUE . ';'

    ';'  shift, and go to state 76


State 45

   42 method_call: CALLOUT . '(' STRING_LITERAL ',' callout_args ')'
   43            | CALLOUT . '(' STRING_LITERAL ')'

    '('  shift, and go to state 77


State 46

   44 method_name: ID .
   45 location: ID .
   46         | ID . '[' expr ']'

    '['  shift, and go to state 78

    '('       reduce using rule 44 (method_name)
    $default  reduce using rule 45 (location)


State 47

   20 block_body: var_decl . statements
   21           | var_decl .

    IF        shift, and go to state 40
    FOR       shift, and go to state 41
    RETURN    shift, and go to state 42
    BREAK     shift, and go to state 43
    CONTINUE  shift, and go to state 44
    CALLOUT   shift, and go to state 45
    ID        shift, and go to state 46
    '{'       shift, and go to state 36

    $default  reduce using rule 21 (block_body)

    block        go to state 48
    statements   go to state 79
    statement    go to state 52
    method_call  go to state 53
    method_name  go to state 54
    location     go to state 55


State 48

   35 statement: block .

    $default  reduce using rule 35 (statement)


State 49

   22 block_body: statements .

    $default  reduce using rule 22 (block_body)


State 50

   17 block: '{' block_body . '}'

    '}'  shift, and go to state 80


State 51

   15 var_decl: type . vars var_decl
   16         | type . vars

    ID  shift, and go to state 81

    vars  go to state 82


State 52

   18 statements: statement .
   19           | statement . statements

    IF        shift, and go to state 40
    FOR       shift, and go to state 41
    RETURN    shift, and go to state 42
    BREAK     shift, and go to state 43
    CONTINUE  shift, and go to state 44
    CALLOUT   shift, and go to state 45
    ID        shift, and go to state 46
    '{'       shift, and go to state 36

    $default  reduce using rule 18 (statements)

    block        go to state 48
    statements   go to state 83
    statement    go to state 52
    method_call  go to state 53
    method_name  go to state 54
    location     go to state 55


State 53

   27 statement: method_call . ';'

    ';'  shift, and go to state 84


State 54

   40 method_call: method_name . '(' ')'
   41            | method_name . '(' exprs ')'

    '('  shift, and go to state 85


State 55

   26 statement: location . ASSIGN_OP expr ';'

    ASSIGN_OP  shift, and go to state 86


State 56

   12 args_decl: type ID ',' args_decl .

    $default  reduce using rule 12 (args_decl)


State 57

   28 statement: IF '(' . expr ')' block ELSE block
   29          | IF '(' . expr ')' block

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 59
    FALSE        shift, and go to state 60
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 61
    '-'          shift, and go to state 62
    '!'          shift, and go to state 63
    '('          shift, and go to state 65

    method_call   go to state 66
    method_name   go to state 54
    location      go to state 67
    expr          go to state 87
    term1         go to state 69
    term2         go to state 70
    term3         go to state 71
    term4         go to state 72
    bool_literal  go to state 73
    literal       go to state 74


State 58

   30 statement: FOR ID . '=' expr ',' expr block

    '='  shift, and go to state 88


State 59

   63 bool_literal: TRUE .

    $default  reduce using rule 63 (bool_literal)


State 60

   64 bool_literal: FALSE .

    $default  reduce using rule 64 (bool_literal)


State 61

   65 literal: INT_LITERAL .

    $default  reduce using rule 65 (literal)


State 62

   58 term4: '-' . term4

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 59
    FALSE        shift, and go to state 60
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 61
    '-'          shift, and go to state 62
    '!'          shift, and go to state 63
    '('          shift, and go to state 65

    method_call   go to state 66
    method_name   go to state 54
    location      go to state 67
    term4         go to state 89
    bool_literal  go to state 73
    literal       go to state 74


State 63

   59 term4: '!' . term4

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 59
    FALSE        shift, and go to state 60
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 61
    '-'          shift, and go to state 62
    '!'          shift, and go to state 63
    '('          shift, and go to state 65

    method_call   go to state 66
    method_name   go to state 54
    location      go to state 67
    term4         go to state 90
    bool_literal  go to state 73
    literal       go to state 74


State 64

   31 statement: RETURN ';' .

    $default  reduce using rule 31 (statement)


State 65

   60 term4: '(' . expr ')'

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 59
    FALSE        shift, and go to state 60
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 61
    '-'          shift, and go to state 62
    '!'          shift, and go to state 63
    '('          shift, and go to state 65

    method_call   go to state 66
    method_name   go to state 54
    location      go to state 67
    expr          go to state 91
    term1         go to state 69
    term2         go to state 70
    term3         go to state 71
    term4         go to state 72
    bool_literal  go to state 73
    literal       go to state 74


State 66

   56 term4: method_call .

    $default  reduce using rule 56 (term4)


State 67

   55 term4: location .

    $default  reduce using rule 55 (term4)


State 68

   32 statement: RETURN expr . ';'
   47 expr: expr . ARITH_OP term1

    ARITH_OP  shift, and go to state 92
    ';'       shift, and go to state 93


State 69

   48 expr: term1 .
   49 term1: term1 . REL_OP term2

    REL_OP  shift, and go to state 94

    $default  reduce using rule 48 (expr)


State 70

   50 term1: term2 .
   51 term2: term2 . EQ_OP term3

    EQ_OP  shift, and go to state 95

    $default  reduce using rule 50 (term1)


State 71

   52 term2: term3 .
   53 term3: term3 . COND_OP term4

    COND_OP  shift, and go to state 96

    $default  reduce using rule 52 (term2)


State 72

   54 term3: term4 .

    $default  reduce using rule 54 (term3)


State 73

   66 literal: bool_literal .

    $default  reduce using rule 66 (literal)


State 74

   57 term4: literal .

    $default  reduce using rule 57 (term4)


State 75

   33 statement: BREAK ';' .

    $default  reduce using rule 33 (statement)


State 76

   34 statement: CONTINUE ';' .

    $default  reduce using rule 34 (statement)


State 77

   42 method_call: CALLOUT '(' . STRING_LITERAL ',' callout_args ')'
   43            | CALLOUT '(' . STRING_LITERAL ')'

    STRING_LITERAL  shift, and go to state 97


State 78

   46 location: ID '[' . expr ']'

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 59
    FALSE        shift, and go to state 60
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 61
    '-'          shift, and go to state 62
    '!'          shift, and go to state 63
    '('          shift, and go to state 65

    method_call   go to state 66
    method_name   go to state 54
    location      go to state 67
    expr          go to state 98
    term1         go to state 69
    term2         go to state 70
    term3         go to state 71
    term4         go to state 72
    bool_literal  go to state 73
    literal       go to state 74


State 79

   20 block_body: var_decl statements .

    $default  reduce using rule 20 (block_body)


State 80

   17 block: '{' block_body '}' .

    $default  reduce using rule 17 (block)


State 81

   13 vars: ID . ';'
   14     | ID . ',' vars

    ';'  shift, and go to state 99
    ','  shift, and go to state 100


State 82

   15 var_decl: type vars . var_decl
   16         | type vars .

    INT      shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    $default  reduce using rule 16 (var_decl)

    var_decl  go to state 101
    type      go to state 51


State 83

   19 statements: statement statements .

    $default  reduce using rule 19 (statements)


State 84

   27 statement: method_call ';' .

    $default  reduce using rule 27 (statement)


State 85

   40 method_call: method_name '(' . ')'
   41            | method_name '(' . exprs ')'

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 59
    FALSE        shift, and go to state 60
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 61
    '-'          shift, and go to state 62
    '!'          shift, and go to state 63
    '('          shift, and go to state 65
    ')'          shift, and go to state 102

    exprs         go to state 103
    method_call   go to state 66
    method_name   go to state 54
    location      go to state 67
    expr          go to state 104
    term1         go to state 69
    term2         go to state 70
    term3         go to state 71
    term4         go to state 72
    bool_literal  go to state 73
    literal       go to state 74


State 86

   26 statement: location ASSIGN_OP . expr ';'

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 59
    FALSE        shift, and go to state 60
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 61
    '-'          shift, and go to state 62
    '!'          shift, and go to state 63
    '('          shift, and go to state 65

    method_call   go to state 66
    method_name   go to state 54
    location      go to state 67
    expr          go to state 105
    term1         go to state 69
    term2         go to state 70
    term3         go to state 71
    term4         go to state 72
    bool_literal  go to state 73
    literal       go to state 74


State 87

   28 statement: IF '(' expr . ')' block ELSE block
   29          | IF '(' expr . ')' block
   47 expr: expr . ARITH_OP term1

    ARITH_OP  shift, and go to state 92
    ')'       shift, and go to state 106


State 88

   30 statement: FOR ID '=' . expr ',' expr block

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 59
    FALSE        shift, and go to state 60
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 61
    '-'          shift, and go to state 62
    '!'          shift, and go to state 63
    '('          shift, and go to state 65

    method_call   go to state 66
    method_name   go to state 54
    location      go to state 67
    expr          go to state 107
    term1         go to state 69
    term2         go to state 70
    term3         go to state 71
    term4         go to state 72
    bool_literal  go to state 73
    literal       go to state 74


State 89

   58 term4: '-' term4 .

    $default  reduce using rule 58 (term4)


State 90

   59 term4: '!' term4 .

    $default  reduce using rule 59 (term4)


State 91

   47 expr: expr . ARITH_OP term1
   60 term4: '(' expr . ')'

    ARITH_OP  shift, and go to state 92
    ')'       shift, and go to state 108


State 92

   47 expr: expr ARITH_OP . term1

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 59
    FALSE        shift, and go to state 60
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 61
    '-'          shift, and go to state 62
    '!'          shift, and go to state 63
    '('          shift, and go to state 65

    method_call   go to state 66
    method_name   go to state 54
    location      go to state 67
    term1         go to state 109
    term2         go to state 70
    term3         go to state 71
    term4         go to state 72
    bool_literal  go to state 73
    literal       go to state 74


State 93

   32 statement: RETURN expr ';' .

    $default  reduce using rule 32 (statement)


State 94

   49 term1: term1 REL_OP . term2

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 59
    FALSE        shift, and go to state 60
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 61
    '-'          shift, and go to state 62
    '!'          shift, and go to state 63
    '('          shift, and go to state 65

    method_call   go to state 66
    method_name   go to state 54
    location      go to state 67
    term2         go to state 110
    term3         go to state 71
    term4         go to state 72
    bool_literal  go to state 73
    literal       go to state 74


State 95

   51 term2: term2 EQ_OP . term3

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 59
    FALSE        shift, and go to state 60
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 61
    '-'          shift, and go to state 62
    '!'          shift, and go to state 63
    '('          shift, and go to state 65

    method_call   go to state 66
    method_name   go to state 54
    location      go to state 67
    term3         go to state 111
    term4         go to state 72
    bool_literal  go to state 73
    literal       go to state 74


State 96

   53 term3: term3 COND_OP . term4

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 59
    FALSE        shift, and go to state 60
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 61
    '-'          shift, and go to state 62
    '!'          shift, and go to state 63
    '('          shift, and go to state 65

    method_call   go to state 66
    method_name   go to state 54
    location      go to state 67
    term4         go to state 112
    bool_literal  go to state 73
    literal       go to state 74


State 97

   42 method_call: CALLOUT '(' STRING_LITERAL . ',' callout_args ')'
   43            | CALLOUT '(' STRING_LITERAL . ')'

    ','  shift, and go to state 113
    ')'  shift, and go to state 114


State 98

   46 location: ID '[' expr . ']'
   47 expr: expr . ARITH_OP term1

    ARITH_OP  shift, and go to state 92
    ']'       shift, and go to state 115


State 99

   13 vars: ID ';' .

    $default  reduce using rule 13 (vars)


State 100

   14 vars: ID ',' . vars

    ID  shift, and go to state 81

    vars  go to state 116


State 101

   15 var_decl: type vars var_decl .

    $default  reduce using rule 15 (var_decl)


State 102

   40 method_call: method_name '(' ')' .

    $default  reduce using rule 40 (method_call)


State 103

   41 method_call: method_name '(' exprs . ')'

    ')'  shift, and go to state 117


State 104

   36 exprs: expr .
   37      | expr . ',' exprs
   47 expr: expr . ARITH_OP term1

    ARITH_OP  shift, and go to state 92
    ','       shift, and go to state 118

    $default  reduce using rule 36 (exprs)


State 105

   26 statement: location ASSIGN_OP expr . ';'
   47 expr: expr . ARITH_OP term1

    ARITH_OP  shift, and go to state 92
    ';'       shift, and go to state 119


State 106

   28 statement: IF '(' expr ')' . block ELSE block
   29          | IF '(' expr ')' . block

    '{'  shift, and go to state 36

    block  go to state 120


State 107

   30 statement: FOR ID '=' expr . ',' expr block
   47 expr: expr . ARITH_OP term1

    ARITH_OP  shift, and go to state 92
    ','       shift, and go to state 121


State 108

   60 term4: '(' expr ')' .

    $default  reduce using rule 60 (term4)


State 109

   47 expr: expr ARITH_OP term1 .
   49 term1: term1 . REL_OP term2

    REL_OP  shift, and go to state 94

    $default  reduce using rule 47 (expr)


State 110

   49 term1: term1 REL_OP term2 .
   51 term2: term2 . EQ_OP term3

    EQ_OP  shift, and go to state 95

    $default  reduce using rule 49 (term1)


State 111

   51 term2: term2 EQ_OP term3 .
   53 term3: term3 . COND_OP term4

    COND_OP  shift, and go to state 96

    $default  reduce using rule 51 (term2)


State 112

   53 term3: term3 COND_OP term4 .

    $default  reduce using rule 53 (term3)


State 113

   42 method_call: CALLOUT '(' STRING_LITERAL ',' . callout_args ')'

    CALLOUT         shift, and go to state 45
    TRUE            shift, and go to state 59
    FALSE           shift, and go to state 60
    ID              shift, and go to state 46
    STRING_LITERAL  shift, and go to state 122
    INT_LITERAL     shift, and go to state 61
    '-'             shift, and go to state 62
    '!'             shift, and go to state 63
    '('             shift, and go to state 65

    callout_args  go to state 123
    method_call   go to state 66
    method_name   go to state 54
    location      go to state 67
    expr          go to state 124
    term1         go to state 69
    term2         go to state 70
    term3         go to state 71
    term4         go to state 72
    callout_arg   go to state 125
    bool_literal  go to state 73
    literal       go to state 74


State 114

   43 method_call: CALLOUT '(' STRING_LITERAL ')' .

    $default  reduce using rule 43 (method_call)


State 115

   46 location: ID '[' expr ']' .

    $default  reduce using rule 46 (location)


State 116

   14 vars: ID ',' vars .

    $default  reduce using rule 14 (vars)


State 117

   41 method_call: method_name '(' exprs ')' .

    $default  reduce using rule 41 (method_call)


State 118

   37 exprs: expr ',' . exprs

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 59
    FALSE        shift, and go to state 60
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 61
    '-'          shift, and go to state 62
    '!'          shift, and go to state 63
    '('          shift, and go to state 65

    exprs         go to state 126
    method_call   go to state 66
    method_name   go to state 54
    location      go to state 67
    expr          go to state 104
    term1         go to state 69
    term2         go to state 70
    term3         go to state 71
    term4         go to state 72
    bool_literal  go to state 73
    literal       go to state 74


State 119

   26 statement: location ASSIGN_OP expr ';' .

    $default  reduce using rule 26 (statement)


State 120

   28 statement: IF '(' expr ')' block . ELSE block
   29          | IF '(' expr ')' block .

    ELSE  shift, and go to state 127

    $default  reduce using rule 29 (statement)


State 121

   30 statement: FOR ID '=' expr ',' . expr block

    CALLOUT      shift, and go to state 45
    TRUE         shift, and go to state 59
    FALSE        shift, and go to state 60
    ID           shift, and go to state 46
    INT_LITERAL  shift, and go to state 61
    '-'          shift, and go to state 62
    '!'          shift, and go to state 63
    '('          shift, and go to state 65

    method_call   go to state 66
    method_name   go to state 54
    location      go to state 67
    expr          go to state 128
    term1         go to state 69
    term2         go to state 70
    term3         go to state 71
    term4         go to state 72
    bool_literal  go to state 73
    literal       go to state 74


State 122

   62 callout_arg: STRING_LITERAL .

    $default  reduce using rule 62 (callout_arg)


State 123

   42 method_call: CALLOUT '(' STRING_LITERAL ',' callout_args . ')'

    ')'  shift, and go to state 129


State 124

   47 expr: expr . ARITH_OP term1
   61 callout_arg: expr .

    ARITH_OP  shift, and go to state 92

    $default  reduce using rule 61 (callout_arg)


State 125

   38 callout_args: callout_arg .
   39             | callout_arg . ',' callout_args

    ','  shift, and go to state 130

    $default  reduce using rule 38 (callout_args)


State 126

   37 exprs: expr ',' exprs .

    $default  reduce using rule 37 (exprs)


State 127

   28 statement: IF '(' expr ')' block ELSE . block

    '{'  shift, and go to state 36

    block  go to state 131


State 128

   30 statement: FOR ID '=' expr ',' expr . block
   47 expr: expr . ARITH_OP term1

    ARITH_OP  shift, and go to state 92
    '{'       shift, and go to state 36

    block  go to state 132


State 129

   42 method_call: CALLOUT '(' STRING_LITERAL ',' callout_args ')' .

    $default  reduce using rule 42 (method_call)


State 130

   39 callout_args: callout_arg ',' . callout_args

    CALLOUT         shift, and go to state 45
    TRUE            shift, and go to state 59
    FALSE           shift, and go to state 60
    ID              shift, and go to state 46
    STRING_LITERAL  shift, and go to state 122
    INT_LITERAL     shift, and go to state 61
    '-'             shift, and go to state 62
    '!'             shift, and go to state 63
    '('             shift, and go to state 65

    callout_args  go to state 133
    method_call   go to state 66
    method_name   go to state 54
    location      go to state 67
    expr          go to state 124
    term1         go to state 69
    term2         go to state 70
    term3         go to state 71
    term4         go to state 72
    callout_arg   go to state 125
    bool_literal  go to state 73
    literal       go to state 74


State 131

   28 statement: IF '(' expr ')' block ELSE block .

    $default  reduce using rule 28 (statement)


State 132

   30 statement: FOR ID '=' expr ',' expr block .

    $default  reduce using rule 30 (statement)


State 133

   39 callout_args: callout_arg ',' callout_args .

    $default  reduce using rule 39 (callout_args)
