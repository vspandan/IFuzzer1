Note:

1. Use below Regular expressions and the rules while defining/writing a grammar for source language
2. Grammars must be expressed in ebnf form of context free grammars
3. This parse can accept only unambiguous grammar



DIGIT		       	[0-9]
HEX_DIGIT  	      	[0-9a-fA-F]
HEX_INTEGER       	0[Xx]{HEX_DIGIT}+
INTEGER           	{DIGIT}+
EXPONENT          	[Ee][-+]?{INTEGER}
DOUBLE          	{INTEGER}"."{DIGIT}*{EXPONENT}?
STRING  	  	\"[^"\n]*\"
IDENTIFIER        	[a-zA-Z][a-zA-Z_0-9]*
ARITH_OP		([+/*%])
REL_OP			[<|>]


{STRING} 		{ return STRING_LITERAL; }
{INTEGER}		{ return INT_LITERAL; }
{DOUBLE}		{ return INT_LITERAL; }
{HEX_INTEGER}     	{ return INT_LITERAL; }
{IDENTIFIER}            { return ID;  }
"="			{ return E_ASSIGN_OP; }
"-="                    { return ASSIGN_OP; }
"+="                    { return ASSIGN_OP; }
"<="                    { return EQ_OP;   }
">="                    { return EQ_OP;}
"=="                    { return EQ_OP;       }
"!="                    { return EQ_OP;    }
"&&"                    { return COND_OP;         }
"||"                    { return COND_OP;          }
{REL_OP}                { return REL_OP;  }
{ARITH_OP}              { return ARITH_OP; }
"-"			{ return MINUS ; }