Nonterminals useless in grammar

   elisionExprs
   propertyAssignments
   singleExpressions


Terminals unused in grammar

   ASSIGN_OP
   E_ASSIGN_OP
   CHAR_LITERAL
   EQ_OP
   COND_OP
   REL_OP
   ARITH_OP


Rules useless in grammar

  253 elisionExprs: elisionExpr ',' elisionExprs
  254             | elisionExpr

  255 propertyNameAndValueList: propertyAssignments propertyNameAndValueList

  256 propertyAssignments: propertyAssignment ',' propertyAssignments

  257 argumentList: singleExpressions argumentList

  258 singleExpressions: singleExpression ',' singleExpressions

  259 expressionSequence: singleExpressions expressionSequence


Rules useless in parser due to conflicts

   70 caseClause: Case expressionSequence ':'

   72 defaultClause: Default ':'

  115 singleExpression: New singleExpression arguments


State 26 conflicts: 1 shift/reduce
State 28 conflicts: 1 shift/reduce
State 58 conflicts: 19 shift/reduce
State 59 conflicts: 2 shift/reduce
State 64 conflicts: 1 shift/reduce
State 68 conflicts: 1 shift/reduce
State 69 conflicts: 19 shift/reduce
State 71 conflicts: 1 shift/reduce
State 109 conflicts: 3 reduce/reduce
State 122 conflicts: 1 shift/reduce
State 129 conflicts: 1 shift/reduce
State 132 conflicts: 19 shift/reduce
State 134 conflicts: 1 shift/reduce
State 148 conflicts: 2 shift/reduce
State 152 conflicts: 1 shift/reduce, 1 reduce/reduce
State 159 conflicts: 19 shift/reduce
State 161 conflicts: 19 shift/reduce
State 208 conflicts: 19 shift/reduce
State 209 conflicts: 19 shift/reduce
State 215 conflicts: 19 shift/reduce
State 226 conflicts: 19 shift/reduce
State 237 conflicts: 1 shift/reduce
State 241 conflicts: 3 shift/reduce
State 274 conflicts: 19 shift/reduce
State 275 conflicts: 19 shift/reduce
State 297 conflicts: 60 reduce/reduce
State 299 conflicts: 1 shift/reduce
State 330 conflicts: 4 shift/reduce
State 350 conflicts: 19 shift/reduce
State 358 conflicts: 19 shift/reduce
State 368 conflicts: 1 shift/reduce
State 417 conflicts: 2 reduce/reduce
State 435 conflicts: 3 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: sourceElements
    2        | %empty

    3 sourceElements: sourceElement
    4               | sourceElement sourceElements

    5 sourceElement: statement
    6              | functionDeclaration

    7 statement: block
    8          | variableStatement
    9          | emptyStatement
   10          | expressionStatement
   11          | ifStatement
   12          | iterationStatement
   13          | continueStatement
   14          | breakStatement
   15          | returnStatement
   16          | withStatement
   17          | labelledStatement
   18          | switchStatement
   19          | throwStatement
   20          | tryStatement
   21          | debuggerStatement

   22 block: '{' statementList '}'

   23 statementList: statement
   24              | statement statementList
   25              | %empty

   26 variableStatement: Var variableDeclarationList eos

   27 variableDeclarationList: variableDeclaration ',' variableDeclarationList
   28                        | variableDeclaration

   29 variableDeclaration: Identifier
   30                    | Identifier initialiser
   31                    | %empty

   32 initialiser: '=' singleExpression

   33 emptyStatement: ';'

   34 expressionStatement: expressionSequence

   35 ifStatement: If '(' expressionSequence ')' statement Else statement
   36            | If '(' expressionSequence ')' statement

   37 iterationStatement: Do statement While '(' expressionSequence ')' eos
   38                   | While '(' expressionSequence ')' statement
   39                   | For '(' expressionSequence ';' expressionSequence ';' expressionSequence ')' statement
   40                   | For '(' ';' expressionSequence ';' expressionSequence ')' statement
   41                   | For '(' expressionSequence ';' ';' expressionSequence ')' statement
   42                   | For '(' ';' ';' expressionSequence ')' statement
   43                   | For '(' expressionSequence ';' expressionSequence ';' ')' statement
   44                   | For '(' expressionSequence ';' ';' ')' statement
   45                   | For '(' ';' expressionSequence ';' ')' statement
   46                   | For '(' ';' ';' ')' statement
   47                   | For '(' Var variableDeclarationList ';' expressionSequence ';' expressionSequence ')' statement
   48                   | For '(' Var variableDeclarationList ';' expressionSequence ';' ')' statement
   49                   | For '(' Var variableDeclarationList ';' ';' expressionSequence ')' statement
   50                   | For '(' Var variableDeclarationList ';' ';' ')' statement
   51                   | For '(' singleExpression In expressionSequence ')' statement
   52                   | For '(' Var variableDeclaration In expressionSequence ')' statement

   53 continueStatement: Continue Identifier eos
   54                  | Continue eos

   55 breakStatement: Break Identifier eos
   56               | Break eos

   57 returnStatement: Return expressionSequence eos
   58                | Return eos

   59 withStatement: With '(' expressionSequence ')' statement

   60 switchStatement: Switch '(' expressionSequence ')' caseBlock

   61 caseBlock: '{' caseClauses defaultClause caseClauses '}'
   62          | '{' caseClauses defaultClause '}'
   63          | '{' caseClauses '}'
   64          | '{' defaultClause caseClauses '}'
   65          | '{' defaultClause '}'
   66          | '{' '}'

   67 caseClauses: caseClause
   68            | caseClause caseClauses

   69 caseClause: Case expressionSequence ':' statementList
   70           | Case expressionSequence ':'

   71 defaultClause: Default ':' statementList
   72              | Default ':'

   73 labelledStatement: Identifier ':' statement

   74 throwStatement: Throw expressionSequence eos

   75 tryStatement: Try block catchProduction
   76             | Try block finallyProduction
   77             | Try block catchProduction finallyProduction

   78 catchProduction: Catch '(' Identifier ')' block

   79 finallyProduction: Finally block

   80 debuggerStatement: Debugger eos

   81 functionDeclaration: Function Identifier '(' formalParameterList ')' '{' functionBody '}'
   82                    | Function Identifier '(' ')' '{' functionBody '}'

   83 formalParameterList: Identifier ',' formalParameterList
   84                    | Identifier

   85 functionBody: sourceElements
   86             | %empty

   87 arrayLiteral: '[' ']'
   88             | '[' elementList ']'
   89             | '[' elementList ',' elision ']'

   90 elementList: elisionExpr elementList
   91            | elisionExpr

   92 elisionExpr: elision singleExpression

   93 elision: ','
   94        | elision ','
   95        | %empty

   96 objectLiteral: '{' propertyNameAndValueList ',' '}'
   97              | '{' propertyNameAndValueList '}'
   98              | '{' ',' '}'
   99              | '{' '}'

  100 propertyNameAndValueList: propertyAssignment

  101 propertyAssignment: propertyName ':' singleExpression
  102                   | Identifier '(' ')' '{' functionBody '}'
  103                   | Identifier '(' propertySetParameterList ')' '{' functionBody '}'

  104 propertyName: identifierName
  105             | StringLiteral
  106             | numericLiteral

  107 propertySetParameterList: Identifier

  108 arguments: '(' argumentList ')'
  109          | '(' ')'

  110 argumentList: singleExpression

  111 expressionSequence: singleExpression

  112 singleExpression: singleExpression '[' expressionSequence ']'
  113                 | singleExpression '.' identifierName
  114                 | singleExpression arguments
  115                 | New singleExpression arguments
  116                 | New singleExpression
  117                 | singleExpression "++"
  118                 | singleExpression "--"
  119                 | Delete singleExpression
  120                 | Void singleExpression
  121                 | Typeof singleExpression
  122                 | "++" literal
  123                 | "--" literal
  124                 | '+' literal
  125                 | '-' literal
  126                 | '~' singleExpression
  127                 | '!' singleExpression
  128                 | literal '*' literal
  129                 | literal '/' literal
  130                 | literal '%' literal
  131                 | literal '+' literal
  132                 | literal '-' literal
  133                 | literal "<<" literal
  134                 | literal ">>" literal
  135                 | literal ">>>" literal
  136                 | literal '<' literal
  137                 | literal '>' literal
  138                 | literal "<=" literal
  139                 | literal ">=" literal
  140                 | singleExpression Instanceof singleExpression
  141                 | singleExpression In singleExpression
  142                 | literal "==" literal
  143                 | literal "!=" literal
  144                 | literal "===" literal
  145                 | literal "!==" literal
  146                 | literal '&' literal
  147                 | literal '^' literal
  148                 | literal "&&" literal
  149                 | singleExpression '?' singleExpression ':' singleExpression
  150                 | singleExpression '=' expressionSequence
  151                 | singleExpression assignmentOperator expressionSequence
  152                 | This
  153                 | Identifier
  154                 | literal
  155                 | arrayLiteral
  156                 | objectLiteral

  157 assignmentOperator: "*="
  158                   | "/="
  159                   | "%="
  160                   | "+="
  161                   | "-="
  162                   | "<<="
  163                   | ">>="
  164                   | ">>>="
  165                   | "&="
  166                   | "^="

  167 identifierName: Identifier
  168               | reservedWord

  169 keyword: Break
  170        | Do
  171        | Instanceof
  172        | Typeof
  173        | Case
  174        | Else
  175        | New
  176        | Var
  177        | Catch
  178        | Finally
  179        | Return
  180        | Void
  181        | Continue
  182        | For
  183        | Switch
  184        | While
  185        | Debugger
  186        | Function
  187        | This
  188        | With
  189        | Default
  190        | If
  191        | Throw
  192        | Delete
  193        | In
  194        | Try

  195 reservedWord: keyword
  196             | futureReservedWord
  197             | NullLiteral
  198             | BooleanLiteral

  199 literal: NullLiteral
  200        | BooleanLiteral
  201        | numericLiteral
  202        | StringLiteral

  203 numericLiteral: INT_LITERAL

  204 StringLiteral: STRING_LITERAL

  205 NullLiteral: null

  206 BooleanLiteral: true
  207               | false

  208 futureReservedWord: Class
  209                   | Enum
  210                   | Extends
  211                   | Super
  212                   | Const
  213                   | Export
  214                   | Import
  215                   | Implements
  216                   | Let
  217                   | Private
  218                   | Public
  219                   | Interface
  220                   | Package
  221                   | Protected
  222                   | Static
  223                   | Yield

  224 eos: SemiColon
  225    | %empty

  226 Break: break

  227 Do: do

  228 Instanceof: instanceof

  229 Typeof: typeof

  230 Case: case

  231 Else: else

  232 New: new

  233 Var: var

  234 Catch: catch

  235 Finally: finally

  236 Return: return

  237 Void: void

  238 Continue: continue

  239 For: for

  240 Switch: switch

  241 While: while

  242 Debugger: debugger

  243 Function: function

  244 This: this

  245 With: with

  246 Default: default

  247 If: if

  248 Throw: throw

  249 Delete: delete

  250 In: in

  251 Try: try

  252 Identifier: ID


Terminals, with rules where they appear

$end (0) 0
'!' (33) 127
'%' (37) 130
'&' (38) 146
'(' (40) 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 59 60
    78 81 82 102 103 108 109
')' (41) 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 59 60
    78 81 82 102 103 108 109
'*' (42) 128
'+' (43) 124 131
',' (44) 27 83 89 93 94 96 98
'-' (45) 125 132
'.' (46) 113
'/' (47) 129
':' (58) 69 70 71 72 73 101 149
';' (59) 33 39 40 41 42 43 44 45 46 47 48 49 50
'<' (60) 136
'=' (61) 32 150
'>' (62) 137
'?' (63) 149
'[' (91) 87 88 89 112
']' (93) 87 88 89 112
'^' (94) 147
'{' (123) 22 61 62 63 64 65 66 81 82 96 97 98 99 102 103
'}' (125) 22 61 62 63 64 65 66 81 82 96 97 98 99 102 103
'~' (126) 126
error (256)
INT_LITERAL (258) 203
STRING_LITERAL (259) 204
null (260) 205
true (261) 206
false (262) 207
Class (263) 208
Enum (264) 209
Extends (265) 210
Super (266) 211
Const (267) 212
Export (268) 213
Import (269) 214
Implements (270) 215
Let (271) 216
Private (272) 217
Public (273) 218
Interface (274) 219
Package (275) 220
Protected (276) 221
Static (277) 222
Yield (278) 223
SemiColon (279) 224
break (280) 226
do (281) 227
instanceof (282) 228
typeof (283) 229
case (284) 230
else (285) 231
new (286) 232
var (287) 233
catch (288) 234
finally (289) 235
return (290) 236
void (291) 237
continue (292) 238
for (293) 239
switch (294) 240
while (295) 241
debugger (296) 242
function (297) 243
this (298) 244
with (299) 245
default (300) 246
if (301) 247
throw (302) 248
delete (303) 249
in (304) 250
try (305) 251
ID (306) 252
ASSIGN_OP (307)
E_ASSIGN_OP (308)
CHAR_LITERAL (309)
EQ_OP (310)
COND_OP (311)
REL_OP (312)
ARITH_OP (313)
"++" (314) 117 122
"--" (315) 118 123
"<<" (316) 133
">>" (317) 134
">>>" (318) 135
"<=" (319) 138
">=" (320) 139
"==" (321) 142
"!=" (322) 143
"===" (323) 144
"!==" (324) 145
"&&" (325) 148
"*=" (326) 157
"/=" (327) 158
"%=" (328) 159
"+=" (329) 160
"-=" (330) 161
"<<=" (331) 162
">>=" (332) 163
">>>=" (333) 164
"&=" (334) 165
"^=" (335) 166


Nonterminals, with rules where they appear

$accept (104)
    on left: 0
program (105)
    on left: 1 2, on right: 0
sourceElements (106)
    on left: 3 4, on right: 1 4 85
sourceElement (107)
    on left: 5 6, on right: 3 4
statement (108)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21, on right: 5
    23 24 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 59
    73
block (109)
    on left: 22, on right: 7 75 76 77 78 79
statementList (110)
    on left: 23 24 25, on right: 22 24 69 71
variableStatement (111)
    on left: 26, on right: 8
variableDeclarationList (112)
    on left: 27 28, on right: 26 27 47 48 49 50
variableDeclaration (113)
    on left: 29 30 31, on right: 27 28 52
initialiser (114)
    on left: 32, on right: 30
emptyStatement (115)
    on left: 33, on right: 9
expressionStatement (116)
    on left: 34, on right: 10
ifStatement (117)
    on left: 35 36, on right: 11
iterationStatement (118)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52, on right:
    12
continueStatement (119)
    on left: 53 54, on right: 13
breakStatement (120)
    on left: 55 56, on right: 14
returnStatement (121)
    on left: 57 58, on right: 15
withStatement (122)
    on left: 59, on right: 16
switchStatement (123)
    on left: 60, on right: 18
caseBlock (124)
    on left: 61 62 63 64 65 66, on right: 60
caseClauses (125)
    on left: 67 68, on right: 61 62 63 64 68
caseClause (126)
    on left: 69 70, on right: 67 68
defaultClause (127)
    on left: 71 72, on right: 61 62 64 65
labelledStatement (128)
    on left: 73, on right: 17
throwStatement (129)
    on left: 74, on right: 19
tryStatement (130)
    on left: 75 76 77, on right: 20
catchProduction (131)
    on left: 78, on right: 75 77
finallyProduction (132)
    on left: 79, on right: 76 77
debuggerStatement (133)
    on left: 80, on right: 21
functionDeclaration (134)
    on left: 81 82, on right: 6
formalParameterList (135)
    on left: 83 84, on right: 81 83
functionBody (136)
    on left: 85 86, on right: 81 82 102 103
arrayLiteral (137)
    on left: 87 88 89, on right: 155
elementList (138)
    on left: 90 91, on right: 88 89 90
elisionExpr (139)
    on left: 92, on right: 90 91
elision (140)
    on left: 93 94 95, on right: 89 92 94
objectLiteral (141)
    on left: 96 97 98 99, on right: 156
propertyNameAndValueList (142)
    on left: 100, on right: 96 97
propertyAssignment (143)
    on left: 101 102 103, on right: 100
propertyName (144)
    on left: 104 105 106, on right: 101
propertySetParameterList (145)
    on left: 107, on right: 103
arguments (146)
    on left: 108 109, on right: 114 115
argumentList (147)
    on left: 110, on right: 108
expressionSequence (148)
    on left: 111, on right: 34 35 36 37 38 39 40 41 42 43 44 45 47
    48 49 51 52 57 59 60 69 70 74 112 150 151
singleExpression (149)
    on left: 112 113 114 115 116 117 118 119 120 121 122 123 124 125
    126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141
    142 143 144 145 146 147 148 149 150 151 152 153 154 155 156, on right:
    32 51 92 101 110 111 112 113 114 115 116 117 118 119 120 121 126
    127 140 141 149 150 151
assignmentOperator (150)
    on left: 157 158 159 160 161 162 163 164 165 166, on right: 151
identifierName (151)
    on left: 167 168, on right: 104 113
keyword (152)
    on left: 169 170 171 172 173 174 175 176 177 178 179 180 181 182
    183 184 185 186 187 188 189 190 191 192 193 194, on right: 195
reservedWord (153)
    on left: 195 196 197 198, on right: 168
literal (154)
    on left: 199 200 201 202, on right: 122 123 124 125 128 129 130
    131 132 133 134 135 136 137 138 139 142 143 144 145 146 147 148
    154
numericLiteral (155)
    on left: 203, on right: 106 201
StringLiteral (156)
    on left: 204, on right: 105 202
NullLiteral (157)
    on left: 205, on right: 197 199
BooleanLiteral (158)
    on left: 206 207, on right: 198 200
futureReservedWord (159)
    on left: 208 209 210 211 212 213 214 215 216 217 218 219 220 221
    222 223, on right: 196
eos (160)
    on left: 224 225, on right: 26 37 53 54 55 56 57 58 74 80
Break (161)
    on left: 226, on right: 55 56 169
Do (162)
    on left: 227, on right: 37 170
Instanceof (163)
    on left: 228, on right: 140 171
Typeof (164)
    on left: 229, on right: 121 172
Case (165)
    on left: 230, on right: 69 70 173
Else (166)
    on left: 231, on right: 35 174
New (167)
    on left: 232, on right: 115 116 175
Var (168)
    on left: 233, on right: 26 47 48 49 50 52 176
Catch (169)
    on left: 234, on right: 78 177
Finally (170)
    on left: 235, on right: 79 178
Return (171)
    on left: 236, on right: 57 58 179
Void (172)
    on left: 237, on right: 120 180
Continue (173)
    on left: 238, on right: 53 54 181
For (174)
    on left: 239, on right: 39 40 41 42 43 44 45 46 47 48 49 50 51
    52 182
Switch (175)
    on left: 240, on right: 60 183
While (176)
    on left: 241, on right: 37 38 184
Debugger (177)
    on left: 242, on right: 80 185
Function (178)
    on left: 243, on right: 81 82 186
This (179)
    on left: 244, on right: 152 187
With (180)
    on left: 245, on right: 59 188
Default (181)
    on left: 246, on right: 71 72 189
If (182)
    on left: 247, on right: 35 36 190
Throw (183)
    on left: 248, on right: 74 191
Delete (184)
    on left: 249, on right: 119 192
In (185)
    on left: 250, on right: 51 52 141 193
Try (186)
    on left: 251, on right: 75 76 77 194
Identifier (187)
    on left: 252, on right: 29 30 53 55 73 78 81 82 83 84 102 103 107
    153 167


State 0

    0 $accept: . program $end

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    function        shift, and go to state 18
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 2 (program)

    program              go to state 35
    sourceElements       go to state 36
    sourceElement        go to state 37
    statement            go to state 38
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    functionDeclaration  go to state 54
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    Function             go to state 76
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 1

  203 numericLiteral: INT_LITERAL .

    $default  reduce using rule 203 (numericLiteral)


State 2

  204 StringLiteral: STRING_LITERAL .

    $default  reduce using rule 204 (StringLiteral)


State 3

  205 NullLiteral: null .

    $default  reduce using rule 205 (NullLiteral)


State 4

  206 BooleanLiteral: true .

    $default  reduce using rule 206 (BooleanLiteral)


State 5

  207 BooleanLiteral: false .

    $default  reduce using rule 207 (BooleanLiteral)


State 6

  226 Break: break .

    $default  reduce using rule 226 (Break)


State 7

  227 Do: do .

    $default  reduce using rule 227 (Do)


State 8

  229 Typeof: typeof .

    $default  reduce using rule 229 (Typeof)


State 9

  232 New: new .

    $default  reduce using rule 232 (New)


State 10

  233 Var: var .

    $default  reduce using rule 233 (Var)


State 11

  236 Return: return .

    $default  reduce using rule 236 (Return)


State 12

  237 Void: void .

    $default  reduce using rule 237 (Void)


State 13

  238 Continue: continue .

    $default  reduce using rule 238 (Continue)


State 14

  239 For: for .

    $default  reduce using rule 239 (For)


State 15

  240 Switch: switch .

    $default  reduce using rule 240 (Switch)


State 16

  241 While: while .

    $default  reduce using rule 241 (While)


State 17

  242 Debugger: debugger .

    $default  reduce using rule 242 (Debugger)


State 18

  243 Function: function .

    $default  reduce using rule 243 (Function)


State 19

  244 This: this .

    $default  reduce using rule 244 (This)


State 20

  245 With: with .

    $default  reduce using rule 245 (With)


State 21

  247 If: if .

    $default  reduce using rule 247 (If)


State 22

  248 Throw: throw .

    $default  reduce using rule 248 (Throw)


State 23

  249 Delete: delete .

    $default  reduce using rule 249 (Delete)


State 24

  251 Try: try .

    $default  reduce using rule 251 (Try)


State 25

  252 Identifier: ID .

    $default  reduce using rule 252 (Identifier)


State 26

   22 block: '{' . statementList '}'
   96 objectLiteral: '{' . propertyNameAndValueList ',' '}'
   97              | '{' . propertyNameAndValueList '}'
   98              | '{' . ',' '}'
   99              | '{' . '}'

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    Class           shift, and go to state 84
    Enum            shift, and go to state 85
    Extends         shift, and go to state 86
    Super           shift, and go to state 87
    Const           shift, and go to state 88
    Export          shift, and go to state 89
    Import          shift, and go to state 90
    Implements      shift, and go to state 91
    Let             shift, and go to state 92
    Private         shift, and go to state 93
    Public          shift, and go to state 94
    Interface       shift, and go to state 95
    Package         shift, and go to state 96
    Protected       shift, and go to state 97
    Static          shift, and go to state 98
    Yield           shift, and go to state 99
    break           shift, and go to state 6
    do              shift, and go to state 7
    instanceof      shift, and go to state 100
    typeof          shift, and go to state 8
    case            shift, and go to state 101
    else            shift, and go to state 102
    new             shift, and go to state 9
    var             shift, and go to state 10
    catch           shift, and go to state 103
    finally         shift, and go to state 104
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    function        shift, and go to state 18
    this            shift, and go to state 19
    with            shift, and go to state 20
    default         shift, and go to state 105
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    in              shift, and go to state 106
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '}'             shift, and go to state 107
    ','             shift, and go to state 108
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    '}'  [reduce using rule 25 (statementList)]

    statement                 go to state 109
    block                     go to state 39
    statementList             go to state 110
    variableStatement         go to state 40
    emptyStatement            go to state 41
    expressionStatement       go to state 42
    ifStatement               go to state 43
    iterationStatement        go to state 44
    continueStatement         go to state 45
    breakStatement            go to state 46
    returnStatement           go to state 47
    withStatement             go to state 48
    switchStatement           go to state 49
    labelledStatement         go to state 50
    throwStatement            go to state 51
    tryStatement              go to state 52
    debuggerStatement         go to state 53
    arrayLiteral              go to state 55
    objectLiteral             go to state 56
    propertyNameAndValueList  go to state 111
    propertyAssignment        go to state 112
    propertyName              go to state 113
    expressionSequence        go to state 57
    singleExpression          go to state 58
    identifierName            go to state 114
    keyword                   go to state 115
    reservedWord              go to state 116
    literal                   go to state 59
    numericLiteral            go to state 117
    StringLiteral             go to state 118
    NullLiteral               go to state 119
    BooleanLiteral            go to state 120
    futureReservedWord        go to state 121
    Break                     go to state 122
    Do                        go to state 123
    Instanceof                go to state 124
    Typeof                    go to state 125
    Case                      go to state 126
    Else                      go to state 127
    New                       go to state 128
    Var                       go to state 129
    Catch                     go to state 130
    Finally                   go to state 131
    Return                    go to state 132
    Void                      go to state 133
    Continue                  go to state 134
    For                       go to state 135
    Switch                    go to state 136
    While                     go to state 137
    Debugger                  go to state 138
    Function                  go to state 139
    This                      go to state 140
    With                      go to state 141
    Default                   go to state 142
    If                        go to state 143
    Throw                     go to state 144
    Delete                    go to state 145
    In                        go to state 146
    Try                       go to state 147
    Identifier                go to state 148


State 27

   33 emptyStatement: ';' .

    $default  reduce using rule 33 (emptyStatement)


State 28

   87 arrayLiteral: '[' . ']'
   88             | '[' . elementList ']'
   89             | '[' . elementList ',' elision ']'

    ','  shift, and go to state 149
    ']'  shift, and go to state 150

    ','       [reduce using rule 95 (elision)]
    $default  reduce using rule 95 (elision)

    elementList  go to state 151
    elisionExpr  go to state 152
    elision      go to state 153


State 29

  122 singleExpression: "++" . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 154
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 30

  123 singleExpression: "--" . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 155
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 31

  124 singleExpression: '+' . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 156
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 32

  125 singleExpression: '-' . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 157
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 33

  126 singleExpression: '~' . singleExpression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    singleExpression  go to state 159
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 34

  127 singleExpression: '!' . singleExpression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    singleExpression  go to state 161
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 35

    0 $accept: program . $end

    $end  shift, and go to state 162


State 36

    1 program: sourceElements .

    $default  reduce using rule 1 (program)


State 37

    3 sourceElements: sourceElement .
    4               | sourceElement . sourceElements

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    function        shift, and go to state 18
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 3 (sourceElements)

    sourceElements       go to state 163
    sourceElement        go to state 37
    statement            go to state 38
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    functionDeclaration  go to state 54
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    Function             go to state 76
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 38

    5 sourceElement: statement .

    $default  reduce using rule 5 (sourceElement)


State 39

    7 statement: block .

    $default  reduce using rule 7 (statement)


State 40

    8 statement: variableStatement .

    $default  reduce using rule 8 (statement)


State 41

    9 statement: emptyStatement .

    $default  reduce using rule 9 (statement)


State 42

   10 statement: expressionStatement .

    $default  reduce using rule 10 (statement)


State 43

   11 statement: ifStatement .

    $default  reduce using rule 11 (statement)


State 44

   12 statement: iterationStatement .

    $default  reduce using rule 12 (statement)


State 45

   13 statement: continueStatement .

    $default  reduce using rule 13 (statement)


State 46

   14 statement: breakStatement .

    $default  reduce using rule 14 (statement)


State 47

   15 statement: returnStatement .

    $default  reduce using rule 15 (statement)


State 48

   16 statement: withStatement .

    $default  reduce using rule 16 (statement)


State 49

   18 statement: switchStatement .

    $default  reduce using rule 18 (statement)


State 50

   17 statement: labelledStatement .

    $default  reduce using rule 17 (statement)


State 51

   19 statement: throwStatement .

    $default  reduce using rule 19 (statement)


State 52

   20 statement: tryStatement .

    $default  reduce using rule 20 (statement)


State 53

   21 statement: debuggerStatement .

    $default  reduce using rule 21 (statement)


State 54

    6 sourceElement: functionDeclaration .

    $default  reduce using rule 6 (sourceElement)


State 55

  155 singleExpression: arrayLiteral .

    $default  reduce using rule 155 (singleExpression)


State 56

  156 singleExpression: objectLiteral .

    $default  reduce using rule 156 (singleExpression)


State 57

   34 expressionStatement: expressionSequence .

    $default  reduce using rule 34 (expressionStatement)


State 58

  111 expressionSequence: singleExpression .
  112 singleExpression: singleExpression . '[' expressionSequence ']'
  113                 | singleExpression . '.' identifierName
  114                 | singleExpression . arguments
  117                 | singleExpression . "++"
  118                 | singleExpression . "--"
  140                 | singleExpression . Instanceof singleExpression
  141                 | singleExpression . In singleExpression
  149                 | singleExpression . '?' singleExpression ':' singleExpression
  150                 | singleExpression . '=' expressionSequence
  151                 | singleExpression . assignmentOperator expressionSequence

    instanceof  shift, and go to state 100
    in          shift, and go to state 106
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    '['         shift, and go to state 166
    '.'         shift, and go to state 167
    "++"        shift, and go to state 168
    "--"        shift, and go to state 169
    '?'         shift, and go to state 170
    "*="        shift, and go to state 171
    "/="        shift, and go to state 172
    "%="        shift, and go to state 173
    "+="        shift, and go to state 174
    "-="        shift, and go to state 175
    "<<="       shift, and go to state 176
    ">>="       shift, and go to state 177
    ">>>="      shift, and go to state 178
    "&="        shift, and go to state 179
    "^="        shift, and go to state 180

    instanceof  [reduce using rule 111 (expressionSequence)]
    in          [reduce using rule 111 (expressionSequence)]
    '='         [reduce using rule 111 (expressionSequence)]
    '('         [reduce using rule 111 (expressionSequence)]
    '['         [reduce using rule 111 (expressionSequence)]
    '.'         [reduce using rule 111 (expressionSequence)]
    "++"        [reduce using rule 111 (expressionSequence)]
    "--"        [reduce using rule 111 (expressionSequence)]
    '?'         [reduce using rule 111 (expressionSequence)]
    "*="        [reduce using rule 111 (expressionSequence)]
    "/="        [reduce using rule 111 (expressionSequence)]
    "%="        [reduce using rule 111 (expressionSequence)]
    "+="        [reduce using rule 111 (expressionSequence)]
    "-="        [reduce using rule 111 (expressionSequence)]
    "<<="       [reduce using rule 111 (expressionSequence)]
    ">>="       [reduce using rule 111 (expressionSequence)]
    ">>>="      [reduce using rule 111 (expressionSequence)]
    "&="        [reduce using rule 111 (expressionSequence)]
    "^="        [reduce using rule 111 (expressionSequence)]
    $default    reduce using rule 111 (expressionSequence)

    arguments           go to state 181
    assignmentOperator  go to state 182
    Instanceof          go to state 183
    In                  go to state 184


State 59

  128 singleExpression: literal . '*' literal
  129                 | literal . '/' literal
  130                 | literal . '%' literal
  131                 | literal . '+' literal
  132                 | literal . '-' literal
  133                 | literal . "<<" literal
  134                 | literal . ">>" literal
  135                 | literal . ">>>" literal
  136                 | literal . '<' literal
  137                 | literal . '>' literal
  138                 | literal . "<=" literal
  139                 | literal . ">=" literal
  142                 | literal . "==" literal
  143                 | literal . "!=" literal
  144                 | literal . "===" literal
  145                 | literal . "!==" literal
  146                 | literal . '&' literal
  147                 | literal . '^' literal
  148                 | literal . "&&" literal
  154                 | literal .

    '+'    shift, and go to state 185
    '-'    shift, and go to state 186
    '*'    shift, and go to state 187
    '/'    shift, and go to state 188
    '%'    shift, and go to state 189
    "<<"   shift, and go to state 190
    ">>"   shift, and go to state 191
    ">>>"  shift, and go to state 192
    '<'    shift, and go to state 193
    '>'    shift, and go to state 194
    "<="   shift, and go to state 195
    ">="   shift, and go to state 196
    "=="   shift, and go to state 197
    "!="   shift, and go to state 198
    "==="  shift, and go to state 199
    "!=="  shift, and go to state 200
    '&'    shift, and go to state 201
    '^'    shift, and go to state 202
    "&&"   shift, and go to state 203

    '+'       [reduce using rule 154 (singleExpression)]
    '-'       [reduce using rule 154 (singleExpression)]
    $default  reduce using rule 154 (singleExpression)


State 60

  201 literal: numericLiteral .

    $default  reduce using rule 201 (literal)


State 61

  202 literal: StringLiteral .

    $default  reduce using rule 202 (literal)


State 62

  199 literal: NullLiteral .

    $default  reduce using rule 199 (literal)


State 63

  200 literal: BooleanLiteral .

    $default  reduce using rule 200 (literal)


State 64

   55 breakStatement: Break . Identifier eos
   56               | Break . eos

    SemiColon  shift, and go to state 204
    ID         shift, and go to state 25

    ID        [reduce using rule 225 (eos)]
    $default  reduce using rule 225 (eos)

    eos         go to state 205
    Identifier  go to state 206


State 65

   37 iterationStatement: Do . statement While '(' expressionSequence ')' eos

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 207
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 66

  121 singleExpression: Typeof . singleExpression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    singleExpression  go to state 208
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 67

  115 singleExpression: New . singleExpression arguments
  116                 | New . singleExpression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    singleExpression  go to state 209
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 68

   26 variableStatement: Var . variableDeclarationList eos

    ID  shift, and go to state 25

    ID        [reduce using rule 31 (variableDeclaration)]
    $default  reduce using rule 31 (variableDeclaration)

    variableDeclarationList  go to state 210
    variableDeclaration      go to state 211
    Identifier               go to state 212


State 69

   57 returnStatement: Return . expressionSequence eos
   58                | Return . eos

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    SemiColon       shift, and go to state 204
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    INT_LITERAL     [reduce using rule 225 (eos)]
    STRING_LITERAL  [reduce using rule 225 (eos)]
    null            [reduce using rule 225 (eos)]
    true            [reduce using rule 225 (eos)]
    false           [reduce using rule 225 (eos)]
    typeof          [reduce using rule 225 (eos)]
    new             [reduce using rule 225 (eos)]
    void            [reduce using rule 225 (eos)]
    this            [reduce using rule 225 (eos)]
    delete          [reduce using rule 225 (eos)]
    ID              [reduce using rule 225 (eos)]
    '{'             [reduce using rule 225 (eos)]
    '['             [reduce using rule 225 (eos)]
    "++"            [reduce using rule 225 (eos)]
    "--"            [reduce using rule 225 (eos)]
    '+'             [reduce using rule 225 (eos)]
    '-'             [reduce using rule 225 (eos)]
    '~'             [reduce using rule 225 (eos)]
    '!'             [reduce using rule 225 (eos)]
    $default        reduce using rule 225 (eos)

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 213
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    eos                 go to state 214
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 70

  120 singleExpression: Void . singleExpression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    singleExpression  go to state 215
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 71

   53 continueStatement: Continue . Identifier eos
   54                  | Continue . eos

    SemiColon  shift, and go to state 204
    ID         shift, and go to state 25

    ID        [reduce using rule 225 (eos)]
    $default  reduce using rule 225 (eos)

    eos         go to state 216
    Identifier  go to state 217


State 72

   39 iterationStatement: For . '(' expressionSequence ';' expressionSequence ';' expressionSequence ')' statement
   40                   | For . '(' ';' expressionSequence ';' expressionSequence ')' statement
   41                   | For . '(' expressionSequence ';' ';' expressionSequence ')' statement
   42                   | For . '(' ';' ';' expressionSequence ')' statement
   43                   | For . '(' expressionSequence ';' expressionSequence ';' ')' statement
   44                   | For . '(' expressionSequence ';' ';' ')' statement
   45                   | For . '(' ';' expressionSequence ';' ')' statement
   46                   | For . '(' ';' ';' ')' statement
   47                   | For . '(' Var variableDeclarationList ';' expressionSequence ';' expressionSequence ')' statement
   48                   | For . '(' Var variableDeclarationList ';' expressionSequence ';' ')' statement
   49                   | For . '(' Var variableDeclarationList ';' ';' expressionSequence ')' statement
   50                   | For . '(' Var variableDeclarationList ';' ';' ')' statement
   51                   | For . '(' singleExpression In expressionSequence ')' statement
   52                   | For . '(' Var variableDeclaration In expressionSequence ')' statement

    '('  shift, and go to state 218


State 73

   60 switchStatement: Switch . '(' expressionSequence ')' caseBlock

    '('  shift, and go to state 219


State 74

   38 iterationStatement: While . '(' expressionSequence ')' statement

    '('  shift, and go to state 220


State 75

   80 debuggerStatement: Debugger . eos

    SemiColon  shift, and go to state 204

    $default  reduce using rule 225 (eos)

    eos  go to state 221


State 76

   81 functionDeclaration: Function . Identifier '(' formalParameterList ')' '{' functionBody '}'
   82                    | Function . Identifier '(' ')' '{' functionBody '}'

    ID  shift, and go to state 25

    Identifier  go to state 222


State 77

  152 singleExpression: This .

    $default  reduce using rule 152 (singleExpression)


State 78

   59 withStatement: With . '(' expressionSequence ')' statement

    '('  shift, and go to state 223


State 79

   35 ifStatement: If . '(' expressionSequence ')' statement Else statement
   36            | If . '(' expressionSequence ')' statement

    '('  shift, and go to state 224


State 80

   74 throwStatement: Throw . expressionSequence eos

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 225
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 81

  119 singleExpression: Delete . singleExpression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    singleExpression  go to state 226
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 82

   75 tryStatement: Try . block catchProduction
   76             | Try . block finallyProduction
   77             | Try . block catchProduction finallyProduction

    '{'  shift, and go to state 227

    block  go to state 228


State 83

   73 labelledStatement: Identifier . ':' statement
  153 singleExpression: Identifier .

    ':'  shift, and go to state 229

    $default  reduce using rule 153 (singleExpression)


State 84

  208 futureReservedWord: Class .

    $default  reduce using rule 208 (futureReservedWord)


State 85

  209 futureReservedWord: Enum .

    $default  reduce using rule 209 (futureReservedWord)


State 86

  210 futureReservedWord: Extends .

    $default  reduce using rule 210 (futureReservedWord)


State 87

  211 futureReservedWord: Super .

    $default  reduce using rule 211 (futureReservedWord)


State 88

  212 futureReservedWord: Const .

    $default  reduce using rule 212 (futureReservedWord)


State 89

  213 futureReservedWord: Export .

    $default  reduce using rule 213 (futureReservedWord)


State 90

  214 futureReservedWord: Import .

    $default  reduce using rule 214 (futureReservedWord)


State 91

  215 futureReservedWord: Implements .

    $default  reduce using rule 215 (futureReservedWord)


State 92

  216 futureReservedWord: Let .

    $default  reduce using rule 216 (futureReservedWord)


State 93

  217 futureReservedWord: Private .

    $default  reduce using rule 217 (futureReservedWord)


State 94

  218 futureReservedWord: Public .

    $default  reduce using rule 218 (futureReservedWord)


State 95

  219 futureReservedWord: Interface .

    $default  reduce using rule 219 (futureReservedWord)


State 96

  220 futureReservedWord: Package .

    $default  reduce using rule 220 (futureReservedWord)


State 97

  221 futureReservedWord: Protected .

    $default  reduce using rule 221 (futureReservedWord)


State 98

  222 futureReservedWord: Static .

    $default  reduce using rule 222 (futureReservedWord)


State 99

  223 futureReservedWord: Yield .

    $default  reduce using rule 223 (futureReservedWord)


State 100

  228 Instanceof: instanceof .

    $default  reduce using rule 228 (Instanceof)


State 101

  230 Case: case .

    $default  reduce using rule 230 (Case)


State 102

  231 Else: else .

    $default  reduce using rule 231 (Else)


State 103

  234 Catch: catch .

    $default  reduce using rule 234 (Catch)


State 104

  235 Finally: finally .

    $default  reduce using rule 235 (Finally)


State 105

  246 Default: default .

    $default  reduce using rule 246 (Default)


State 106

  250 In: in .

    $default  reduce using rule 250 (In)


State 107

   99 objectLiteral: '{' '}' .

    $default  reduce using rule 99 (objectLiteral)


State 108

   98 objectLiteral: '{' ',' . '}'

    '}'  shift, and go to state 230


State 109

   23 statementList: statement .
   24              | statement . statementList

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    case      reduce using rule 23 (statementList)
    case      [reduce using rule 25 (statementList)]
    default   reduce using rule 23 (statementList)
    default   [reduce using rule 25 (statementList)]
    '}'       reduce using rule 23 (statementList)
    '}'       [reduce using rule 25 (statementList)]
    $default  reduce using rule 23 (statementList)

    statement            go to state 109
    block                go to state 39
    statementList        go to state 231
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 110

   22 block: '{' statementList . '}'

    '}'  shift, and go to state 232


State 111

   96 objectLiteral: '{' propertyNameAndValueList . ',' '}'
   97              | '{' propertyNameAndValueList . '}'

    '}'  shift, and go to state 233
    ','  shift, and go to state 234


State 112

  100 propertyNameAndValueList: propertyAssignment .

    $default  reduce using rule 100 (propertyNameAndValueList)


State 113

  101 propertyAssignment: propertyName . ':' singleExpression

    ':'  shift, and go to state 235


State 114

  104 propertyName: identifierName .

    $default  reduce using rule 104 (propertyName)


State 115

  195 reservedWord: keyword .

    $default  reduce using rule 195 (reservedWord)


State 116

  168 identifierName: reservedWord .

    $default  reduce using rule 168 (identifierName)


State 117

  106 propertyName: numericLiteral .
  201 literal: numericLiteral .

    ':'       reduce using rule 106 (propertyName)
    $default  reduce using rule 201 (literal)


State 118

  105 propertyName: StringLiteral .
  202 literal: StringLiteral .

    ':'       reduce using rule 105 (propertyName)
    $default  reduce using rule 202 (literal)


State 119

  197 reservedWord: NullLiteral .
  199 literal: NullLiteral .

    ':'       reduce using rule 197 (reservedWord)
    $default  reduce using rule 199 (literal)


State 120

  198 reservedWord: BooleanLiteral .
  200 literal: BooleanLiteral .

    ':'       reduce using rule 198 (reservedWord)
    $default  reduce using rule 200 (literal)


State 121

  196 reservedWord: futureReservedWord .

    $default  reduce using rule 196 (reservedWord)


State 122

   55 breakStatement: Break . Identifier eos
   56               | Break . eos
  169 keyword: Break .

    SemiColon  shift, and go to state 204
    ID         shift, and go to state 25

    ID        [reduce using rule 225 (eos)]
    ':'       reduce using rule 169 (keyword)
    $default  reduce using rule 225 (eos)

    eos         go to state 205
    Identifier  go to state 206


State 123

   37 iterationStatement: Do . statement While '(' expressionSequence ')' eos
  170 keyword: Do .

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 170 (keyword)

    statement            go to state 207
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 124

  171 keyword: Instanceof .

    $default  reduce using rule 171 (keyword)


State 125

  121 singleExpression: Typeof . singleExpression
  172 keyword: Typeof .

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 172 (keyword)

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    singleExpression  go to state 208
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 126

  173 keyword: Case .

    $default  reduce using rule 173 (keyword)


State 127

  174 keyword: Else .

    $default  reduce using rule 174 (keyword)


State 128

  115 singleExpression: New . singleExpression arguments
  116                 | New . singleExpression
  175 keyword: New .

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 175 (keyword)

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    singleExpression  go to state 209
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 129

   26 variableStatement: Var . variableDeclarationList eos
  176 keyword: Var .

    ID  shift, and go to state 25

    ID        [reduce using rule 31 (variableDeclaration)]
    ':'       reduce using rule 176 (keyword)
    $default  reduce using rule 31 (variableDeclaration)

    variableDeclarationList  go to state 210
    variableDeclaration      go to state 211
    Identifier               go to state 212


State 130

  177 keyword: Catch .

    $default  reduce using rule 177 (keyword)


State 131

  178 keyword: Finally .

    $default  reduce using rule 178 (keyword)


State 132

   57 returnStatement: Return . expressionSequence eos
   58                | Return . eos
  179 keyword: Return .

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    SemiColon       shift, and go to state 204
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    INT_LITERAL     [reduce using rule 225 (eos)]
    STRING_LITERAL  [reduce using rule 225 (eos)]
    null            [reduce using rule 225 (eos)]
    true            [reduce using rule 225 (eos)]
    false           [reduce using rule 225 (eos)]
    typeof          [reduce using rule 225 (eos)]
    new             [reduce using rule 225 (eos)]
    void            [reduce using rule 225 (eos)]
    this            [reduce using rule 225 (eos)]
    delete          [reduce using rule 225 (eos)]
    ID              [reduce using rule 225 (eos)]
    '{'             [reduce using rule 225 (eos)]
    ':'             reduce using rule 179 (keyword)
    '['             [reduce using rule 225 (eos)]
    "++"            [reduce using rule 225 (eos)]
    "--"            [reduce using rule 225 (eos)]
    '+'             [reduce using rule 225 (eos)]
    '-'             [reduce using rule 225 (eos)]
    '~'             [reduce using rule 225 (eos)]
    '!'             [reduce using rule 225 (eos)]
    $default        reduce using rule 225 (eos)

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 213
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    eos                 go to state 214
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 133

  120 singleExpression: Void . singleExpression
  180 keyword: Void .

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 180 (keyword)

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    singleExpression  go to state 215
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 134

   53 continueStatement: Continue . Identifier eos
   54                  | Continue . eos
  181 keyword: Continue .

    SemiColon  shift, and go to state 204
    ID         shift, and go to state 25

    ID        [reduce using rule 225 (eos)]
    ':'       reduce using rule 181 (keyword)
    $default  reduce using rule 225 (eos)

    eos         go to state 216
    Identifier  go to state 217


State 135

   39 iterationStatement: For . '(' expressionSequence ';' expressionSequence ';' expressionSequence ')' statement
   40                   | For . '(' ';' expressionSequence ';' expressionSequence ')' statement
   41                   | For . '(' expressionSequence ';' ';' expressionSequence ')' statement
   42                   | For . '(' ';' ';' expressionSequence ')' statement
   43                   | For . '(' expressionSequence ';' expressionSequence ';' ')' statement
   44                   | For . '(' expressionSequence ';' ';' ')' statement
   45                   | For . '(' ';' expressionSequence ';' ')' statement
   46                   | For . '(' ';' ';' ')' statement
   47                   | For . '(' Var variableDeclarationList ';' expressionSequence ';' expressionSequence ')' statement
   48                   | For . '(' Var variableDeclarationList ';' expressionSequence ';' ')' statement
   49                   | For . '(' Var variableDeclarationList ';' ';' expressionSequence ')' statement
   50                   | For . '(' Var variableDeclarationList ';' ';' ')' statement
   51                   | For . '(' singleExpression In expressionSequence ')' statement
   52                   | For . '(' Var variableDeclaration In expressionSequence ')' statement
  182 keyword: For .

    '('  shift, and go to state 218

    $default  reduce using rule 182 (keyword)


State 136

   60 switchStatement: Switch . '(' expressionSequence ')' caseBlock
  183 keyword: Switch .

    '('  shift, and go to state 219

    $default  reduce using rule 183 (keyword)


State 137

   38 iterationStatement: While . '(' expressionSequence ')' statement
  184 keyword: While .

    '('  shift, and go to state 220

    $default  reduce using rule 184 (keyword)


State 138

   80 debuggerStatement: Debugger . eos
  185 keyword: Debugger .

    SemiColon  shift, and go to state 204

    ':'       reduce using rule 185 (keyword)
    $default  reduce using rule 225 (eos)

    eos  go to state 221


State 139

  186 keyword: Function .

    $default  reduce using rule 186 (keyword)


State 140

  152 singleExpression: This .
  187 keyword: This .

    ':'       reduce using rule 187 (keyword)
    $default  reduce using rule 152 (singleExpression)


State 141

   59 withStatement: With . '(' expressionSequence ')' statement
  188 keyword: With .

    '('  shift, and go to state 223

    $default  reduce using rule 188 (keyword)


State 142

  189 keyword: Default .

    $default  reduce using rule 189 (keyword)


State 143

   35 ifStatement: If . '(' expressionSequence ')' statement Else statement
   36            | If . '(' expressionSequence ')' statement
  190 keyword: If .

    '('  shift, and go to state 224

    $default  reduce using rule 190 (keyword)


State 144

   74 throwStatement: Throw . expressionSequence eos
  191 keyword: Throw .

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 191 (keyword)

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 225
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 145

  119 singleExpression: Delete . singleExpression
  192 keyword: Delete .

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 192 (keyword)

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    singleExpression  go to state 226
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 146

  193 keyword: In .

    $default  reduce using rule 193 (keyword)


State 147

   75 tryStatement: Try . block catchProduction
   76             | Try . block finallyProduction
   77             | Try . block catchProduction finallyProduction
  194 keyword: Try .

    '{'  shift, and go to state 227

    $default  reduce using rule 194 (keyword)

    block  go to state 228


State 148

   73 labelledStatement: Identifier . ':' statement
  102 propertyAssignment: Identifier . '(' ')' '{' functionBody '}'
  103                   | Identifier . '(' propertySetParameterList ')' '{' functionBody '}'
  153 singleExpression: Identifier .
  167 identifierName: Identifier .

    '('  shift, and go to state 236
    ':'  shift, and go to state 229

    '('       [reduce using rule 153 (singleExpression)]
    ':'       [reduce using rule 167 (identifierName)]
    $default  reduce using rule 153 (singleExpression)


State 149

   93 elision: ',' .

    $default  reduce using rule 93 (elision)


State 150

   87 arrayLiteral: '[' ']' .

    $default  reduce using rule 87 (arrayLiteral)


State 151

   88 arrayLiteral: '[' elementList . ']'
   89             | '[' elementList . ',' elision ']'

    ','  shift, and go to state 237
    ']'  shift, and go to state 238


State 152

   90 elementList: elisionExpr . elementList
   91            | elisionExpr .

    ','  shift, and go to state 149

    ','       [reduce using rule 91 (elementList)]
    ','       [reduce using rule 95 (elision)]
    ']'       reduce using rule 91 (elementList)
    $default  reduce using rule 95 (elision)

    elementList  go to state 239
    elisionExpr  go to state 152
    elision      go to state 153


State 153

   92 elisionExpr: elision . singleExpression
   94 elision: elision . ','

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    ','             shift, and go to state 240
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    singleExpression  go to state 241
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 154

  122 singleExpression: "++" literal .

    $default  reduce using rule 122 (singleExpression)


State 155

  123 singleExpression: "--" literal .

    $default  reduce using rule 123 (singleExpression)


State 156

  124 singleExpression: '+' literal .

    $default  reduce using rule 124 (singleExpression)


State 157

  125 singleExpression: '-' literal .

    $default  reduce using rule 125 (singleExpression)


State 158

   96 objectLiteral: '{' . propertyNameAndValueList ',' '}'
   97              | '{' . propertyNameAndValueList '}'
   98              | '{' . ',' '}'
   99              | '{' . '}'

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    Class           shift, and go to state 84
    Enum            shift, and go to state 85
    Extends         shift, and go to state 86
    Super           shift, and go to state 87
    Const           shift, and go to state 88
    Export          shift, and go to state 89
    Import          shift, and go to state 90
    Implements      shift, and go to state 91
    Let             shift, and go to state 92
    Private         shift, and go to state 93
    Public          shift, and go to state 94
    Interface       shift, and go to state 95
    Package         shift, and go to state 96
    Protected       shift, and go to state 97
    Static          shift, and go to state 98
    Yield           shift, and go to state 99
    break           shift, and go to state 6
    do              shift, and go to state 7
    instanceof      shift, and go to state 100
    typeof          shift, and go to state 8
    case            shift, and go to state 101
    else            shift, and go to state 102
    new             shift, and go to state 9
    var             shift, and go to state 10
    catch           shift, and go to state 103
    finally         shift, and go to state 104
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    function        shift, and go to state 18
    this            shift, and go to state 19
    with            shift, and go to state 20
    default         shift, and go to state 105
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    in              shift, and go to state 106
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '}'             shift, and go to state 107
    ','             shift, and go to state 108

    propertyNameAndValueList  go to state 111
    propertyAssignment        go to state 112
    propertyName              go to state 113
    identifierName            go to state 114
    keyword                   go to state 115
    reservedWord              go to state 116
    numericLiteral            go to state 242
    StringLiteral             go to state 243
    NullLiteral               go to state 244
    BooleanLiteral            go to state 245
    futureReservedWord        go to state 121
    Break                     go to state 246
    Do                        go to state 247
    Instanceof                go to state 124
    Typeof                    go to state 248
    Case                      go to state 126
    Else                      go to state 127
    New                       go to state 249
    Var                       go to state 250
    Catch                     go to state 130
    Finally                   go to state 131
    Return                    go to state 251
    Void                      go to state 252
    Continue                  go to state 253
    For                       go to state 254
    Switch                    go to state 255
    While                     go to state 256
    Debugger                  go to state 257
    Function                  go to state 139
    This                      go to state 258
    With                      go to state 259
    Default                   go to state 142
    If                        go to state 260
    Throw                     go to state 261
    Delete                    go to state 262
    In                        go to state 146
    Try                       go to state 263
    Identifier                go to state 264


State 159

  112 singleExpression: singleExpression . '[' expressionSequence ']'
  113                 | singleExpression . '.' identifierName
  114                 | singleExpression . arguments
  117                 | singleExpression . "++"
  118                 | singleExpression . "--"
  126                 | '~' singleExpression .
  140                 | singleExpression . Instanceof singleExpression
  141                 | singleExpression . In singleExpression
  149                 | singleExpression . '?' singleExpression ':' singleExpression
  150                 | singleExpression . '=' expressionSequence
  151                 | singleExpression . assignmentOperator expressionSequence

    instanceof  shift, and go to state 100
    in          shift, and go to state 106
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    '['         shift, and go to state 166
    '.'         shift, and go to state 167
    "++"        shift, and go to state 168
    "--"        shift, and go to state 169
    '?'         shift, and go to state 170
    "*="        shift, and go to state 171
    "/="        shift, and go to state 172
    "%="        shift, and go to state 173
    "+="        shift, and go to state 174
    "-="        shift, and go to state 175
    "<<="       shift, and go to state 176
    ">>="       shift, and go to state 177
    ">>>="      shift, and go to state 178
    "&="        shift, and go to state 179
    "^="        shift, and go to state 180

    instanceof  [reduce using rule 126 (singleExpression)]
    in          [reduce using rule 126 (singleExpression)]
    '='         [reduce using rule 126 (singleExpression)]
    '('         [reduce using rule 126 (singleExpression)]
    '['         [reduce using rule 126 (singleExpression)]
    '.'         [reduce using rule 126 (singleExpression)]
    "++"        [reduce using rule 126 (singleExpression)]
    "--"        [reduce using rule 126 (singleExpression)]
    '?'         [reduce using rule 126 (singleExpression)]
    "*="        [reduce using rule 126 (singleExpression)]
    "/="        [reduce using rule 126 (singleExpression)]
    "%="        [reduce using rule 126 (singleExpression)]
    "+="        [reduce using rule 126 (singleExpression)]
    "-="        [reduce using rule 126 (singleExpression)]
    "<<="       [reduce using rule 126 (singleExpression)]
    ">>="       [reduce using rule 126 (singleExpression)]
    ">>>="      [reduce using rule 126 (singleExpression)]
    "&="        [reduce using rule 126 (singleExpression)]
    "^="        [reduce using rule 126 (singleExpression)]
    $default    reduce using rule 126 (singleExpression)

    arguments           go to state 181
    assignmentOperator  go to state 182
    Instanceof          go to state 183
    In                  go to state 184


State 160

  153 singleExpression: Identifier .

    $default  reduce using rule 153 (singleExpression)


State 161

  112 singleExpression: singleExpression . '[' expressionSequence ']'
  113                 | singleExpression . '.' identifierName
  114                 | singleExpression . arguments
  117                 | singleExpression . "++"
  118                 | singleExpression . "--"
  127                 | '!' singleExpression .
  140                 | singleExpression . Instanceof singleExpression
  141                 | singleExpression . In singleExpression
  149                 | singleExpression . '?' singleExpression ':' singleExpression
  150                 | singleExpression . '=' expressionSequence
  151                 | singleExpression . assignmentOperator expressionSequence

    instanceof  shift, and go to state 100
    in          shift, and go to state 106
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    '['         shift, and go to state 166
    '.'         shift, and go to state 167
    "++"        shift, and go to state 168
    "--"        shift, and go to state 169
    '?'         shift, and go to state 170
    "*="        shift, and go to state 171
    "/="        shift, and go to state 172
    "%="        shift, and go to state 173
    "+="        shift, and go to state 174
    "-="        shift, and go to state 175
    "<<="       shift, and go to state 176
    ">>="       shift, and go to state 177
    ">>>="      shift, and go to state 178
    "&="        shift, and go to state 179
    "^="        shift, and go to state 180

    instanceof  [reduce using rule 127 (singleExpression)]
    in          [reduce using rule 127 (singleExpression)]
    '='         [reduce using rule 127 (singleExpression)]
    '('         [reduce using rule 127 (singleExpression)]
    '['         [reduce using rule 127 (singleExpression)]
    '.'         [reduce using rule 127 (singleExpression)]
    "++"        [reduce using rule 127 (singleExpression)]
    "--"        [reduce using rule 127 (singleExpression)]
    '?'         [reduce using rule 127 (singleExpression)]
    "*="        [reduce using rule 127 (singleExpression)]
    "/="        [reduce using rule 127 (singleExpression)]
    "%="        [reduce using rule 127 (singleExpression)]
    "+="        [reduce using rule 127 (singleExpression)]
    "-="        [reduce using rule 127 (singleExpression)]
    "<<="       [reduce using rule 127 (singleExpression)]
    ">>="       [reduce using rule 127 (singleExpression)]
    ">>>="      [reduce using rule 127 (singleExpression)]
    "&="        [reduce using rule 127 (singleExpression)]
    "^="        [reduce using rule 127 (singleExpression)]
    $default    reduce using rule 127 (singleExpression)

    arguments           go to state 181
    assignmentOperator  go to state 182
    Instanceof          go to state 183
    In                  go to state 184


State 162

    0 $accept: program $end .

    $default  accept


State 163

    4 sourceElements: sourceElement sourceElements .

    $default  reduce using rule 4 (sourceElements)


State 164

  150 singleExpression: singleExpression '=' . expressionSequence

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 265
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 165

  108 arguments: '(' . argumentList ')'
  109          | '(' . ')'

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    ')'             shift, and go to state 266
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    argumentList      go to state 267
    singleExpression  go to state 268
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 166

  112 singleExpression: singleExpression '[' . expressionSequence ']'

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 269
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 167

  113 singleExpression: singleExpression '.' . identifierName

    null        shift, and go to state 3
    true        shift, and go to state 4
    false       shift, and go to state 5
    Class       shift, and go to state 84
    Enum        shift, and go to state 85
    Extends     shift, and go to state 86
    Super       shift, and go to state 87
    Const       shift, and go to state 88
    Export      shift, and go to state 89
    Import      shift, and go to state 90
    Implements  shift, and go to state 91
    Let         shift, and go to state 92
    Private     shift, and go to state 93
    Public      shift, and go to state 94
    Interface   shift, and go to state 95
    Package     shift, and go to state 96
    Protected   shift, and go to state 97
    Static      shift, and go to state 98
    Yield       shift, and go to state 99
    break       shift, and go to state 6
    do          shift, and go to state 7
    instanceof  shift, and go to state 100
    typeof      shift, and go to state 8
    case        shift, and go to state 101
    else        shift, and go to state 102
    new         shift, and go to state 9
    var         shift, and go to state 10
    catch       shift, and go to state 103
    finally     shift, and go to state 104
    return      shift, and go to state 11
    void        shift, and go to state 12
    continue    shift, and go to state 13
    for         shift, and go to state 14
    switch      shift, and go to state 15
    while       shift, and go to state 16
    debugger    shift, and go to state 17
    function    shift, and go to state 18
    this        shift, and go to state 19
    with        shift, and go to state 20
    default     shift, and go to state 105
    if          shift, and go to state 21
    throw       shift, and go to state 22
    delete      shift, and go to state 23
    in          shift, and go to state 106
    try         shift, and go to state 24
    ID          shift, and go to state 25

    identifierName      go to state 270
    keyword             go to state 115
    reservedWord        go to state 116
    NullLiteral         go to state 244
    BooleanLiteral      go to state 245
    futureReservedWord  go to state 121
    Break               go to state 246
    Do                  go to state 247
    Instanceof          go to state 124
    Typeof              go to state 248
    Case                go to state 126
    Else                go to state 127
    New                 go to state 249
    Var                 go to state 250
    Catch               go to state 130
    Finally             go to state 131
    Return              go to state 251
    Void                go to state 252
    Continue            go to state 253
    For                 go to state 254
    Switch              go to state 255
    While               go to state 256
    Debugger            go to state 257
    Function            go to state 139
    This                go to state 258
    With                go to state 259
    Default             go to state 142
    If                  go to state 260
    Throw               go to state 261
    Delete              go to state 262
    In                  go to state 146
    Try                 go to state 263
    Identifier          go to state 271


State 168

  117 singleExpression: singleExpression "++" .

    $default  reduce using rule 117 (singleExpression)


State 169

  118 singleExpression: singleExpression "--" .

    $default  reduce using rule 118 (singleExpression)


State 170

  149 singleExpression: singleExpression '?' . singleExpression ':' singleExpression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    singleExpression  go to state 272
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 171

  157 assignmentOperator: "*=" .

    $default  reduce using rule 157 (assignmentOperator)


State 172

  158 assignmentOperator: "/=" .

    $default  reduce using rule 158 (assignmentOperator)


State 173

  159 assignmentOperator: "%=" .

    $default  reduce using rule 159 (assignmentOperator)


State 174

  160 assignmentOperator: "+=" .

    $default  reduce using rule 160 (assignmentOperator)


State 175

  161 assignmentOperator: "-=" .

    $default  reduce using rule 161 (assignmentOperator)


State 176

  162 assignmentOperator: "<<=" .

    $default  reduce using rule 162 (assignmentOperator)


State 177

  163 assignmentOperator: ">>=" .

    $default  reduce using rule 163 (assignmentOperator)


State 178

  164 assignmentOperator: ">>>=" .

    $default  reduce using rule 164 (assignmentOperator)


State 179

  165 assignmentOperator: "&=" .

    $default  reduce using rule 165 (assignmentOperator)


State 180

  166 assignmentOperator: "^=" .

    $default  reduce using rule 166 (assignmentOperator)


State 181

  114 singleExpression: singleExpression arguments .

    $default  reduce using rule 114 (singleExpression)


State 182

  151 singleExpression: singleExpression assignmentOperator . expressionSequence

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 273
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 183

  140 singleExpression: singleExpression Instanceof . singleExpression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    singleExpression  go to state 274
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 184

  141 singleExpression: singleExpression In . singleExpression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    singleExpression  go to state 275
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 185

  131 singleExpression: literal '+' . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 276
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 186

  132 singleExpression: literal '-' . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 277
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 187

  128 singleExpression: literal '*' . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 278
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 188

  129 singleExpression: literal '/' . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 279
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 189

  130 singleExpression: literal '%' . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 280
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 190

  133 singleExpression: literal "<<" . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 281
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 191

  134 singleExpression: literal ">>" . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 282
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 192

  135 singleExpression: literal ">>>" . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 283
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 193

  136 singleExpression: literal '<' . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 284
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 194

  137 singleExpression: literal '>' . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 285
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 195

  138 singleExpression: literal "<=" . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 286
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 196

  139 singleExpression: literal ">=" . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 287
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 197

  142 singleExpression: literal "==" . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 288
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 198

  143 singleExpression: literal "!=" . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 289
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 199

  144 singleExpression: literal "===" . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 290
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 200

  145 singleExpression: literal "!==" . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 291
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 201

  146 singleExpression: literal '&' . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 292
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 202

  147 singleExpression: literal '^' . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 293
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 203

  148 singleExpression: literal "&&" . literal

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5

    literal         go to state 294
    numericLiteral  go to state 60
    StringLiteral   go to state 61
    NullLiteral     go to state 62
    BooleanLiteral  go to state 63


State 204

  224 eos: SemiColon .

    $default  reduce using rule 224 (eos)


State 205

   56 breakStatement: Break eos .

    $default  reduce using rule 56 (breakStatement)


State 206

   55 breakStatement: Break Identifier . eos

    SemiColon  shift, and go to state 204

    $default  reduce using rule 225 (eos)

    eos  go to state 295


State 207

   37 iterationStatement: Do statement . While '(' expressionSequence ')' eos

    while  shift, and go to state 16

    While  go to state 296


State 208

  112 singleExpression: singleExpression . '[' expressionSequence ']'
  113                 | singleExpression . '.' identifierName
  114                 | singleExpression . arguments
  117                 | singleExpression . "++"
  118                 | singleExpression . "--"
  121                 | Typeof singleExpression .
  140                 | singleExpression . Instanceof singleExpression
  141                 | singleExpression . In singleExpression
  149                 | singleExpression . '?' singleExpression ':' singleExpression
  150                 | singleExpression . '=' expressionSequence
  151                 | singleExpression . assignmentOperator expressionSequence

    instanceof  shift, and go to state 100
    in          shift, and go to state 106
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    '['         shift, and go to state 166
    '.'         shift, and go to state 167
    "++"        shift, and go to state 168
    "--"        shift, and go to state 169
    '?'         shift, and go to state 170
    "*="        shift, and go to state 171
    "/="        shift, and go to state 172
    "%="        shift, and go to state 173
    "+="        shift, and go to state 174
    "-="        shift, and go to state 175
    "<<="       shift, and go to state 176
    ">>="       shift, and go to state 177
    ">>>="      shift, and go to state 178
    "&="        shift, and go to state 179
    "^="        shift, and go to state 180

    instanceof  [reduce using rule 121 (singleExpression)]
    in          [reduce using rule 121 (singleExpression)]
    '='         [reduce using rule 121 (singleExpression)]
    '('         [reduce using rule 121 (singleExpression)]
    '['         [reduce using rule 121 (singleExpression)]
    '.'         [reduce using rule 121 (singleExpression)]
    "++"        [reduce using rule 121 (singleExpression)]
    "--"        [reduce using rule 121 (singleExpression)]
    '?'         [reduce using rule 121 (singleExpression)]
    "*="        [reduce using rule 121 (singleExpression)]
    "/="        [reduce using rule 121 (singleExpression)]
    "%="        [reduce using rule 121 (singleExpression)]
    "+="        [reduce using rule 121 (singleExpression)]
    "-="        [reduce using rule 121 (singleExpression)]
    "<<="       [reduce using rule 121 (singleExpression)]
    ">>="       [reduce using rule 121 (singleExpression)]
    ">>>="      [reduce using rule 121 (singleExpression)]
    "&="        [reduce using rule 121 (singleExpression)]
    "^="        [reduce using rule 121 (singleExpression)]
    $default    reduce using rule 121 (singleExpression)

    arguments           go to state 181
    assignmentOperator  go to state 182
    Instanceof          go to state 183
    In                  go to state 184


State 209

  112 singleExpression: singleExpression . '[' expressionSequence ']'
  113                 | singleExpression . '.' identifierName
  114                 | singleExpression . arguments
  115                 | New singleExpression . arguments
  116                 | New singleExpression .
  117                 | singleExpression . "++"
  118                 | singleExpression . "--"
  140                 | singleExpression . Instanceof singleExpression
  141                 | singleExpression . In singleExpression
  149                 | singleExpression . '?' singleExpression ':' singleExpression
  150                 | singleExpression . '=' expressionSequence
  151                 | singleExpression . assignmentOperator expressionSequence

    instanceof  shift, and go to state 100
    in          shift, and go to state 106
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    '['         shift, and go to state 166
    '.'         shift, and go to state 167
    "++"        shift, and go to state 168
    "--"        shift, and go to state 169
    '?'         shift, and go to state 170
    "*="        shift, and go to state 171
    "/="        shift, and go to state 172
    "%="        shift, and go to state 173
    "+="        shift, and go to state 174
    "-="        shift, and go to state 175
    "<<="       shift, and go to state 176
    ">>="       shift, and go to state 177
    ">>>="      shift, and go to state 178
    "&="        shift, and go to state 179
    "^="        shift, and go to state 180

    instanceof  [reduce using rule 116 (singleExpression)]
    in          [reduce using rule 116 (singleExpression)]
    '='         [reduce using rule 116 (singleExpression)]
    '('         [reduce using rule 116 (singleExpression)]
    '['         [reduce using rule 116 (singleExpression)]
    '.'         [reduce using rule 116 (singleExpression)]
    "++"        [reduce using rule 116 (singleExpression)]
    "--"        [reduce using rule 116 (singleExpression)]
    '?'         [reduce using rule 116 (singleExpression)]
    "*="        [reduce using rule 116 (singleExpression)]
    "/="        [reduce using rule 116 (singleExpression)]
    "%="        [reduce using rule 116 (singleExpression)]
    "+="        [reduce using rule 116 (singleExpression)]
    "-="        [reduce using rule 116 (singleExpression)]
    "<<="       [reduce using rule 116 (singleExpression)]
    ">>="       [reduce using rule 116 (singleExpression)]
    ">>>="      [reduce using rule 116 (singleExpression)]
    "&="        [reduce using rule 116 (singleExpression)]
    "^="        [reduce using rule 116 (singleExpression)]
    $default    reduce using rule 116 (singleExpression)

    arguments           go to state 297
    assignmentOperator  go to state 182
    Instanceof          go to state 183
    In                  go to state 184


State 210

   26 variableStatement: Var variableDeclarationList . eos

    SemiColon  shift, and go to state 204

    $default  reduce using rule 225 (eos)

    eos  go to state 298


State 211

   27 variableDeclarationList: variableDeclaration . ',' variableDeclarationList
   28                        | variableDeclaration .

    ','  shift, and go to state 299

    $default  reduce using rule 28 (variableDeclarationList)


State 212

   29 variableDeclaration: Identifier .
   30                    | Identifier . initialiser

    '='  shift, and go to state 300

    $default  reduce using rule 29 (variableDeclaration)

    initialiser  go to state 301


State 213

   57 returnStatement: Return expressionSequence . eos

    SemiColon  shift, and go to state 204

    $default  reduce using rule 225 (eos)

    eos  go to state 302


State 214

   58 returnStatement: Return eos .

    $default  reduce using rule 58 (returnStatement)


State 215

  112 singleExpression: singleExpression . '[' expressionSequence ']'
  113                 | singleExpression . '.' identifierName
  114                 | singleExpression . arguments
  117                 | singleExpression . "++"
  118                 | singleExpression . "--"
  120                 | Void singleExpression .
  140                 | singleExpression . Instanceof singleExpression
  141                 | singleExpression . In singleExpression
  149                 | singleExpression . '?' singleExpression ':' singleExpression
  150                 | singleExpression . '=' expressionSequence
  151                 | singleExpression . assignmentOperator expressionSequence

    instanceof  shift, and go to state 100
    in          shift, and go to state 106
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    '['         shift, and go to state 166
    '.'         shift, and go to state 167
    "++"        shift, and go to state 168
    "--"        shift, and go to state 169
    '?'         shift, and go to state 170
    "*="        shift, and go to state 171
    "/="        shift, and go to state 172
    "%="        shift, and go to state 173
    "+="        shift, and go to state 174
    "-="        shift, and go to state 175
    "<<="       shift, and go to state 176
    ">>="       shift, and go to state 177
    ">>>="      shift, and go to state 178
    "&="        shift, and go to state 179
    "^="        shift, and go to state 180

    instanceof  [reduce using rule 120 (singleExpression)]
    in          [reduce using rule 120 (singleExpression)]
    '='         [reduce using rule 120 (singleExpression)]
    '('         [reduce using rule 120 (singleExpression)]
    '['         [reduce using rule 120 (singleExpression)]
    '.'         [reduce using rule 120 (singleExpression)]
    "++"        [reduce using rule 120 (singleExpression)]
    "--"        [reduce using rule 120 (singleExpression)]
    '?'         [reduce using rule 120 (singleExpression)]
    "*="        [reduce using rule 120 (singleExpression)]
    "/="        [reduce using rule 120 (singleExpression)]
    "%="        [reduce using rule 120 (singleExpression)]
    "+="        [reduce using rule 120 (singleExpression)]
    "-="        [reduce using rule 120 (singleExpression)]
    "<<="       [reduce using rule 120 (singleExpression)]
    ">>="       [reduce using rule 120 (singleExpression)]
    ">>>="      [reduce using rule 120 (singleExpression)]
    "&="        [reduce using rule 120 (singleExpression)]
    "^="        [reduce using rule 120 (singleExpression)]
    $default    reduce using rule 120 (singleExpression)

    arguments           go to state 181
    assignmentOperator  go to state 182
    Instanceof          go to state 183
    In                  go to state 184


State 216

   54 continueStatement: Continue eos .

    $default  reduce using rule 54 (continueStatement)


State 217

   53 continueStatement: Continue Identifier . eos

    SemiColon  shift, and go to state 204

    $default  reduce using rule 225 (eos)

    eos  go to state 303


State 218

   39 iterationStatement: For '(' . expressionSequence ';' expressionSequence ';' expressionSequence ')' statement
   40                   | For '(' . ';' expressionSequence ';' expressionSequence ')' statement
   41                   | For '(' . expressionSequence ';' ';' expressionSequence ')' statement
   42                   | For '(' . ';' ';' expressionSequence ')' statement
   43                   | For '(' . expressionSequence ';' expressionSequence ';' ')' statement
   44                   | For '(' . expressionSequence ';' ';' ')' statement
   45                   | For '(' . ';' expressionSequence ';' ')' statement
   46                   | For '(' . ';' ';' ')' statement
   47                   | For '(' . Var variableDeclarationList ';' expressionSequence ';' expressionSequence ')' statement
   48                   | For '(' . Var variableDeclarationList ';' expressionSequence ';' ')' statement
   49                   | For '(' . Var variableDeclarationList ';' ';' expressionSequence ')' statement
   50                   | For '(' . Var variableDeclarationList ';' ';' ')' statement
   51                   | For '(' . singleExpression In expressionSequence ')' statement
   52                   | For '(' . Var variableDeclaration In expressionSequence ')' statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    ';'             shift, and go to state 304
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 305
    singleExpression    go to state 306
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Var                 go to state 307
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 219

   60 switchStatement: Switch '(' . expressionSequence ')' caseBlock

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 308
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 220

   38 iterationStatement: While '(' . expressionSequence ')' statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 309
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 221

   80 debuggerStatement: Debugger eos .

    $default  reduce using rule 80 (debuggerStatement)


State 222

   81 functionDeclaration: Function Identifier . '(' formalParameterList ')' '{' functionBody '}'
   82                    | Function Identifier . '(' ')' '{' functionBody '}'

    '('  shift, and go to state 310


State 223

   59 withStatement: With '(' . expressionSequence ')' statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 311
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 224

   35 ifStatement: If '(' . expressionSequence ')' statement Else statement
   36            | If '(' . expressionSequence ')' statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 312
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 225

   74 throwStatement: Throw expressionSequence . eos

    SemiColon  shift, and go to state 204

    $default  reduce using rule 225 (eos)

    eos  go to state 313


State 226

  112 singleExpression: singleExpression . '[' expressionSequence ']'
  113                 | singleExpression . '.' identifierName
  114                 | singleExpression . arguments
  117                 | singleExpression . "++"
  118                 | singleExpression . "--"
  119                 | Delete singleExpression .
  140                 | singleExpression . Instanceof singleExpression
  141                 | singleExpression . In singleExpression
  149                 | singleExpression . '?' singleExpression ':' singleExpression
  150                 | singleExpression . '=' expressionSequence
  151                 | singleExpression . assignmentOperator expressionSequence

    instanceof  shift, and go to state 100
    in          shift, and go to state 106
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    '['         shift, and go to state 166
    '.'         shift, and go to state 167
    "++"        shift, and go to state 168
    "--"        shift, and go to state 169
    '?'         shift, and go to state 170
    "*="        shift, and go to state 171
    "/="        shift, and go to state 172
    "%="        shift, and go to state 173
    "+="        shift, and go to state 174
    "-="        shift, and go to state 175
    "<<="       shift, and go to state 176
    ">>="       shift, and go to state 177
    ">>>="      shift, and go to state 178
    "&="        shift, and go to state 179
    "^="        shift, and go to state 180

    instanceof  [reduce using rule 119 (singleExpression)]
    in          [reduce using rule 119 (singleExpression)]
    '='         [reduce using rule 119 (singleExpression)]
    '('         [reduce using rule 119 (singleExpression)]
    '['         [reduce using rule 119 (singleExpression)]
    '.'         [reduce using rule 119 (singleExpression)]
    "++"        [reduce using rule 119 (singleExpression)]
    "--"        [reduce using rule 119 (singleExpression)]
    '?'         [reduce using rule 119 (singleExpression)]
    "*="        [reduce using rule 119 (singleExpression)]
    "/="        [reduce using rule 119 (singleExpression)]
    "%="        [reduce using rule 119 (singleExpression)]
    "+="        [reduce using rule 119 (singleExpression)]
    "-="        [reduce using rule 119 (singleExpression)]
    "<<="       [reduce using rule 119 (singleExpression)]
    ">>="       [reduce using rule 119 (singleExpression)]
    ">>>="      [reduce using rule 119 (singleExpression)]
    "&="        [reduce using rule 119 (singleExpression)]
    "^="        [reduce using rule 119 (singleExpression)]
    $default    reduce using rule 119 (singleExpression)

    arguments           go to state 181
    assignmentOperator  go to state 182
    Instanceof          go to state 183
    In                  go to state 184


State 227

   22 block: '{' . statementList '}'

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 25 (statementList)

    statement            go to state 109
    block                go to state 39
    statementList        go to state 110
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 228

   75 tryStatement: Try block . catchProduction
   76             | Try block . finallyProduction
   77             | Try block . catchProduction finallyProduction

    catch    shift, and go to state 103
    finally  shift, and go to state 104

    catchProduction    go to state 314
    finallyProduction  go to state 315
    Catch              go to state 316
    Finally            go to state 317


State 229

   73 labelledStatement: Identifier ':' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 318
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 230

   98 objectLiteral: '{' ',' '}' .

    $default  reduce using rule 98 (objectLiteral)


State 231

   24 statementList: statement statementList .

    $default  reduce using rule 24 (statementList)


State 232

   22 block: '{' statementList '}' .

    $default  reduce using rule 22 (block)


State 233

   97 objectLiteral: '{' propertyNameAndValueList '}' .

    $default  reduce using rule 97 (objectLiteral)


State 234

   96 objectLiteral: '{' propertyNameAndValueList ',' . '}'

    '}'  shift, and go to state 319


State 235

  101 propertyAssignment: propertyName ':' . singleExpression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    singleExpression  go to state 320
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 236

  102 propertyAssignment: Identifier '(' . ')' '{' functionBody '}'
  103                   | Identifier '(' . propertySetParameterList ')' '{' functionBody '}'

    ID   shift, and go to state 25
    ')'  shift, and go to state 321

    propertySetParameterList  go to state 322
    Identifier                go to state 323


State 237

   89 arrayLiteral: '[' elementList ',' . elision ']'

    ','  shift, and go to state 149

    ','       [reduce using rule 95 (elision)]
    $default  reduce using rule 95 (elision)

    elision  go to state 324


State 238

   88 arrayLiteral: '[' elementList ']' .

    $default  reduce using rule 88 (arrayLiteral)


State 239

   90 elementList: elisionExpr elementList .

    $default  reduce using rule 90 (elementList)


State 240

   94 elision: elision ',' .

    $default  reduce using rule 94 (elision)


State 241

   92 elisionExpr: elision singleExpression .
  112 singleExpression: singleExpression . '[' expressionSequence ']'
  113                 | singleExpression . '.' identifierName
  114                 | singleExpression . arguments
  117                 | singleExpression . "++"
  118                 | singleExpression . "--"
  140                 | singleExpression . Instanceof singleExpression
  141                 | singleExpression . In singleExpression
  149                 | singleExpression . '?' singleExpression ':' singleExpression
  150                 | singleExpression . '=' expressionSequence
  151                 | singleExpression . assignmentOperator expressionSequence

    instanceof  shift, and go to state 100
    in          shift, and go to state 106
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    '['         shift, and go to state 166
    '.'         shift, and go to state 167
    "++"        shift, and go to state 168
    "--"        shift, and go to state 169
    '?'         shift, and go to state 170
    "*="        shift, and go to state 171
    "/="        shift, and go to state 172
    "%="        shift, and go to state 173
    "+="        shift, and go to state 174
    "-="        shift, and go to state 175
    "<<="       shift, and go to state 176
    ">>="       shift, and go to state 177
    ">>>="      shift, and go to state 178
    "&="        shift, and go to state 179
    "^="        shift, and go to state 180

    '['       [reduce using rule 92 (elisionExpr)]
    "++"      [reduce using rule 92 (elisionExpr)]
    "--"      [reduce using rule 92 (elisionExpr)]
    $default  reduce using rule 92 (elisionExpr)

    arguments           go to state 181
    assignmentOperator  go to state 182
    Instanceof          go to state 183
    In                  go to state 184


State 242

  106 propertyName: numericLiteral .

    $default  reduce using rule 106 (propertyName)


State 243

  105 propertyName: StringLiteral .

    $default  reduce using rule 105 (propertyName)


State 244

  197 reservedWord: NullLiteral .

    $default  reduce using rule 197 (reservedWord)


State 245

  198 reservedWord: BooleanLiteral .

    $default  reduce using rule 198 (reservedWord)


State 246

  169 keyword: Break .

    $default  reduce using rule 169 (keyword)


State 247

  170 keyword: Do .

    $default  reduce using rule 170 (keyword)


State 248

  172 keyword: Typeof .

    $default  reduce using rule 172 (keyword)


State 249

  175 keyword: New .

    $default  reduce using rule 175 (keyword)


State 250

  176 keyword: Var .

    $default  reduce using rule 176 (keyword)


State 251

  179 keyword: Return .

    $default  reduce using rule 179 (keyword)


State 252

  180 keyword: Void .

    $default  reduce using rule 180 (keyword)


State 253

  181 keyword: Continue .

    $default  reduce using rule 181 (keyword)


State 254

  182 keyword: For .

    $default  reduce using rule 182 (keyword)


State 255

  183 keyword: Switch .

    $default  reduce using rule 183 (keyword)


State 256

  184 keyword: While .

    $default  reduce using rule 184 (keyword)


State 257

  185 keyword: Debugger .

    $default  reduce using rule 185 (keyword)


State 258

  187 keyword: This .

    $default  reduce using rule 187 (keyword)


State 259

  188 keyword: With .

    $default  reduce using rule 188 (keyword)


State 260

  190 keyword: If .

    $default  reduce using rule 190 (keyword)


State 261

  191 keyword: Throw .

    $default  reduce using rule 191 (keyword)


State 262

  192 keyword: Delete .

    $default  reduce using rule 192 (keyword)


State 263

  194 keyword: Try .

    $default  reduce using rule 194 (keyword)


State 264

  102 propertyAssignment: Identifier . '(' ')' '{' functionBody '}'
  103                   | Identifier . '(' propertySetParameterList ')' '{' functionBody '}'
  167 identifierName: Identifier .

    '('  shift, and go to state 236

    $default  reduce using rule 167 (identifierName)


State 265

  150 singleExpression: singleExpression '=' expressionSequence .

    $default  reduce using rule 150 (singleExpression)


State 266

  109 arguments: '(' ')' .

    $default  reduce using rule 109 (arguments)


State 267

  108 arguments: '(' argumentList . ')'

    ')'  shift, and go to state 325


State 268

  110 argumentList: singleExpression .
  112 singleExpression: singleExpression . '[' expressionSequence ']'
  113                 | singleExpression . '.' identifierName
  114                 | singleExpression . arguments
  117                 | singleExpression . "++"
  118                 | singleExpression . "--"
  140                 | singleExpression . Instanceof singleExpression
  141                 | singleExpression . In singleExpression
  149                 | singleExpression . '?' singleExpression ':' singleExpression
  150                 | singleExpression . '=' expressionSequence
  151                 | singleExpression . assignmentOperator expressionSequence

    instanceof  shift, and go to state 100
    in          shift, and go to state 106
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    '['         shift, and go to state 166
    '.'         shift, and go to state 167
    "++"        shift, and go to state 168
    "--"        shift, and go to state 169
    '?'         shift, and go to state 170
    "*="        shift, and go to state 171
    "/="        shift, and go to state 172
    "%="        shift, and go to state 173
    "+="        shift, and go to state 174
    "-="        shift, and go to state 175
    "<<="       shift, and go to state 176
    ">>="       shift, and go to state 177
    ">>>="      shift, and go to state 178
    "&="        shift, and go to state 179
    "^="        shift, and go to state 180

    $default  reduce using rule 110 (argumentList)

    arguments           go to state 181
    assignmentOperator  go to state 182
    Instanceof          go to state 183
    In                  go to state 184


State 269

  112 singleExpression: singleExpression '[' expressionSequence . ']'

    ']'  shift, and go to state 326


State 270

  113 singleExpression: singleExpression '.' identifierName .

    $default  reduce using rule 113 (singleExpression)


State 271

  167 identifierName: Identifier .

    $default  reduce using rule 167 (identifierName)


State 272

  112 singleExpression: singleExpression . '[' expressionSequence ']'
  113                 | singleExpression . '.' identifierName
  114                 | singleExpression . arguments
  117                 | singleExpression . "++"
  118                 | singleExpression . "--"
  140                 | singleExpression . Instanceof singleExpression
  141                 | singleExpression . In singleExpression
  149                 | singleExpression . '?' singleExpression ':' singleExpression
  149                 | singleExpression '?' singleExpression . ':' singleExpression
  150                 | singleExpression . '=' expressionSequence
  151                 | singleExpression . assignmentOperator expressionSequence

    instanceof  shift, and go to state 100
    in          shift, and go to state 106
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    ':'         shift, and go to state 327
    '['         shift, and go to state 166
    '.'         shift, and go to state 167
    "++"        shift, and go to state 168
    "--"        shift, and go to state 169
    '?'         shift, and go to state 170
    "*="        shift, and go to state 171
    "/="        shift, and go to state 172
    "%="        shift, and go to state 173
    "+="        shift, and go to state 174
    "-="        shift, and go to state 175
    "<<="       shift, and go to state 176
    ">>="       shift, and go to state 177
    ">>>="      shift, and go to state 178
    "&="        shift, and go to state 179
    "^="        shift, and go to state 180

    arguments           go to state 181
    assignmentOperator  go to state 182
    Instanceof          go to state 183
    In                  go to state 184


State 273

  151 singleExpression: singleExpression assignmentOperator expressionSequence .

    $default  reduce using rule 151 (singleExpression)


State 274

  112 singleExpression: singleExpression . '[' expressionSequence ']'
  113                 | singleExpression . '.' identifierName
  114                 | singleExpression . arguments
  117                 | singleExpression . "++"
  118                 | singleExpression . "--"
  140                 | singleExpression . Instanceof singleExpression
  140                 | singleExpression Instanceof singleExpression .
  141                 | singleExpression . In singleExpression
  149                 | singleExpression . '?' singleExpression ':' singleExpression
  150                 | singleExpression . '=' expressionSequence
  151                 | singleExpression . assignmentOperator expressionSequence

    instanceof  shift, and go to state 100
    in          shift, and go to state 106
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    '['         shift, and go to state 166
    '.'         shift, and go to state 167
    "++"        shift, and go to state 168
    "--"        shift, and go to state 169
    '?'         shift, and go to state 170
    "*="        shift, and go to state 171
    "/="        shift, and go to state 172
    "%="        shift, and go to state 173
    "+="        shift, and go to state 174
    "-="        shift, and go to state 175
    "<<="       shift, and go to state 176
    ">>="       shift, and go to state 177
    ">>>="      shift, and go to state 178
    "&="        shift, and go to state 179
    "^="        shift, and go to state 180

    instanceof  [reduce using rule 140 (singleExpression)]
    in          [reduce using rule 140 (singleExpression)]
    '='         [reduce using rule 140 (singleExpression)]
    '('         [reduce using rule 140 (singleExpression)]
    '['         [reduce using rule 140 (singleExpression)]
    '.'         [reduce using rule 140 (singleExpression)]
    "++"        [reduce using rule 140 (singleExpression)]
    "--"        [reduce using rule 140 (singleExpression)]
    '?'         [reduce using rule 140 (singleExpression)]
    "*="        [reduce using rule 140 (singleExpression)]
    "/="        [reduce using rule 140 (singleExpression)]
    "%="        [reduce using rule 140 (singleExpression)]
    "+="        [reduce using rule 140 (singleExpression)]
    "-="        [reduce using rule 140 (singleExpression)]
    "<<="       [reduce using rule 140 (singleExpression)]
    ">>="       [reduce using rule 140 (singleExpression)]
    ">>>="      [reduce using rule 140 (singleExpression)]
    "&="        [reduce using rule 140 (singleExpression)]
    "^="        [reduce using rule 140 (singleExpression)]
    $default    reduce using rule 140 (singleExpression)

    arguments           go to state 181
    assignmentOperator  go to state 182
    Instanceof          go to state 183
    In                  go to state 184


State 275

  112 singleExpression: singleExpression . '[' expressionSequence ']'
  113                 | singleExpression . '.' identifierName
  114                 | singleExpression . arguments
  117                 | singleExpression . "++"
  118                 | singleExpression . "--"
  140                 | singleExpression . Instanceof singleExpression
  141                 | singleExpression . In singleExpression
  141                 | singleExpression In singleExpression .
  149                 | singleExpression . '?' singleExpression ':' singleExpression
  150                 | singleExpression . '=' expressionSequence
  151                 | singleExpression . assignmentOperator expressionSequence

    instanceof  shift, and go to state 100
    in          shift, and go to state 106
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    '['         shift, and go to state 166
    '.'         shift, and go to state 167
    "++"        shift, and go to state 168
    "--"        shift, and go to state 169
    '?'         shift, and go to state 170
    "*="        shift, and go to state 171
    "/="        shift, and go to state 172
    "%="        shift, and go to state 173
    "+="        shift, and go to state 174
    "-="        shift, and go to state 175
    "<<="       shift, and go to state 176
    ">>="       shift, and go to state 177
    ">>>="      shift, and go to state 178
    "&="        shift, and go to state 179
    "^="        shift, and go to state 180

    instanceof  [reduce using rule 141 (singleExpression)]
    in          [reduce using rule 141 (singleExpression)]
    '='         [reduce using rule 141 (singleExpression)]
    '('         [reduce using rule 141 (singleExpression)]
    '['         [reduce using rule 141 (singleExpression)]
    '.'         [reduce using rule 141 (singleExpression)]
    "++"        [reduce using rule 141 (singleExpression)]
    "--"        [reduce using rule 141 (singleExpression)]
    '?'         [reduce using rule 141 (singleExpression)]
    "*="        [reduce using rule 141 (singleExpression)]
    "/="        [reduce using rule 141 (singleExpression)]
    "%="        [reduce using rule 141 (singleExpression)]
    "+="        [reduce using rule 141 (singleExpression)]
    "-="        [reduce using rule 141 (singleExpression)]
    "<<="       [reduce using rule 141 (singleExpression)]
    ">>="       [reduce using rule 141 (singleExpression)]
    ">>>="      [reduce using rule 141 (singleExpression)]
    "&="        [reduce using rule 141 (singleExpression)]
    "^="        [reduce using rule 141 (singleExpression)]
    $default    reduce using rule 141 (singleExpression)

    arguments           go to state 181
    assignmentOperator  go to state 182
    Instanceof          go to state 183
    In                  go to state 184


State 276

  131 singleExpression: literal '+' literal .

    $default  reduce using rule 131 (singleExpression)


State 277

  132 singleExpression: literal '-' literal .

    $default  reduce using rule 132 (singleExpression)


State 278

  128 singleExpression: literal '*' literal .

    $default  reduce using rule 128 (singleExpression)


State 279

  129 singleExpression: literal '/' literal .

    $default  reduce using rule 129 (singleExpression)


State 280

  130 singleExpression: literal '%' literal .

    $default  reduce using rule 130 (singleExpression)


State 281

  133 singleExpression: literal "<<" literal .

    $default  reduce using rule 133 (singleExpression)


State 282

  134 singleExpression: literal ">>" literal .

    $default  reduce using rule 134 (singleExpression)


State 283

  135 singleExpression: literal ">>>" literal .

    $default  reduce using rule 135 (singleExpression)


State 284

  136 singleExpression: literal '<' literal .

    $default  reduce using rule 136 (singleExpression)


State 285

  137 singleExpression: literal '>' literal .

    $default  reduce using rule 137 (singleExpression)


State 286

  138 singleExpression: literal "<=" literal .

    $default  reduce using rule 138 (singleExpression)


State 287

  139 singleExpression: literal ">=" literal .

    $default  reduce using rule 139 (singleExpression)


State 288

  142 singleExpression: literal "==" literal .

    $default  reduce using rule 142 (singleExpression)


State 289

  143 singleExpression: literal "!=" literal .

    $default  reduce using rule 143 (singleExpression)


State 290

  144 singleExpression: literal "===" literal .

    $default  reduce using rule 144 (singleExpression)


State 291

  145 singleExpression: literal "!==" literal .

    $default  reduce using rule 145 (singleExpression)


State 292

  146 singleExpression: literal '&' literal .

    $default  reduce using rule 146 (singleExpression)


State 293

  147 singleExpression: literal '^' literal .

    $default  reduce using rule 147 (singleExpression)


State 294

  148 singleExpression: literal "&&" literal .

    $default  reduce using rule 148 (singleExpression)


State 295

   55 breakStatement: Break Identifier eos .

    $default  reduce using rule 55 (breakStatement)


State 296

   37 iterationStatement: Do statement While . '(' expressionSequence ')' eos

    '('  shift, and go to state 328


State 297

  114 singleExpression: singleExpression arguments .
  115                 | New singleExpression arguments .

    $end            reduce using rule 114 (singleExpression)
    $end            [reduce using rule 115 (singleExpression)]
    INT_LITERAL     reduce using rule 114 (singleExpression)
    INT_LITERAL     [reduce using rule 115 (singleExpression)]
    STRING_LITERAL  reduce using rule 114 (singleExpression)
    STRING_LITERAL  [reduce using rule 115 (singleExpression)]
    null            reduce using rule 114 (singleExpression)
    null            [reduce using rule 115 (singleExpression)]
    true            reduce using rule 114 (singleExpression)
    true            [reduce using rule 115 (singleExpression)]
    false           reduce using rule 114 (singleExpression)
    false           [reduce using rule 115 (singleExpression)]
    SemiColon       reduce using rule 114 (singleExpression)
    SemiColon       [reduce using rule 115 (singleExpression)]
    break           reduce using rule 114 (singleExpression)
    break           [reduce using rule 115 (singleExpression)]
    do              reduce using rule 114 (singleExpression)
    do              [reduce using rule 115 (singleExpression)]
    instanceof      reduce using rule 114 (singleExpression)
    instanceof      [reduce using rule 115 (singleExpression)]
    typeof          reduce using rule 114 (singleExpression)
    typeof          [reduce using rule 115 (singleExpression)]
    case            reduce using rule 114 (singleExpression)
    case            [reduce using rule 115 (singleExpression)]
    else            reduce using rule 114 (singleExpression)
    else            [reduce using rule 115 (singleExpression)]
    new             reduce using rule 114 (singleExpression)
    new             [reduce using rule 115 (singleExpression)]
    var             reduce using rule 114 (singleExpression)
    var             [reduce using rule 115 (singleExpression)]
    return          reduce using rule 114 (singleExpression)
    return          [reduce using rule 115 (singleExpression)]
    void            reduce using rule 114 (singleExpression)
    void            [reduce using rule 115 (singleExpression)]
    continue        reduce using rule 114 (singleExpression)
    continue        [reduce using rule 115 (singleExpression)]
    for             reduce using rule 114 (singleExpression)
    for             [reduce using rule 115 (singleExpression)]
    switch          reduce using rule 114 (singleExpression)
    switch          [reduce using rule 115 (singleExpression)]
    while           reduce using rule 114 (singleExpression)
    while           [reduce using rule 115 (singleExpression)]
    debugger        reduce using rule 114 (singleExpression)
    debugger        [reduce using rule 115 (singleExpression)]
    function        reduce using rule 114 (singleExpression)
    function        [reduce using rule 115 (singleExpression)]
    this            reduce using rule 114 (singleExpression)
    this            [reduce using rule 115 (singleExpression)]
    with            reduce using rule 114 (singleExpression)
    with            [reduce using rule 115 (singleExpression)]
    default         reduce using rule 114 (singleExpression)
    default         [reduce using rule 115 (singleExpression)]
    if              reduce using rule 114 (singleExpression)
    if              [reduce using rule 115 (singleExpression)]
    throw           reduce using rule 114 (singleExpression)
    throw           [reduce using rule 115 (singleExpression)]
    delete          reduce using rule 114 (singleExpression)
    delete          [reduce using rule 115 (singleExpression)]
    in              reduce using rule 114 (singleExpression)
    in              [reduce using rule 115 (singleExpression)]
    try             reduce using rule 114 (singleExpression)
    try             [reduce using rule 115 (singleExpression)]
    ID              reduce using rule 114 (singleExpression)
    ID              [reduce using rule 115 (singleExpression)]
    '{'             reduce using rule 114 (singleExpression)
    '{'             [reduce using rule 115 (singleExpression)]
    '}'             reduce using rule 114 (singleExpression)
    '}'             [reduce using rule 115 (singleExpression)]
    ','             reduce using rule 114 (singleExpression)
    ','             [reduce using rule 115 (singleExpression)]
    '='             reduce using rule 114 (singleExpression)
    '='             [reduce using rule 115 (singleExpression)]
    ';'             reduce using rule 114 (singleExpression)
    ';'             [reduce using rule 115 (singleExpression)]
    '('             reduce using rule 114 (singleExpression)
    '('             [reduce using rule 115 (singleExpression)]
    ')'             reduce using rule 114 (singleExpression)
    ')'             [reduce using rule 115 (singleExpression)]
    ':'             reduce using rule 114 (singleExpression)
    ':'             [reduce using rule 115 (singleExpression)]
    '['             reduce using rule 114 (singleExpression)
    '['             [reduce using rule 115 (singleExpression)]
    ']'             reduce using rule 114 (singleExpression)
    ']'             [reduce using rule 115 (singleExpression)]
    '.'             reduce using rule 114 (singleExpression)
    '.'             [reduce using rule 115 (singleExpression)]
    "++"            reduce using rule 114 (singleExpression)
    "++"            [reduce using rule 115 (singleExpression)]
    "--"            reduce using rule 114 (singleExpression)
    "--"            [reduce using rule 115 (singleExpression)]
    '+'             reduce using rule 114 (singleExpression)
    '+'             [reduce using rule 115 (singleExpression)]
    '-'             reduce using rule 114 (singleExpression)
    '-'             [reduce using rule 115 (singleExpression)]
    '~'             reduce using rule 114 (singleExpression)
    '~'             [reduce using rule 115 (singleExpression)]
    '!'             reduce using rule 114 (singleExpression)
    '!'             [reduce using rule 115 (singleExpression)]
    '?'             reduce using rule 114 (singleExpression)
    '?'             [reduce using rule 115 (singleExpression)]
    "*="            reduce using rule 114 (singleExpression)
    "*="            [reduce using rule 115 (singleExpression)]
    "/="            reduce using rule 114 (singleExpression)
    "/="            [reduce using rule 115 (singleExpression)]
    "%="            reduce using rule 114 (singleExpression)
    "%="            [reduce using rule 115 (singleExpression)]
    "+="            reduce using rule 114 (singleExpression)
    "+="            [reduce using rule 115 (singleExpression)]
    "-="            reduce using rule 114 (singleExpression)
    "-="            [reduce using rule 115 (singleExpression)]
    "<<="           reduce using rule 114 (singleExpression)
    "<<="           [reduce using rule 115 (singleExpression)]
    ">>="           reduce using rule 114 (singleExpression)
    ">>="           [reduce using rule 115 (singleExpression)]
    ">>>="          reduce using rule 114 (singleExpression)
    ">>>="          [reduce using rule 115 (singleExpression)]
    "&="            reduce using rule 114 (singleExpression)
    "&="            [reduce using rule 115 (singleExpression)]
    "^="            reduce using rule 114 (singleExpression)
    "^="            [reduce using rule 115 (singleExpression)]
    $default        reduce using rule 114 (singleExpression)


State 298

   26 variableStatement: Var variableDeclarationList eos .

    $default  reduce using rule 26 (variableStatement)


State 299

   27 variableDeclarationList: variableDeclaration ',' . variableDeclarationList

    ID  shift, and go to state 25

    ID        [reduce using rule 31 (variableDeclaration)]
    $default  reduce using rule 31 (variableDeclaration)

    variableDeclarationList  go to state 329
    variableDeclaration      go to state 211
    Identifier               go to state 212


State 300

   32 initialiser: '=' . singleExpression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    singleExpression  go to state 330
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 301

   30 variableDeclaration: Identifier initialiser .

    $default  reduce using rule 30 (variableDeclaration)


State 302

   57 returnStatement: Return expressionSequence eos .

    $default  reduce using rule 57 (returnStatement)


State 303

   53 continueStatement: Continue Identifier eos .

    $default  reduce using rule 53 (continueStatement)


State 304

   40 iterationStatement: For '(' ';' . expressionSequence ';' expressionSequence ')' statement
   42                   | For '(' ';' . ';' expressionSequence ')' statement
   45                   | For '(' ';' . expressionSequence ';' ')' statement
   46                   | For '(' ';' . ';' ')' statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    ';'             shift, and go to state 331
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 332
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 305

   39 iterationStatement: For '(' expressionSequence . ';' expressionSequence ';' expressionSequence ')' statement
   41                   | For '(' expressionSequence . ';' ';' expressionSequence ')' statement
   43                   | For '(' expressionSequence . ';' expressionSequence ';' ')' statement
   44                   | For '(' expressionSequence . ';' ';' ')' statement

    ';'  shift, and go to state 333


State 306

   51 iterationStatement: For '(' singleExpression . In expressionSequence ')' statement
  111 expressionSequence: singleExpression .
  112 singleExpression: singleExpression . '[' expressionSequence ']'
  113                 | singleExpression . '.' identifierName
  114                 | singleExpression . arguments
  117                 | singleExpression . "++"
  118                 | singleExpression . "--"
  140                 | singleExpression . Instanceof singleExpression
  141                 | singleExpression . In singleExpression
  149                 | singleExpression . '?' singleExpression ':' singleExpression
  150                 | singleExpression . '=' expressionSequence
  151                 | singleExpression . assignmentOperator expressionSequence

    instanceof  shift, and go to state 100
    in          shift, and go to state 106
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    '['         shift, and go to state 166
    '.'         shift, and go to state 167
    "++"        shift, and go to state 168
    "--"        shift, and go to state 169
    '?'         shift, and go to state 170
    "*="        shift, and go to state 171
    "/="        shift, and go to state 172
    "%="        shift, and go to state 173
    "+="        shift, and go to state 174
    "-="        shift, and go to state 175
    "<<="       shift, and go to state 176
    ">>="       shift, and go to state 177
    ">>>="      shift, and go to state 178
    "&="        shift, and go to state 179
    "^="        shift, and go to state 180

    $default  reduce using rule 111 (expressionSequence)

    arguments           go to state 181
    assignmentOperator  go to state 182
    Instanceof          go to state 183
    In                  go to state 334


State 307

   47 iterationStatement: For '(' Var . variableDeclarationList ';' expressionSequence ';' expressionSequence ')' statement
   48                   | For '(' Var . variableDeclarationList ';' expressionSequence ';' ')' statement
   49                   | For '(' Var . variableDeclarationList ';' ';' expressionSequence ')' statement
   50                   | For '(' Var . variableDeclarationList ';' ';' ')' statement
   52                   | For '(' Var . variableDeclaration In expressionSequence ')' statement

    ID  shift, and go to state 25

    $default  reduce using rule 31 (variableDeclaration)

    variableDeclarationList  go to state 335
    variableDeclaration      go to state 336
    Identifier               go to state 212


State 308

   60 switchStatement: Switch '(' expressionSequence . ')' caseBlock

    ')'  shift, and go to state 337


State 309

   38 iterationStatement: While '(' expressionSequence . ')' statement

    ')'  shift, and go to state 338


State 310

   81 functionDeclaration: Function Identifier '(' . formalParameterList ')' '{' functionBody '}'
   82                    | Function Identifier '(' . ')' '{' functionBody '}'

    ID   shift, and go to state 25
    ')'  shift, and go to state 339

    formalParameterList  go to state 340
    Identifier           go to state 341


State 311

   59 withStatement: With '(' expressionSequence . ')' statement

    ')'  shift, and go to state 342


State 312

   35 ifStatement: If '(' expressionSequence . ')' statement Else statement
   36            | If '(' expressionSequence . ')' statement

    ')'  shift, and go to state 343


State 313

   74 throwStatement: Throw expressionSequence eos .

    $default  reduce using rule 74 (throwStatement)


State 314

   75 tryStatement: Try block catchProduction .
   77             | Try block catchProduction . finallyProduction

    finally  shift, and go to state 104

    $default  reduce using rule 75 (tryStatement)

    finallyProduction  go to state 344
    Finally            go to state 317


State 315

   76 tryStatement: Try block finallyProduction .

    $default  reduce using rule 76 (tryStatement)


State 316

   78 catchProduction: Catch . '(' Identifier ')' block

    '('  shift, and go to state 345


State 317

   79 finallyProduction: Finally . block

    '{'  shift, and go to state 227

    block  go to state 346


State 318

   73 labelledStatement: Identifier ':' statement .

    $default  reduce using rule 73 (labelledStatement)


State 319

   96 objectLiteral: '{' propertyNameAndValueList ',' '}' .

    $default  reduce using rule 96 (objectLiteral)


State 320

  101 propertyAssignment: propertyName ':' singleExpression .
  112 singleExpression: singleExpression . '[' expressionSequence ']'
  113                 | singleExpression . '.' identifierName
  114                 | singleExpression . arguments
  117                 | singleExpression . "++"
  118                 | singleExpression . "--"
  140                 | singleExpression . Instanceof singleExpression
  141                 | singleExpression . In singleExpression
  149                 | singleExpression . '?' singleExpression ':' singleExpression
  150                 | singleExpression . '=' expressionSequence
  151                 | singleExpression . assignmentOperator expressionSequence

    instanceof  shift, and go to state 100
    in          shift, and go to state 106
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    '['         shift, and go to state 166
    '.'         shift, and go to state 167
    "++"        shift, and go to state 168
    "--"        shift, and go to state 169
    '?'         shift, and go to state 170
    "*="        shift, and go to state 171
    "/="        shift, and go to state 172
    "%="        shift, and go to state 173
    "+="        shift, and go to state 174
    "-="        shift, and go to state 175
    "<<="       shift, and go to state 176
    ">>="       shift, and go to state 177
    ">>>="      shift, and go to state 178
    "&="        shift, and go to state 179
    "^="        shift, and go to state 180

    $default  reduce using rule 101 (propertyAssignment)

    arguments           go to state 181
    assignmentOperator  go to state 182
    Instanceof          go to state 183
    In                  go to state 184


State 321

  102 propertyAssignment: Identifier '(' ')' . '{' functionBody '}'

    '{'  shift, and go to state 347


State 322

  103 propertyAssignment: Identifier '(' propertySetParameterList . ')' '{' functionBody '}'

    ')'  shift, and go to state 348


State 323

  107 propertySetParameterList: Identifier .

    $default  reduce using rule 107 (propertySetParameterList)


State 324

   89 arrayLiteral: '[' elementList ',' elision . ']'
   94 elision: elision . ','

    ','  shift, and go to state 240
    ']'  shift, and go to state 349


State 325

  108 arguments: '(' argumentList ')' .

    $default  reduce using rule 108 (arguments)


State 326

  112 singleExpression: singleExpression '[' expressionSequence ']' .

    $default  reduce using rule 112 (singleExpression)


State 327

  149 singleExpression: singleExpression '?' singleExpression ':' . singleExpression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral      go to state 55
    objectLiteral     go to state 56
    singleExpression  go to state 350
    literal           go to state 59
    numericLiteral    go to state 60
    StringLiteral     go to state 61
    NullLiteral       go to state 62
    BooleanLiteral    go to state 63
    Typeof            go to state 66
    New               go to state 67
    Void              go to state 70
    This              go to state 77
    Delete            go to state 81
    Identifier        go to state 160


State 328

   37 iterationStatement: Do statement While '(' . expressionSequence ')' eos

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 351
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 329

   27 variableDeclarationList: variableDeclaration ',' variableDeclarationList .

    $default  reduce using rule 27 (variableDeclarationList)


State 330

   32 initialiser: '=' singleExpression .
  112 singleExpression: singleExpression . '[' expressionSequence ']'
  113                 | singleExpression . '.' identifierName
  114                 | singleExpression . arguments
  117                 | singleExpression . "++"
  118                 | singleExpression . "--"
  140                 | singleExpression . Instanceof singleExpression
  141                 | singleExpression . In singleExpression
  149                 | singleExpression . '?' singleExpression ':' singleExpression
  150                 | singleExpression . '=' expressionSequence
  151                 | singleExpression . assignmentOperator expressionSequence

    instanceof  shift, and go to state 100
    in          shift, and go to state 106
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    '['         shift, and go to state 166
    '.'         shift, and go to state 167
    "++"        shift, and go to state 168
    "--"        shift, and go to state 169
    '?'         shift, and go to state 170
    "*="        shift, and go to state 171
    "/="        shift, and go to state 172
    "%="        shift, and go to state 173
    "+="        shift, and go to state 174
    "-="        shift, and go to state 175
    "<<="       shift, and go to state 176
    ">>="       shift, and go to state 177
    ">>>="      shift, and go to state 178
    "&="        shift, and go to state 179
    "^="        shift, and go to state 180

    in        [reduce using rule 32 (initialiser)]
    '['       [reduce using rule 32 (initialiser)]
    "++"      [reduce using rule 32 (initialiser)]
    "--"      [reduce using rule 32 (initialiser)]
    $default  reduce using rule 32 (initialiser)

    arguments           go to state 181
    assignmentOperator  go to state 182
    Instanceof          go to state 183
    In                  go to state 184


State 331

   42 iterationStatement: For '(' ';' ';' . expressionSequence ')' statement
   46                   | For '(' ';' ';' . ')' statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    ')'             shift, and go to state 352
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 353
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 332

   40 iterationStatement: For '(' ';' expressionSequence . ';' expressionSequence ')' statement
   45                   | For '(' ';' expressionSequence . ';' ')' statement

    ';'  shift, and go to state 354


State 333

   39 iterationStatement: For '(' expressionSequence ';' . expressionSequence ';' expressionSequence ')' statement
   41                   | For '(' expressionSequence ';' . ';' expressionSequence ')' statement
   43                   | For '(' expressionSequence ';' . expressionSequence ';' ')' statement
   44                   | For '(' expressionSequence ';' . ';' ')' statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    ';'             shift, and go to state 355
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 356
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 334

   51 iterationStatement: For '(' singleExpression In . expressionSequence ')' statement
  141 singleExpression: singleExpression In . singleExpression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 357
    singleExpression    go to state 358
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 335

   47 iterationStatement: For '(' Var variableDeclarationList . ';' expressionSequence ';' expressionSequence ')' statement
   48                   | For '(' Var variableDeclarationList . ';' expressionSequence ';' ')' statement
   49                   | For '(' Var variableDeclarationList . ';' ';' expressionSequence ')' statement
   50                   | For '(' Var variableDeclarationList . ';' ';' ')' statement

    ';'  shift, and go to state 359


State 336

   27 variableDeclarationList: variableDeclaration . ',' variableDeclarationList
   28                        | variableDeclaration .
   52 iterationStatement: For '(' Var variableDeclaration . In expressionSequence ')' statement

    in   shift, and go to state 106
    ','  shift, and go to state 299

    $default  reduce using rule 28 (variableDeclarationList)

    In  go to state 360


State 337

   60 switchStatement: Switch '(' expressionSequence ')' . caseBlock

    '{'  shift, and go to state 361

    caseBlock  go to state 362


State 338

   38 iterationStatement: While '(' expressionSequence ')' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 363
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 339

   82 functionDeclaration: Function Identifier '(' ')' . '{' functionBody '}'

    '{'  shift, and go to state 364


State 340

   81 functionDeclaration: Function Identifier '(' formalParameterList . ')' '{' functionBody '}'

    ')'  shift, and go to state 365


State 341

   83 formalParameterList: Identifier . ',' formalParameterList
   84                    | Identifier .

    ','  shift, and go to state 366

    $default  reduce using rule 84 (formalParameterList)


State 342

   59 withStatement: With '(' expressionSequence ')' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 367
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 343

   35 ifStatement: If '(' expressionSequence ')' . statement Else statement
   36            | If '(' expressionSequence ')' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 368
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 344

   77 tryStatement: Try block catchProduction finallyProduction .

    $default  reduce using rule 77 (tryStatement)


State 345

   78 catchProduction: Catch '(' . Identifier ')' block

    ID  shift, and go to state 25

    Identifier  go to state 369


State 346

   79 finallyProduction: Finally block .

    $default  reduce using rule 79 (finallyProduction)


State 347

  102 propertyAssignment: Identifier '(' ')' '{' . functionBody '}'

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    function        shift, and go to state 18
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 86 (functionBody)

    sourceElements       go to state 370
    sourceElement        go to state 37
    statement            go to state 38
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    functionDeclaration  go to state 54
    functionBody         go to state 371
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    Function             go to state 76
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 348

  103 propertyAssignment: Identifier '(' propertySetParameterList ')' . '{' functionBody '}'

    '{'  shift, and go to state 372


State 349

   89 arrayLiteral: '[' elementList ',' elision ']' .

    $default  reduce using rule 89 (arrayLiteral)


State 350

  112 singleExpression: singleExpression . '[' expressionSequence ']'
  113                 | singleExpression . '.' identifierName
  114                 | singleExpression . arguments
  117                 | singleExpression . "++"
  118                 | singleExpression . "--"
  140                 | singleExpression . Instanceof singleExpression
  141                 | singleExpression . In singleExpression
  149                 | singleExpression . '?' singleExpression ':' singleExpression
  149                 | singleExpression '?' singleExpression ':' singleExpression .
  150                 | singleExpression . '=' expressionSequence
  151                 | singleExpression . assignmentOperator expressionSequence

    instanceof  shift, and go to state 100
    in          shift, and go to state 106
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    '['         shift, and go to state 166
    '.'         shift, and go to state 167
    "++"        shift, and go to state 168
    "--"        shift, and go to state 169
    '?'         shift, and go to state 170
    "*="        shift, and go to state 171
    "/="        shift, and go to state 172
    "%="        shift, and go to state 173
    "+="        shift, and go to state 174
    "-="        shift, and go to state 175
    "<<="       shift, and go to state 176
    ">>="       shift, and go to state 177
    ">>>="      shift, and go to state 178
    "&="        shift, and go to state 179
    "^="        shift, and go to state 180

    instanceof  [reduce using rule 149 (singleExpression)]
    in          [reduce using rule 149 (singleExpression)]
    '='         [reduce using rule 149 (singleExpression)]
    '('         [reduce using rule 149 (singleExpression)]
    '['         [reduce using rule 149 (singleExpression)]
    '.'         [reduce using rule 149 (singleExpression)]
    "++"        [reduce using rule 149 (singleExpression)]
    "--"        [reduce using rule 149 (singleExpression)]
    '?'         [reduce using rule 149 (singleExpression)]
    "*="        [reduce using rule 149 (singleExpression)]
    "/="        [reduce using rule 149 (singleExpression)]
    "%="        [reduce using rule 149 (singleExpression)]
    "+="        [reduce using rule 149 (singleExpression)]
    "-="        [reduce using rule 149 (singleExpression)]
    "<<="       [reduce using rule 149 (singleExpression)]
    ">>="       [reduce using rule 149 (singleExpression)]
    ">>>="      [reduce using rule 149 (singleExpression)]
    "&="        [reduce using rule 149 (singleExpression)]
    "^="        [reduce using rule 149 (singleExpression)]
    $default    reduce using rule 149 (singleExpression)

    arguments           go to state 181
    assignmentOperator  go to state 182
    Instanceof          go to state 183
    In                  go to state 184


State 351

   37 iterationStatement: Do statement While '(' expressionSequence . ')' eos

    ')'  shift, and go to state 373


State 352

   46 iterationStatement: For '(' ';' ';' ')' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 374
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 353

   42 iterationStatement: For '(' ';' ';' expressionSequence . ')' statement

    ')'  shift, and go to state 375


State 354

   40 iterationStatement: For '(' ';' expressionSequence ';' . expressionSequence ')' statement
   45                   | For '(' ';' expressionSequence ';' . ')' statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    ')'             shift, and go to state 376
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 377
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 355

   41 iterationStatement: For '(' expressionSequence ';' ';' . expressionSequence ')' statement
   44                   | For '(' expressionSequence ';' ';' . ')' statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    ')'             shift, and go to state 378
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 379
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 356

   39 iterationStatement: For '(' expressionSequence ';' expressionSequence . ';' expressionSequence ')' statement
   43                   | For '(' expressionSequence ';' expressionSequence . ';' ')' statement

    ';'  shift, and go to state 380


State 357

   51 iterationStatement: For '(' singleExpression In expressionSequence . ')' statement

    ')'  shift, and go to state 381


State 358

  111 expressionSequence: singleExpression .
  112 singleExpression: singleExpression . '[' expressionSequence ']'
  113                 | singleExpression . '.' identifierName
  114                 | singleExpression . arguments
  117                 | singleExpression . "++"
  118                 | singleExpression . "--"
  140                 | singleExpression . Instanceof singleExpression
  141                 | singleExpression . In singleExpression
  141                 | singleExpression In singleExpression .
  149                 | singleExpression . '?' singleExpression ':' singleExpression
  150                 | singleExpression . '=' expressionSequence
  151                 | singleExpression . assignmentOperator expressionSequence

    instanceof  shift, and go to state 100
    in          shift, and go to state 106
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    '['         shift, and go to state 166
    '.'         shift, and go to state 167
    "++"        shift, and go to state 168
    "--"        shift, and go to state 169
    '?'         shift, and go to state 170
    "*="        shift, and go to state 171
    "/="        shift, and go to state 172
    "%="        shift, and go to state 173
    "+="        shift, and go to state 174
    "-="        shift, and go to state 175
    "<<="       shift, and go to state 176
    ">>="       shift, and go to state 177
    ">>>="      shift, and go to state 178
    "&="        shift, and go to state 179
    "^="        shift, and go to state 180

    instanceof  [reduce using rule 141 (singleExpression)]
    in          [reduce using rule 141 (singleExpression)]
    '='         [reduce using rule 141 (singleExpression)]
    ';'         reduce using rule 141 (singleExpression)
    '('         [reduce using rule 141 (singleExpression)]
    '['         [reduce using rule 141 (singleExpression)]
    '.'         [reduce using rule 141 (singleExpression)]
    "++"        [reduce using rule 141 (singleExpression)]
    "--"        [reduce using rule 141 (singleExpression)]
    '?'         [reduce using rule 141 (singleExpression)]
    "*="        [reduce using rule 141 (singleExpression)]
    "/="        [reduce using rule 141 (singleExpression)]
    "%="        [reduce using rule 141 (singleExpression)]
    "+="        [reduce using rule 141 (singleExpression)]
    "-="        [reduce using rule 141 (singleExpression)]
    "<<="       [reduce using rule 141 (singleExpression)]
    ">>="       [reduce using rule 141 (singleExpression)]
    ">>>="      [reduce using rule 141 (singleExpression)]
    "&="        [reduce using rule 141 (singleExpression)]
    "^="        [reduce using rule 141 (singleExpression)]
    $default    reduce using rule 111 (expressionSequence)

    arguments           go to state 181
    assignmentOperator  go to state 182
    Instanceof          go to state 183
    In                  go to state 184


State 359

   47 iterationStatement: For '(' Var variableDeclarationList ';' . expressionSequence ';' expressionSequence ')' statement
   48                   | For '(' Var variableDeclarationList ';' . expressionSequence ';' ')' statement
   49                   | For '(' Var variableDeclarationList ';' . ';' expressionSequence ')' statement
   50                   | For '(' Var variableDeclarationList ';' . ';' ')' statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    ';'             shift, and go to state 382
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 383
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 360

   52 iterationStatement: For '(' Var variableDeclaration In . expressionSequence ')' statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 384
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 361

   61 caseBlock: '{' . caseClauses defaultClause caseClauses '}'
   62          | '{' . caseClauses defaultClause '}'
   63          | '{' . caseClauses '}'
   64          | '{' . defaultClause caseClauses '}'
   65          | '{' . defaultClause '}'
   66          | '{' . '}'

    case     shift, and go to state 101
    default  shift, and go to state 105
    '}'      shift, and go to state 385

    caseClauses    go to state 386
    caseClause     go to state 387
    defaultClause  go to state 388
    Case           go to state 389
    Default        go to state 390


State 362

   60 switchStatement: Switch '(' expressionSequence ')' caseBlock .

    $default  reduce using rule 60 (switchStatement)


State 363

   38 iterationStatement: While '(' expressionSequence ')' statement .

    $default  reduce using rule 38 (iterationStatement)


State 364

   82 functionDeclaration: Function Identifier '(' ')' '{' . functionBody '}'

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    function        shift, and go to state 18
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 86 (functionBody)

    sourceElements       go to state 370
    sourceElement        go to state 37
    statement            go to state 38
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    functionDeclaration  go to state 54
    functionBody         go to state 391
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    Function             go to state 76
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 365

   81 functionDeclaration: Function Identifier '(' formalParameterList ')' . '{' functionBody '}'

    '{'  shift, and go to state 392


State 366

   83 formalParameterList: Identifier ',' . formalParameterList

    ID  shift, and go to state 25

    formalParameterList  go to state 393
    Identifier           go to state 341


State 367

   59 withStatement: With '(' expressionSequence ')' statement .

    $default  reduce using rule 59 (withStatement)


State 368

   35 ifStatement: If '(' expressionSequence ')' statement . Else statement
   36            | If '(' expressionSequence ')' statement .

    else  shift, and go to state 102

    else      [reduce using rule 36 (ifStatement)]
    $default  reduce using rule 36 (ifStatement)

    Else  go to state 394


State 369

   78 catchProduction: Catch '(' Identifier . ')' block

    ')'  shift, and go to state 395


State 370

   85 functionBody: sourceElements .

    $default  reduce using rule 85 (functionBody)


State 371

  102 propertyAssignment: Identifier '(' ')' '{' functionBody . '}'

    '}'  shift, and go to state 396


State 372

  103 propertyAssignment: Identifier '(' propertySetParameterList ')' '{' . functionBody '}'

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    function        shift, and go to state 18
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 86 (functionBody)

    sourceElements       go to state 370
    sourceElement        go to state 37
    statement            go to state 38
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    functionDeclaration  go to state 54
    functionBody         go to state 397
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    Function             go to state 76
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 373

   37 iterationStatement: Do statement While '(' expressionSequence ')' . eos

    SemiColon  shift, and go to state 204

    $default  reduce using rule 225 (eos)

    eos  go to state 398


State 374

   46 iterationStatement: For '(' ';' ';' ')' statement .

    $default  reduce using rule 46 (iterationStatement)


State 375

   42 iterationStatement: For '(' ';' ';' expressionSequence ')' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 399
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 376

   45 iterationStatement: For '(' ';' expressionSequence ';' ')' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 400
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 377

   40 iterationStatement: For '(' ';' expressionSequence ';' expressionSequence . ')' statement

    ')'  shift, and go to state 401


State 378

   44 iterationStatement: For '(' expressionSequence ';' ';' ')' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 402
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 379

   41 iterationStatement: For '(' expressionSequence ';' ';' expressionSequence . ')' statement

    ')'  shift, and go to state 403


State 380

   39 iterationStatement: For '(' expressionSequence ';' expressionSequence ';' . expressionSequence ')' statement
   43                   | For '(' expressionSequence ';' expressionSequence ';' . ')' statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    ')'             shift, and go to state 404
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 405
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 381

   51 iterationStatement: For '(' singleExpression In expressionSequence ')' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 406
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 382

   49 iterationStatement: For '(' Var variableDeclarationList ';' ';' . expressionSequence ')' statement
   50                   | For '(' Var variableDeclarationList ';' ';' . ')' statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    ')'             shift, and go to state 407
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 408
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 383

   47 iterationStatement: For '(' Var variableDeclarationList ';' expressionSequence . ';' expressionSequence ')' statement
   48                   | For '(' Var variableDeclarationList ';' expressionSequence . ';' ')' statement

    ';'  shift, and go to state 409


State 384

   52 iterationStatement: For '(' Var variableDeclaration In expressionSequence . ')' statement

    ')'  shift, and go to state 410


State 385

   66 caseBlock: '{' '}' .

    $default  reduce using rule 66 (caseBlock)


State 386

   61 caseBlock: '{' caseClauses . defaultClause caseClauses '}'
   62          | '{' caseClauses . defaultClause '}'
   63          | '{' caseClauses . '}'

    default  shift, and go to state 105
    '}'      shift, and go to state 411

    defaultClause  go to state 412
    Default        go to state 390


State 387

   67 caseClauses: caseClause .
   68            | caseClause . caseClauses

    case  shift, and go to state 101

    $default  reduce using rule 67 (caseClauses)

    caseClauses  go to state 413
    caseClause   go to state 387
    Case         go to state 389


State 388

   64 caseBlock: '{' defaultClause . caseClauses '}'
   65          | '{' defaultClause . '}'

    case  shift, and go to state 101
    '}'   shift, and go to state 414

    caseClauses  go to state 415
    caseClause   go to state 387
    Case         go to state 389


State 389

   69 caseClause: Case . expressionSequence ':' statementList
   70           | Case . expressionSequence ':'

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 416
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 390

   71 defaultClause: Default . ':' statementList
   72              | Default . ':'

    ':'  shift, and go to state 417


State 391

   82 functionDeclaration: Function Identifier '(' ')' '{' functionBody . '}'

    '}'  shift, and go to state 418


State 392

   81 functionDeclaration: Function Identifier '(' formalParameterList ')' '{' . functionBody '}'

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    function        shift, and go to state 18
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 86 (functionBody)

    sourceElements       go to state 370
    sourceElement        go to state 37
    statement            go to state 38
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    functionDeclaration  go to state 54
    functionBody         go to state 419
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    Function             go to state 76
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 393

   83 formalParameterList: Identifier ',' formalParameterList .

    $default  reduce using rule 83 (formalParameterList)


State 394

   35 ifStatement: If '(' expressionSequence ')' statement Else . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 420
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 395

   78 catchProduction: Catch '(' Identifier ')' . block

    '{'  shift, and go to state 227

    block  go to state 421


State 396

  102 propertyAssignment: Identifier '(' ')' '{' functionBody '}' .

    $default  reduce using rule 102 (propertyAssignment)


State 397

  103 propertyAssignment: Identifier '(' propertySetParameterList ')' '{' functionBody . '}'

    '}'  shift, and go to state 422


State 398

   37 iterationStatement: Do statement While '(' expressionSequence ')' eos .

    $default  reduce using rule 37 (iterationStatement)


State 399

   42 iterationStatement: For '(' ';' ';' expressionSequence ')' statement .

    $default  reduce using rule 42 (iterationStatement)


State 400

   45 iterationStatement: For '(' ';' expressionSequence ';' ')' statement .

    $default  reduce using rule 45 (iterationStatement)


State 401

   40 iterationStatement: For '(' ';' expressionSequence ';' expressionSequence ')' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 423
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 402

   44 iterationStatement: For '(' expressionSequence ';' ';' ')' statement .

    $default  reduce using rule 44 (iterationStatement)


State 403

   41 iterationStatement: For '(' expressionSequence ';' ';' expressionSequence ')' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 424
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 404

   43 iterationStatement: For '(' expressionSequence ';' expressionSequence ';' ')' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 425
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 405

   39 iterationStatement: For '(' expressionSequence ';' expressionSequence ';' expressionSequence . ')' statement

    ')'  shift, and go to state 426


State 406

   51 iterationStatement: For '(' singleExpression In expressionSequence ')' statement .

    $default  reduce using rule 51 (iterationStatement)


State 407

   50 iterationStatement: For '(' Var variableDeclarationList ';' ';' ')' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 427
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 408

   49 iterationStatement: For '(' Var variableDeclarationList ';' ';' expressionSequence . ')' statement

    ')'  shift, and go to state 428


State 409

   47 iterationStatement: For '(' Var variableDeclarationList ';' expressionSequence ';' . expressionSequence ')' statement
   48                   | For '(' Var variableDeclarationList ';' expressionSequence ';' . ')' statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    void            shift, and go to state 12
    this            shift, and go to state 19
    delete          shift, and go to state 23
    ID              shift, and go to state 25
    '{'             shift, and go to state 158
    ')'             shift, and go to state 429
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    arrayLiteral        go to state 55
    objectLiteral       go to state 56
    expressionSequence  go to state 430
    singleExpression    go to state 58
    literal             go to state 59
    numericLiteral      go to state 60
    StringLiteral       go to state 61
    NullLiteral         go to state 62
    BooleanLiteral      go to state 63
    Typeof              go to state 66
    New                 go to state 67
    Void                go to state 70
    This                go to state 77
    Delete              go to state 81
    Identifier          go to state 160


State 410

   52 iterationStatement: For '(' Var variableDeclaration In expressionSequence ')' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 431
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 411

   63 caseBlock: '{' caseClauses '}' .

    $default  reduce using rule 63 (caseBlock)


State 412

   61 caseBlock: '{' caseClauses defaultClause . caseClauses '}'
   62          | '{' caseClauses defaultClause . '}'

    case  shift, and go to state 101
    '}'   shift, and go to state 432

    caseClauses  go to state 433
    caseClause   go to state 387
    Case         go to state 389


State 413

   68 caseClauses: caseClause caseClauses .

    $default  reduce using rule 68 (caseClauses)


State 414

   65 caseBlock: '{' defaultClause '}' .

    $default  reduce using rule 65 (caseBlock)


State 415

   64 caseBlock: '{' defaultClause caseClauses . '}'

    '}'  shift, and go to state 434


State 416

   69 caseClause: Case expressionSequence . ':' statementList
   70           | Case expressionSequence . ':'

    ':'  shift, and go to state 435


State 417

   71 defaultClause: Default ':' . statementList
   72              | Default ':' .

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    case      reduce using rule 25 (statementList)
    case      [reduce using rule 72 (defaultClause)]
    '}'       reduce using rule 25 (statementList)
    '}'       [reduce using rule 72 (defaultClause)]
    $default  reduce using rule 25 (statementList)

    statement            go to state 109
    block                go to state 39
    statementList        go to state 436
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 418

   82 functionDeclaration: Function Identifier '(' ')' '{' functionBody '}' .

    $default  reduce using rule 82 (functionDeclaration)


State 419

   81 functionDeclaration: Function Identifier '(' formalParameterList ')' '{' functionBody . '}'

    '}'  shift, and go to state 437


State 420

   35 ifStatement: If '(' expressionSequence ')' statement Else statement .

    $default  reduce using rule 35 (ifStatement)


State 421

   78 catchProduction: Catch '(' Identifier ')' block .

    $default  reduce using rule 78 (catchProduction)


State 422

  103 propertyAssignment: Identifier '(' propertySetParameterList ')' '{' functionBody '}' .

    $default  reduce using rule 103 (propertyAssignment)


State 423

   40 iterationStatement: For '(' ';' expressionSequence ';' expressionSequence ')' statement .

    $default  reduce using rule 40 (iterationStatement)


State 424

   41 iterationStatement: For '(' expressionSequence ';' ';' expressionSequence ')' statement .

    $default  reduce using rule 41 (iterationStatement)


State 425

   43 iterationStatement: For '(' expressionSequence ';' expressionSequence ';' ')' statement .

    $default  reduce using rule 43 (iterationStatement)


State 426

   39 iterationStatement: For '(' expressionSequence ';' expressionSequence ';' expressionSequence ')' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 438
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 427

   50 iterationStatement: For '(' Var variableDeclarationList ';' ';' ')' statement .

    $default  reduce using rule 50 (iterationStatement)


State 428

   49 iterationStatement: For '(' Var variableDeclarationList ';' ';' expressionSequence ')' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 439
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 429

   48 iterationStatement: For '(' Var variableDeclarationList ';' expressionSequence ';' ')' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 440
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 430

   47 iterationStatement: For '(' Var variableDeclarationList ';' expressionSequence ';' expressionSequence . ')' statement

    ')'  shift, and go to state 441


State 431

   52 iterationStatement: For '(' Var variableDeclaration In expressionSequence ')' statement .

    $default  reduce using rule 52 (iterationStatement)


State 432

   62 caseBlock: '{' caseClauses defaultClause '}' .

    $default  reduce using rule 62 (caseBlock)


State 433

   61 caseBlock: '{' caseClauses defaultClause caseClauses . '}'

    '}'  shift, and go to state 442


State 434

   64 caseBlock: '{' defaultClause caseClauses '}' .

    $default  reduce using rule 64 (caseBlock)


State 435

   69 caseClause: Case expressionSequence ':' . statementList
   70           | Case expressionSequence ':' .

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    case      reduce using rule 25 (statementList)
    case      [reduce using rule 70 (caseClause)]
    default   reduce using rule 25 (statementList)
    default   [reduce using rule 70 (caseClause)]
    '}'       reduce using rule 25 (statementList)
    '}'       [reduce using rule 70 (caseClause)]
    $default  reduce using rule 25 (statementList)

    statement            go to state 109
    block                go to state 39
    statementList        go to state 443
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 436

   71 defaultClause: Default ':' statementList .

    $default  reduce using rule 71 (defaultClause)


State 437

   81 functionDeclaration: Function Identifier '(' formalParameterList ')' '{' functionBody '}' .

    $default  reduce using rule 81 (functionDeclaration)


State 438

   39 iterationStatement: For '(' expressionSequence ';' expressionSequence ';' expressionSequence ')' statement .

    $default  reduce using rule 39 (iterationStatement)


State 439

   49 iterationStatement: For '(' Var variableDeclarationList ';' ';' expressionSequence ')' statement .

    $default  reduce using rule 49 (iterationStatement)


State 440

   48 iterationStatement: For '(' Var variableDeclarationList ';' expressionSequence ';' ')' statement .

    $default  reduce using rule 48 (iterationStatement)


State 441

   47 iterationStatement: For '(' Var variableDeclarationList ';' expressionSequence ';' expressionSequence ')' . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    null            shift, and go to state 3
    true            shift, and go to state 4
    false           shift, and go to state 5
    break           shift, and go to state 6
    do              shift, and go to state 7
    typeof          shift, and go to state 8
    new             shift, and go to state 9
    var             shift, and go to state 10
    return          shift, and go to state 11
    void            shift, and go to state 12
    continue        shift, and go to state 13
    for             shift, and go to state 14
    switch          shift, and go to state 15
    while           shift, and go to state 16
    debugger        shift, and go to state 17
    this            shift, and go to state 19
    with            shift, and go to state 20
    if              shift, and go to state 21
    throw           shift, and go to state 22
    delete          shift, and go to state 23
    try             shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    ';'             shift, and go to state 27
    '['             shift, and go to state 28
    "++"            shift, and go to state 29
    "--"            shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    statement            go to state 444
    block                go to state 39
    variableStatement    go to state 40
    emptyStatement       go to state 41
    expressionStatement  go to state 42
    ifStatement          go to state 43
    iterationStatement   go to state 44
    continueStatement    go to state 45
    breakStatement       go to state 46
    returnStatement      go to state 47
    withStatement        go to state 48
    switchStatement      go to state 49
    labelledStatement    go to state 50
    throwStatement       go to state 51
    tryStatement         go to state 52
    debuggerStatement    go to state 53
    arrayLiteral         go to state 55
    objectLiteral        go to state 56
    expressionSequence   go to state 57
    singleExpression     go to state 58
    literal              go to state 59
    numericLiteral       go to state 60
    StringLiteral        go to state 61
    NullLiteral          go to state 62
    BooleanLiteral       go to state 63
    Break                go to state 64
    Do                   go to state 65
    Typeof               go to state 66
    New                  go to state 67
    Var                  go to state 68
    Return               go to state 69
    Void                 go to state 70
    Continue             go to state 71
    For                  go to state 72
    Switch               go to state 73
    While                go to state 74
    Debugger             go to state 75
    This                 go to state 77
    With                 go to state 78
    If                   go to state 79
    Throw                go to state 80
    Delete               go to state 81
    Try                  go to state 82
    Identifier           go to state 83


State 442

   61 caseBlock: '{' caseClauses defaultClause caseClauses '}' .

    $default  reduce using rule 61 (caseBlock)


State 443

   69 caseClause: Case expressionSequence ':' statementList .

    $default  reduce using rule 69 (caseClause)


State 444

   47 iterationStatement: For '(' Var variableDeclarationList ';' expressionSequence ';' expressionSequence ')' statement .

    $default  reduce using rule 47 (iterationStatement)
