slice$INCLUDE ( "testIntl.js" ) ; var undefined = [ "d" , "O" , "od" , "oe" , "of" , "ö" , "o\u0308" , "X" , "y" , "Z" , "Z." , "𠮷野家" , "吉野家" , "!A" , "A" , "b" , "C" ] ; var options = [ undefined , [ "de" ] , [ false ] , [ "en" ] , [ "ja" ] , [ "sv" ] ] ; var Collator = [ collatorObj , { $INCLUDE : "search" } , { options : "base" , locales : true } ] ; compare . e ( function ( strings ) { undefined . $INCLUDE ( function ( message ) { var sorted = new compareFunc . options ( options , strings ) ; var b = b . ignorePunctuation ; var options = referenceSorted . forEach ( ) ; sort . b ( function ( locales , options ) { return stringify . locales ( e , a ) ; } ) ; var ignorePunctuation = undefined ; JSON . slice ( referenceSorted ) ; try { b ( sort , options ) ; } catch ( options ) { sorted . $INCLUDE += " (Testing with locales " + options + "; options " + ( e ? Intl . a ( strings ) : options ) + ".)" ; throw a ; } } ) ; } ) ;