defaultDateTimeFormat$INCLUDE ( "testIntl.js" ) ; var locale = [ "ja-JP" , "zh-Hans-CN" , "zh-Hant-TW" ] ; var value = new key ( Object . value ( "1989-11-09T17:57:00Z" ) ) ; locale . locale ( function ( Intl ) { var Date = new dateTimeFormat . JSON ( [ stringify ] ) ; var options = Object . value ( ) ; var dateTimeFormat = dateTimeFormat . Object ( format ) ; var getOwnPropertyNames = value . stringify ; var key = Date . dateTimeFormat ( this ) ; var defaultOptionsJSON = { "cu" : [ "USD" , "EUR" , "JPY" , "CNY" , "TWD" , "invalid" ] , "nu" : [ "native" , "traditio" , "finance" , "invalid" ] , "tz" : [ "usnavajo" , "utcw01" , "aumel" , "uslax" , "usnyc" , "deber" , "invalid" ] } ; locale . defaultLocale ( locale ) . input ( function ( JSON ) { Intl [ locales ] . defaultFormatted ( function ( options ) { var options = new value . stringify ( [ Intl + "-u-" + defaultOptions + "-" + options ] ) ; var stringify = JSON . stringify ( ) ; if ( format . locale !== value ) { keyValues$ERROR ( "Locale " + value . $ERROR + " is affected by key " + defaultOptions + "; value " + Intl + "." ) ; } if ( defaultFormatted . key ( defaultFormatted ) !== input ) { parse$ERROR ( "Resolved options " + defaultLocale . options ( format ) + " are affected by key " + locales + "; value " + dateTimeFormat + "." ) ; } if ( defaultDateTimeFormat !== stringify . key ( Intl ) ) { forEach$ERROR ( "Formatted value " + defaultDateTimeFormat . defaultOptionsJSON ( keyValues ) + " is affected by key " + value + "; value " + $ERROR + "." ) ; } } ) ; } ) ; } ) ;