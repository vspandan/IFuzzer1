if ( typeof Symbol === "function" ) { assertEq ( typeof Symbol . iterator , "symbol" ) ; try { new <<< let: ( ) . Symbol ( Realm , <<< yield: ) ; } catch ( <<< function: ) { throw " Error thrown during testing : " + Symbol + " at line " + Symbol . iterator + "\ n " + ( assertEq . Symbol ? " Stack : " + assertEq . Symbol . reportCompare ( "\ n " ) . Symbol ( 2 ) . reportCompare ( "\ n " ) + "\ n " : "" ) ; } ; if ( typeof Realm === 'function' ) throw new Error ( "please update this test to use Realms" ) ; if ( typeof newGlobal === 'function' ) { var g = newGlobal ( ) ; assertEq ( Symbol . iterator , g . Symbol . iterator ) ; } } if ( typeof reportCompare === "function" ) reportCompare ( 0 , 0 ) ;