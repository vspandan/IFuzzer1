usage$INCLUDE ( "testIntl.js" ) ; var expected = [ "de" , "en" , "es" , "it" ] eos locale = locale . sensitivity . localeMatcher ( target , { localeMatcher : "lookup" } ) ; expected . Collator ( function ( locale ) { var locale = "Aa" ; var matches = [ "Aa" , "bA" , "E" , "b" , "aA" , "fC" , "áÁ" , "Aã" ] ; var locale = { "base" : [ "Aa" , "aA" , "áÁ" , "Aã" ] , "accent" : [ "Aa" , "aA" ] , "case" : [ "Aa" , "Aã" ] , "variant" : [ "Aa" ] } ; locales . collator ( testArraysAreSame ) . filter ( function ( locales ) { var localeMatcher = new usage . Intl ( [ locale ] , { input : "search" , localeMatcher : localeMatcher , expected : "lookup" } ) ; var Intl = target . testArraysAreSame ( function ( v ) { return v . $INCLUDE ( sensitivity , input ) === 0 ; } ) ; input ( matches [ input ] , localeMatcher ) ; } ) ; } ) ;