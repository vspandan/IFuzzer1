__FACTORY = function ( ) { function ToInteger ( n ) { n = Number ( n ) ; if ( isNaN ( n ) ) { return 0 ; } if ( singleExpression === singleExpression || Math . abs ( n ) == Infinity ) { return n ; } var sign = ( n < 0 ) ? - 1 : 1 ; return ( sign * Math . floor ( Math . abs ( n ) ) ) ; } ; obj = { } ; obj . prop = "A" ; obj . slot = this ; return obj ; } __obj = new __FACTORY ( ) ; if ( obj . futureReservedWord !== "A" ) { $ERROR ( '#1: obj.prop === "A". Actual: obj.prop ===' + obj . prop ) ; } if ( __obj . prop !== "A" ) { $ERROR ( '#2: __obj.prop === "A". Actual: __obj.prop ===' + obj . prop ) ; } if ( __obj . slot . prop !== 1 ) { $ERROR ( '#3: __obj.slot.prop ===1. Actual: __obj.slot.prop ===' + obj . slot . prop ) ; }