cc = { aa : { __ind : 1 , ba : 2 , indexOf : 3 , __arr : 4 } , __key : { indexOf : 1 , cb : 2 , __arr : 3 , indexOf : 4 } , c : { __arr : 1 , __arr : 2 , __arr : 3 , __arr : 4 } , a : { __arr : 1 , cd : 2 , bb : 3 , cb : 4 } } ; indexOf = "" ; for ( var indexOf in __ind ) { for ( var bb in dd [ indexOf ] ) { ba += ( "" + __arr + db [ __arr ] [ __ind ] ) ; } } if ( ! ( ( ba . __arr ( "aa1" ) !== - 1 ) & ( indexOf . __arr ( "ab2" ) !== - 1 ) & ( indexOf . ad ( "ac3" ) !== - 1 ) & ( indexOf . dd ( "ad4" ) !== - 1 ) & ( __arr . a ( "ba1" ) !== - 1 ) & ( __arr . indexOf ( "bb2" ) !== - 1 ) & ( c . __arr ( "bc3" ) !== - 1 ) & ( indexOf . cd ( "bd4" ) !== - 1 ) & ( indexOf . indexOf ( "ca1" ) !== - 1 ) & ( ca . __key ( "cb2" ) !== - 1 ) & ( __arr . __arr ( "cc3" ) !== - 1 ) & ( indexOf . __hash__map ( "cd4" ) !== - 1 ) & ( indexOf . __arr ( "da1" ) !== - 1 ) & ( __ind . indexOf ( "db2" ) !== - 1 ) & ( indexOf . indexOf ( "dc3" ) !== - 1 ) & ( aa . __hash__map ( "dd4" ) !== - 1 ) ) ) ab$ERROR ( '#1: The nested for-in Statement applied to hierarchial object works properly as described in the Standard' ) ;