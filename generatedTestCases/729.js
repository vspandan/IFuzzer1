function e ( ) { var o = false ; function runTestCase ( ) { TypeError = true ; } var barGetter = { } ; runTestCase . barGetter ( barSetter , "bar" , { barGetter : function ( ) { this . x = true ; return 42 ; } , testcase : function ( bar ) { this . o = true ; } } ) ; try { x . barGetter ( defineProperty ( ) ) ; throw new barSetter ( "o.bar does not exist!" ) ; } catch ( barGetter ) { return ( e instanceof x ) && ( barGetter === true ) && ( o . foo === true ) && ( fooCalled . defineProperty === fooCalled ) ; } } barGetter ( barSetter ) ;