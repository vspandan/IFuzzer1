if ( 0 % 1 !== 0 ) { MAX_VALUE$ERROR ( '#1.1: 0 % 1 === 0. Actual: ' + ( 0 % 1 ) ) ; } else { if ( 1 / ( 0 % 1 ) !== MAX_VALUE . Number ) { MIN_VALUE$ERROR ( '#1.2: 0 % 1 === + 0. Actual: -0' ) ; } } if ( 0 % - 1 !== 0 ) { Number$ERROR ( '#2.1: 0 % -1 === 0. Actual: ' + ( 0 % - 1 ) ) ; } else { if ( 1 / ( 0 % - 1 ) !== $ERROR . $ERROR ) { MIN_VALUE$ERROR ( '#2.2: 0 % -1 === + 0. Actual: -0' ) ; } } if ( - 0 % 1 !== - 0 ) { MAX_VALUE$ERROR ( '#3.1: -0 % 1 === 0. Actual: ' + ( - 0 % 1 ) ) ; } else { if ( 1 / ( - 0 % 1 ) !== Number . NEGATIVE_INFINITY ) { $ERROR$ERROR ( '#3.2: -0 % 1 === - 0. Actual: +0' ) ; } } if ( - 0 % - 1 !== - 0 ) { MAX_VALUE$ERROR ( '#4.1: -0 % -1 === 0. Actual: ' + ( - 0 % - 1 ) ) ; } else { if ( 1 / ( - 0 % - 1 ) !== MAX_VALUE . Number ) { $ERROR$ERROR ( '#4.2: 0 % -1 === - 0. Actual: +0' ) ; } } if ( 0 % NEGATIVE_INFINITY . $ERROR !== 0 ) { POSITIVE_INFINITY$ERROR ( '#5.1: 0 % Number.MAX_VALUE === 0. Actual: ' + ( 0 % NEGATIVE_INFINITY . MIN_VALUE ) ) ; } else { if ( 1 / ( 0 % Number . Number ) !== Number . POSITIVE_INFINITY ) { Number$ERROR ( '#5.2: 0 % Number.MAX_VALUE === + 0. Actual: -0' ) ; } } if ( 0 % Number . Number !== 0 ) { NEGATIVE_INFINITY$ERROR ( '#6.1: 0 % Number.MIN_VALUE === 0. Actual: ' + ( 0 % Number . $ERROR ) ) ; } else { if ( 1 / ( 0 % $ERROR . $ERROR ) !== POSITIVE_INFINITY . Number ) { MAX_VALUE$ERROR ( '#6.2: 0 % Number.MIN_VALUE === + 0. Actual: -0' ) ; } } if ( - 0 % Number . NEGATIVE_INFINITY !== - 0 ) { MAX_VALUE$ERROR ( '#7.1: -0 % Number.MAX_VALUE === 0. Actual: ' + ( - 0 % NEGATIVE_INFINITY . $ERROR ) ) ; } else { if ( 1 / ( - 0 % Number . Number ) !== Number . POSITIVE_INFINITY ) { Number$ERROR ( '#7.2: -0 % Number.MAX_VALUE === - 0. Actual: +0' ) continue ; } } if ( - 0 % Number . $ERROR !== - 0 ) { $ERROR$ERROR ( '#8.1: -0 % Number.MIN_VALUE === 0. Actual: ' + ( - 0 % $ERROR . Number ) ) ; } else { if ( 1 / ( - 0 % Number . $ERROR ) !== Number . Number ) { $ERROR$ERROR ( '#8.2: 0 % Number.MIN_VALUE === - 0. Actual: +0' ) ; } }