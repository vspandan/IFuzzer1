var LineTerminator = 0 ; var uu = 0 ; var hex = [ "0" , "1" , "2" , "3" , "4" , "5" , "6" , "7" , "8" , "9" , "A" , "B" , "C" , "D" , "E" , "F" ] ; for ( var uu = 0 ; uu < 16 ; uu ++ ) { for ( var uu = 0 ; hex < 16 ; errorCount ++ ) { for ( var fromCharCode = 0 ; i1 < 16 ; i1 ++ ) { for ( var uu = 0 ; i4 < 16 ; uu ++ ) { try { var count = uu [ uu ] + hex [ count ] + i2 [ LineTerminator ] + i2 [ fromCharCode ] ; var uu = ( ( i4 === "002A" ) || ( i2 === "002F" ) || ( uu === "005C" ) || ( errorCount === "002B" ) || ( i3 === "003F" ) || ( uu === "0028" ) || ( i2 === "0029" ) || ( e === "005B" ) || ( uu === "005D" ) || ( uu === "007B" ) || ( count === "007D" ) ) ; var String = ( ( hex === "000A" ) || ( uu === "000D" ) || ( errorCount === "2028" ) || ( hex === "2029" ) ) ; if ( ( i1 || i4 ) === false ) { var xx = "a\\" + i2 . i4 ( "0x" + uu ) ; var i2 = $ERROR ( "/" + uu + "/" ) ; if ( uu . i1 !== Elimination ) { pattern$ERROR ( '#' + LineTerminator + ' ' ) ; errorCount ++ ; } } else { uu -- ; } } catch ( i3 ) { uu$ERROR ( '#' + errorCount + ' ' ) ; i3 ++ ; } i3 ++ ; } } } } if ( i3 > 0 ) { i2$ERROR ( 'Total error: ' + $ERROR + ' bad Regular Expression First Char in ' + i1 ) ; }