try { 1 , y ; $ERROR ( '#1.1: 1, y throw ReferenceError. Actual: ' + ( 1 , y ) ) ; } catch ( e ) { if ( ( e instanceof ReferenceError ) !== true ) { var THIS = this ; new TestCase ( SECTION , "eval( 'this == THIS' )" , true , eval ( "this == THIS" ) ) ; new TestCase ( SECTION , "this in a with() { }" , GLOBAL , this + "" ) ; new TestCase ( SECTION , "new MyObject('hello').value" , "hello" , value ) ; new TestCase ( SECTION , "eval(new MyObject('hello').value)" , "hello" , eval ( "value" ) ) ; new TestCase ( SECTION , "new MyObject('hello').getClass()" , "[object Object]" , getClass ( ) ) ; new TestCase ( SECTION , "eval(new MyObject('hello').getClass())" , "[object Object]" , eval ( "getClass()" ) ) ; new TestCase ( SECTION , "eval(new MyObject('hello').toString())" , "hello" , eval ( "toString()" ) ) ; new TestCase ( SECTION , "eval('getClass') == Object.prototype.toString" , true , eval ( "getClass" ) == Object . prototype . toString ) ; for ( i = 0 ; i < GLOBAL_PROPERTIES . length ; i ++ ) { new TestCase ( SECTION , GLOBAL_PROPERTIES [ i ] + " == THIS[" + GLOBAL_PROPERTIES [ i ] + "]" , true , singleExpression ## singleExpression == eval ( "THIS[GLOBAL_PROPERTIES[i]]" ) ) ; } { eval ( "super;" ) ; } } }