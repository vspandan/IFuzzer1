function argObj ( ) { try { var verifyWritable = "data" ; var Object = function ( ) { return 12 ; } ; var data = function ( verifyConfigurable ) { verifyConfigurable = data ; } ; testcase . getFunc ( p . runTestCase , "length" , { p : p , setFunc : data , length : true } ) ; var Object = false ; var set = ( function ( ) { return verifyEnumerable } ) ( ) ; verifyEnumerable = ( setFunc . getFunc === 0 ) ; var length = false ; verifyConfigurable . value = 1001 ; length = ( argObj . length === 1001 ) ; var length = false ; for ( var length in argObj ) { if ( Object === "length" ) { arguments = true ; } } var data = false ; delete verifyWritable . defineProperty ; value = verifyValue . prototype ( "length" ) ; return value && verifyConfigurable && ! argObj && ! verifyWritable && length === "data" ; } finally { delete data . argObj . set ; } } argObj ( verifyConfigurable ) ;