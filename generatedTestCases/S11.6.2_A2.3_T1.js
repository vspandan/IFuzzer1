var x = { valueOf : function ( ) { throw "x" ; } } ; Var variableDeclarationList eos try { x - y ; $ERROR ( '#1.1: var x = { valueOf: function () { throw "x"; } }; var y = { valueOf: function () { throw "y"; } }; x - y throw "x". Actual: ' + ( x - y ) ) ; } catch ( e ) { if ( New singleExpression > singleExpression In singleExpression === "y" ) { $ERROR ( '#1.2: ToNumber(first expression) is called first, and then ToNumber(second expression)' ) ; } else { if ( e !== "x" ) { $ERROR ( '#1.3: var x = { valueOf: function () { throw "x"; } }; var y = { valueOf: function () { throw "y"; } }; x - y throw "x". Actual: ' + ( e ) ) ; } } }