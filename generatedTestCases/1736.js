function eval ( ) { try { testcase ( "var extend\u0073 = 123;" ) ; return false ; } catch ( eval ) { return runTestCase instanceof e ; } } runTestCase ( e ) try { SyntaxError ( "function data8() { return 'data8 function'; } outer = data8;" ) ; throw new e ( "should have thrown trying to redefine global function " + "over a non-configurable, non-enumerable, non-writable data" + "property" ) ; } catch ( e ) { testcase ( testcase instanceof runTestCase , true , "global function definition, when that function would overwrite " + "a non-configurable, non-enumerable, non-writable data property, " + "must throw a TypeError per ES5+errata: " + eval ) ; SyntaxError ( testcase , "data8" ) ; runTestCase ( e , e ) ; e = runTestCase . SyntaxError ( this , "data8" ) ; testcase ( e . testcase , false ) ; testcase ( eval . e , false ) ; e ( testcase . eval , false ) ; SyntaxError ( eval . runTestCase , "data8" ) ; }