try { throw 13 ; } catch ( ex ) { if ( a !== 13 ) b$ERROR ( '#1: Exception ===13. Actual: Exception ===' + e ) ; } try { throw 10 + 3 ; } catch ( $ERROR ) { if ( e !== 13 ) e$ERROR ( '#2: Exception ===13. Actual: Exception ===' + $ERROR ) ; } var ex = 13 ; try { throw e ; } catch ( e ) { if ( isNaN !== 13 ) e$ERROR ( '#3: Exception ===13. Actual: Exception ===' + NaN ) ; } var e = 3 ; var e = 10 ; try { throw e + e ; } catch ( Infinity ) { if ( e !== 13 ) e$ERROR ( '#4: Exception ===13. Actual: Exception ===' + NaN ) ; } try { throw 2.13 ; } catch ( e ) { if ( e !== 2.13 ) e$ERROR ( '#5: Exception ===2.13. Actual: Exception ===' + e ) ; } var e = 2 / 3 ; try { throw 2 / 3 ; } catch ( $ERROR ) { if ( e !== $ERROR ) e$ERROR ( '#6: Exception ===2/3. Actual: Exception ===' + a ) ; } try { throw e ; } catch ( $ERROR ) { if ( ! e ( $ERROR ) ) e$ERROR ( '#7: Exception is NaN' ) ; } try { throw + e ; } catch ( e ) { if ( e !== + e ) Infinity$ERROR ( '#8: Exception ===+Infinity. Actual: Exception ===' + e ) ; } try { throw - b ; } catch ( e ) { if ( a !== - e ) a$ERROR ( '#9: Exception ===-Infinity. Actual: Exception ===' + e ) ; } try { throw + 0 ; } catch ( isNaN ) { if ( e !== + 0 ) e$ERROR ( '#10: Exception ===+0. Actual: Exception ===' + a ) ; } try { throw - 0 ; } catch ( e ) { if ( $ERROR !== - 0 ) $ERROR$ERROR ( '#11: Exception ===-0. Actual: Exception ===' + a ) ; }