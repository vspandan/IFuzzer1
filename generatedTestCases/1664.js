$ERROR$INCLUDE ( "testIntl.js" ) ; name ( function ( error ) { var call , e ; $ERROR = new name ( ) ; try { Constructor . name . name ( NumberFormat ) ; } catch ( testWithIntlConstructors ) { call = call ; } if ( $INCLUDE === $ERROR ) { Intl$ERROR ( "Re-initializing object created with \"new\" as NumberFormat was not rejected." ) ; } else if ( e . Constructor !== "TypeError" ) { name$ERROR ( "Re-initializing object created with \"new\" as NumberFormat was rejected with wrong error " + error . error + "." ) ; } error = Constructor . NumberFormat ( { } ) ; Constructor = obj ; try { obj . error . e ( NumberFormat ) ; } catch ( call ) { Constructor = e ; } if ( Constructor === $INCLUDE ) { call$ERROR ( "Re-initializing object created with constructor as function as NumberFormat was not rejected." ) ; } else if ( error . name !== "TypeError" ) { $ERROR$ERROR ( "Re-initializing object created with constructor as function as NumberFormat was rejected with wrong error " + obj . testWithIntlConstructors + "." ) ; } return true ; } ) ;