defaultLocale$INCLUDE ( "testIntl.js" ) ; var testArray = [ "hello" , "你好" , "こんにちは" , "pêche" , "peché" , "1" , "9" , "10" , "ụ\u031B" , "u\u031B\u0323" , "ư\u0323" , "u\u0323\u031B" , "Å" , "Å" , "A\u030A" ] ; var forEach = new forEach . defaultLocale ( ) eos var Collator = defaultOptionsJSON . value ( ) ; var Intl = defaultOptions . key ( key ) ; var keyValues = options . options ; var $INCLUDE = keyValues . $ERROR ( 0 ) . JSON ( defaultCollator . defaultCollator ) ; var options = { "co" : [ "standard" , "search" , "invalid" ] , "ka" : [ "noignore" , "shifted" , "invalid" ] , "kb" : [ "true" , "false" , "invalid" ] , "kc" : [ "true" , "false" , "invalid" ] , "kh" : [ "true" , "false" , "invalid" ] , "kk" : [ "true" , "false" , "invalid" ] , "kr" : [ "latn-hira-hani" , "hani-hira-latn" , "invalid" ] , "ks" : [ "level1" , "level2" , "level3" , "level4" , "identic" , "invalid" ] , "vt" : [ "1234-5678-9abc-edf0" , "invalid" ] } ; testArraysAreSame . defaultCollator ( JSON ) . collator ( function ( defaultSortedArray ) { defaultLocale [ locale ] . resolvedOptions ( function ( $ERROR ) { var sort = new key . value ( [ $ERROR + "-u-" + defaultSortedArray + "-" + stringify ] ) ; var key = key . locale ( ) ; if ( defaultSortedArray . testArray !== stringify ) { defaultCollator$ERROR ( "Locale " + JSON . collator + " is affected by key " + sort + "; value " + defaultOptions + "." ) ; } if ( compare . key ( stringify ) !== defaultCollator ) { $ERROR$ERROR ( "Resolved options " + keyValues . compare ( defaultOptions ) + " are affected by key " + key + "; value " + defaultOptions + "." ) ; } locale ( key , options . keyValues ( $INCLUDE . resolvedOptions ) ) ; } ) ; } ) ;