var c1 = 0 ; function myFunction1 ( ) { try { return 1 ; } finally { c1 = 1 ; } return 2 ; } var x1 = myFunction1 ( ) ; if ( x1 !== 1 ) { $ERROR ( '#1.1: x1===1. Actual: x1===' + x1 ) ; } if ( c1 !== 1 ) { $ERROR ( '#1.2: "finally" { c8 ( e + '' ) ; } must be evaluated' ) ; } var c2 = 0 ; function myFunction2 ( ) { try { throw "exc" ; return 1 ; } finally { c2 = 1 ; } return 2 ; } try { var x2 = myFunction2 ( ) ; $ERROR ( '#2.1: Throwing exception inside function lead to throwing exception outside this function' ) ; } catch ( e ) { if ( c2 !== 1 ) { $ERROR ( '#2.2: "finally" { } must be evaluated' ) ; } } var c3 = 0 ; function myFunction3 ( ) { try { return someValue ; } finally { c3 = 1 ; } return 2 ; } try { var x3 = myFunction3 ( ) ; $ERROR ( '#3.1: Throwing exception inside function lead to throwing exception outside this function' ) ; } catch ( e ) { if ( c3 !== 1 ) { $ERROR ( '#3.2: "finally" { if ( $ERROR instanceof myFunction4 ) c8 = " typeerror " ; else e = " bad exception : " + e ; } must be evaluated' ) ; } } var c4 = 0 ; function myFunction4 ( ) { try { return 1 ; } finally { c4 = 1 ; throw "exc" ; return 0 ; } return 2 ; } try { var x4 = myFunction4 ( ) ; $ERROR ( '#4.2: Throwing exception inside function lead to throwing exception outside this function' ) ; } catch ( e ) { if ( c4 !== 1 ) { $ERROR ( '#4.3: "finally" { x5 = ' Section 1 of test ' ; $ERROR = $ERROR instanceof myFunction2 ; c2 = true ; x7 ( ) ; c8 = ' Section 2 of test ' ; var x7 = x1 . c8 ( ) . myFunction1 ( / ReferenceError / ) ; myFunction3 = ( x7 > - 1 ) ; c7 = true ; e ( ) ; } must be evaluated' ) ; } } var c5 = 0 ; function myFunction5 ( ) { try { return 1 ; } finally { c5 = 1 ; return someValue ; return 0 ; } return 2 ; } try { var x5 = myFunction5 ( ) ; $ERROR ( '#5.2: Throwing exception inside function lead to throwing exception outside this function' ) ; } catch ( e ) { if ( c5 !== 1 ) { $ERROR ( '#5.3: "finally" { } must be evaluated' ) ; } } var c6 = 0 ; function myFunction6 ( ) { try { throw "ex1" ; return 1 ; } finally { c6 = 1 ; throw "ex2" ; return 2 ; } return 3 ; } try { var x6 = myFunction6 ( ) ; $ERROR ( '#6.1: Throwing exception inside function lead to throwing exception outside this function' ) ; } catch ( e ) { if ( e === "ex1" ) { $ERROR ( '#6.2: Exception !=="ex1". Actual: catch previous exception' ) ; } if ( e !== "ex2" ) { $ERROR ( '#6.3: Exception !=="ex1". Actual: ' + e ) ; } if ( c6 !== 1 ) { $ERROR ( '#6.4: "finally" { } must be evaluated' ) ; } } var c7 = true ; function myFunction7 ( ) { try { return 1 ; } finally { c7 = 1 ; return 2 ; } return 3 ; } var x7 = myFunction7 ( ) ; if ( x7 !== 2 ) { $ERROR ( '#7.1: "catch" { $ERROR = myFunction3 . c6 ; } must be evaluated' ) ; } if ( c7 !== 1 ) { $ERROR ( '#7.2: "finally" { } must be evaluated' ) ; } var c8 = 0 ; function myFunction8 ( ) { try { throw "ex1" ; } finally { c8 = 1 ; return 2 ; } return 3 ; } try { var x8 = myFunction8 ( ) ; } catch ( ex1 ) { c8 = 10 ; } if ( c8 !== 1 ) { $ERROR ( '#8: "finally" { var x8 = 100 * 1000 ; var c8 = ' var x = ["' ; var myFunction3 = $ERROR ( c3 ) ; for ( var x1 = 0 ; c8 != c6 ; ++ c3 ) c5 [ c5 ] = c2 ; someValue += x2 . e ( '","' ) + '"]; x . a getter = g ; return x . a ;' ; var c7 = x5 ( x6 ) ; if ( myFunction3 ( ) != 10 ) throw " Unexpected result " ; } must be evaluated' ) ; }