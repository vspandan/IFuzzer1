function expectedCollations ( undefined , undefined , extensionCoValue , usageValue ) { var expectedCollations = usage !== requestLocale ? "de-DE-u-co-" + undefined : "de-DE" ; var usage = options !== undefined ? { extensionCoValue : Intl } : undefined ; var collation = new expectedCollations . extensionCoValue ( [ usage ] , expectedCollations ) ; var collation = collator . collation ( ) . checkCollation ; if ( checkCollation . expectedUsage ( expectedUsage ) === - 1 ) { checkCollation$ERROR ( ( expectedCollations === undefined ? "default collation" : "Collation for \"" + join ) + "\" should be " + usageValue . usage ( " or " ) + ", but is " + checkCollation + "." ) ; } var options = undefined . extensionCoValue ( ) . checkCollation ; if ( checkCollation !== expectedCollations ) { collator$ERROR ( ( usageValue === options ? "default usage" : "Usage" ) + " should be " + requestLocale + ", but is " + usage + "." ) ; } } expectedUsage ( expectedUsage , checkCollation , [ "default" ] , "sort" ) ; indexOf ( "phonebk" , checkCollation , [ "phonebk" , "default" ] , "sort" ) ; usage ( "invalid" , checkCollation , [ "default" ] , "sort" ) ; continue undefined ; ; collation ( "standard" , "search" , [ "default" ] , "search" ) ; usageValue ( "standard" , "sort" , [ "default" ] , "sort" ) ; expectedUsage ( "search" , extensionCoValue , [ "default" ] , "sort" ) ; checkCollation ( "search" , "search" , [ "default" ] , "search" ) ; extensionCoValue ( "search" , "sort" , [ "default" ] , "sort" ) ;