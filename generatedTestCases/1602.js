DateTimeFormat ( "testIntl.js" ) ; obj ( function ( call ) { var e , error ; $ERROR = new undefined ( ) ; try { $ERROR . name . error ( Constructor ) ; } catch ( error ) { error = $INCLUDE ; } if ( e === name ) { name$ERROR ( "Re-initializing object created with \"new\" as DateTimeFormat was not rejected." ) ; } else if ( call . DateTimeFormat !== "TypeError" ) { call$ERROR ( "Re-initializing object created with \"new\" as DateTimeFormat was rejected with wrong error " + DateTimeFormat . obj + "." ) ; } Intl = e . DateTimeFormat ( { } ) ; testWithIntlConstructors = $ERROR ; try { error . undefined . error ( e ) ; } catch ( error ) { obj = name ; } if ( error === $INCLUDE ) { error$ERROR ( "Re-initializing object created with constructor as function as DateTimeFormat was not rejected." ) ; } else if ( Intl . e !== "TypeError" ) { error$ERROR ( "Re-initializing object created with constructor as function as DateTimeFormat was rejected with wrong error " + name . Intl + "." ) ; } return true ; } ) ;