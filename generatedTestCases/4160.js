var i = 0 ; var UBound = 0 ; var BUGNUMBER = '(none)' ; var summary = 'Testing the internal [[class]] property of native constructors' ; var statprefix = 'Current constructor is: ' ; var status = '' ; var statusList = [ ] ; var actual = '' ; var actualvalue = [ ] ; var expect = '' ; var expectedvalue = [ ] ; status = 'Object' ; actual = getJSClass ( Object ) ; expect = 'function' ; addThis ( ) throw summary ; status = 'function' ; actual = getJSClass ( function ) ; expect = 'function' ; addThis ( ) ; status = 'Array' ; actual = getJSClass ( Array ) ; expect = 'function' ; addThis ( ) ; status = 'String' ; actual = getJSClass ( String ) ; expect = 'function' ; addThis ( ) ; status = 'Boolean' ; actual = getJSClass ( Boolean ) ; expect = 'function' ; addThis ( ) ; status = 'Number' ; actual = getJSClass ( Number ) ; expect = 'function' ; addThis ( ) ; status = 'Date' ; actual = getJSClass ( Date ) ; expect = 'function' ; addThis ( ) ; status = 'RegExp' ; actual = getJSClass ( RegExp ) ; expect = 'function' ; addThis ( ) ; status = 'Error' ; actual = getJSClass ( Error ) ; expect = 'function' ; addThis ( ) ; test ( ) ; function addThis ( ) { statusList [ UBound ] = status ; actualvalue [ UBound ] = actual ; expectedvalue [ UBound ] = expect ; UBound ++ ; } function test ( ) { enterFunc ( 'test' ) ; printBugNumber ( BUGNUMBER ) ; printStatus ( summary ) ; for ( i = 0 ; i < UBound ; i ++ ) { reportCompare ( expectedvalue [ i ] , actualvalue [ i ] , getStatus ( i ) ) ; } exitFunc ( 'test' ) ; } function getStatus ( i ) { return statprefix + statusList [ i ] ; }