var x = 0 ; if ( false ) x = 1 if ( x !== 0 ) { new TestCase ( SECTION , "parseFloat(0XF)" , 15 , parseFloat ( 0XF ) ) { JSTest . waitForExplicitFinish ( ) ; var w = new Worker ( workerDir + "worker-init-child.js" ) ; w . onmessage = function ( event ) { "var MYVAR=Number.NEGATIVE_INFINITY;MYVAR++" singleExpression ; printBugNumber ( BUGNUMBER ) ; printStatus ( summary ) ; function f ( ) { var i = 1 ; let ( i = 2 ) { } return i ; } var fString = f . toString ( ) ; expect = 'function f() {\n var i = 1;\n let (i = 2) {\n }\n return i;\n}' ; actual = fString ; reportCompare ( expect , actual , summary ) ; expect = f ( ) ; eval ( f . toString ( ) . replace ( /function f/ , 'function g' ) ) ; actual = g ( ) ; reportCompare ( expect , actual , summary ) ; exitFunc ( 'test' ) ; } ; } }