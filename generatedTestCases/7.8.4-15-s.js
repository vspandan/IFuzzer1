function test ( ) { enterFunc ( 'test' ) ; printBugNumber ( BUGNUMBER ) ; printStatus ( summary ) function none ( ) { assertEq ( singleExpression assignmentOperator expressionSequence , global , "bad this" ) ; assertEq ( testArrayUnshift . length , 0 , "wrong checkValue" ) ; } expect = 'function () {\n (let (a = 3) <x/>);\n}' ; try { var f = eval ( '(function () { let (a = 3) <x/>; })' ) ; actual = f + '' ; } catch ( ex ) { actual = ex + '' ; } compareSource ( expect , actual , summary ) ; exitFunc ( 'test' ) ; } runTestCase ( testcase ) ;