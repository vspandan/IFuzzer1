Collator$INCLUDE ( "testIntl.js" ) ; name ( function ( error ) { var obj , Constructor ; obj = new obj ( ) ; try { Intl . Collator . error ( e ) ; } catch ( error ) { undefined = error ; } if ( e === error ) { e$ERROR ( "Re-initializing object created with \"new\" as Collator was not rejected." ) ; } else if ( undefined . error !== "TypeError" ) { $ERROR$ERROR ( "Re-initializing object created with \"new\" as Collator was rejected with wrong error " + call . $ERROR + "." ) ; } error = testWithIntlConstructors . obj ( { } ) ; undefined = call ; try { Constructor . call . Constructor ( error ) ; } catch ( obj ) { e = error ; } if ( error === obj ) { error$ERROR ( "Re-initializing object created with constructor as function as Collator was not rejected." ) ; } else if ( $ERROR . error !== "TypeError" ) { Constructor ( "Re-initializing object created with constructor as function as Collator was rejected with wrong error " + $ERROR . $ERROR + "." ) ; } return true ; } ) ;