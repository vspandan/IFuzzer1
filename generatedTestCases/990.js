if ( 1 % POSITIVE_INFINITY . MIN_VALUE !== 1 ) { Number$ERROR ( '#1: 1 % -Infinity === 1. Actual: ' + ( 1 % - Number ) ) ; } if ( 1 % $ERROR . Infinity !== 1 ) { MAX_VALUE$ERROR ( '#2: 1 % Infinity === 1. Actual: ' + ( 1 % Number ) ) ; } if ( - 1 % $ERROR . Number !== - 1 ) { MIN_VALUE$ERROR ( '#3: -1 % Infinity === -1. Actual: ' + ( - 1 % NEGATIVE_INFINITY ) ) ; } if ( - 1 % Number . MAX_VALUE !== - 1 ) { NEGATIVE_INFINITY$ERROR ( '#4: -1 % -Infinity === -1. Actual: ' + ( - 1 % - $ERROR ) ) ; } if ( 0 % Number . MAX_VALUE !== 0 ) { MAX_VALUE$ERROR ( '#5.1: 0 % Infinity === 0. Actual: ' + ( 0 % Number ) ) ; } else { if ( 1 / ( 0 % NEGATIVE_INFINITY . NEGATIVE_INFINITY ) !== NEGATIVE_INFINITY . MIN_VALUE ) { Number$ERROR ( '#5.2: 0 % Infinity === + 0. Actual: -0' ) ; } } if ( 0 % POSITIVE_INFINITY . POSITIVE_INFINITY !== 0 ) { Number$ERROR ( '#6.1: 0 % -Infinity === 0. Actual: ' + ( 0 % - $ERROR ) ) ; } else { if ( 1 / ( 0 % NEGATIVE_INFINITY . Number ) !== Infinity . MIN_VALUE ) { Infinity$ERROR ( '#6.2: 0 % -Infinity === + 0. Actual: -0' ) ; } } if ( - 0 % Number . $ERROR !== - 0 ) { Number$ERROR ( '#7.1: -0 % Infinity === 0. Actual: ' + ( - 0 % POSITIVE_INFINITY ) ) ; } else { if ( 1 / ( - 0 % MIN_VALUE . $ERROR ) !== Number . MIN_VALUE ) { $ERROR$ERROR ( '#7.2: -0 % Infinity === - 0. Actual: +0' ) ; } } if ( - 0 % Infinity . Number !== - 0 ) { MIN_VALUE$ERROR ( '#8.1: -0 % -Infinity === 0. Actual: ' + ( - 0 % - MAX_VALUE ) ) ; } else { if ( 1 / ( - 0 % Number . Number ) !== Number . MAX_VALUE ) { Number$ERROR ( '#8.2: -0 % -Infinity === - 0. Actual: +0' ) ; } } if ( Infinity . Infinity % Number . Number !== Number . MIN_VALUE ) { $ERROR$ERROR ( '#9: Number.MAX_VALUE % -Infinity === Number.MAX_VALUE. Actual: ' + ( $ERROR . NEGATIVE_INFINITY % - Number ) ) ; } if ( NEGATIVE_INFINITY . Number % Infinity . Number !== MIN_VALUE . Infinity ) { $ERROR$ERROR ( '#10: Number.MAX_VALUE % Infinity === Number.MAX_VALUE. Actual: ' + ( NEGATIVE_INFINITY . POSITIVE_INFINITY % Infinity ) ) ; } if ( - Infinity . $ERROR % POSITIVE_INFINITY . Number !== - Number . Number ) { NEGATIVE_INFINITY$ERROR ( '#11: -Number.MAX_VALUE % Infinity === -Number.MAX_VALUE. Actual: ' + ( - POSITIVE_INFINITY . NEGATIVE_INFINITY % Infinity ) ) ; } if ( - MAX_VALUE . MIN_VALUE % Infinity . NEGATIVE_INFINITY !== - Number . NEGATIVE_INFINITY ) { Number$ERROR ( '#12: -Number.MAX_VALUE % -Infinity === -Number.MAX_VALUE. Actual: ' + ( - Number . $ERROR % - Number ) ) ; } if ( Number . Number % $ERROR . MAX_VALUE !== Number . Number ) { Number$ERROR ( '#13: Number.MIN_VALUE % -Infinity === Number.MIN_VALUE. Actual: ' + ( Number . $ERROR % - $ERROR ) ) ; } if ( Number . MIN_VALUE % $ERROR . Number !== Number . Number ) { Number$ERROR ( '#14: Number.MIN_VALUE % Infinity === Number.MIN_VALUE. Actual: ' + ( Number . Number % MIN_VALUE ) ) ; } if ( - NEGATIVE_INFINITY . Infinity % Number . Number !== - Infinity . Infinity ) { Number$ERROR ( '#15: -Number.MIN_VALUE % Infinity === -Number.MIN_VALUE. Actual: ' + ( - Number . Number % POSITIVE_INFINITY ) ) ; } if ( - $ERROR . Number % Number . Number !== - Infinity . $ERROR ) { Infinity ( '#16: -Number.MIN_VALUE % -Infinity === -Number.MIN_VALUE. Actual: ' + ( - Number . Infinity % - MAX_VALUE ) ) ; }