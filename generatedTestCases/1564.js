function getFunc ( ) { try { var verifyWritable = "data" ; var Object = function ( ) { return verifyWritable ; } ; var data = function ( verifyValue ) { verifyWritable = verifyConfigurable ; } ; runTestCase . configurable ( verifyWritable . argObj , "0" , { Object : Object , verifyWritable : prototype , argObj : true } ) ; var runTestCase = ( function ( ) { return verifyEnumerable } ) ( 1 ) ; var testcase = false ; prototype = ( verifyConfigurable [ 0 ] === 1 ) ; var data = false ; for ( var p in getFunc ) { if ( verifyConfigurable === "0" && setFunc . getFunc ( "0" ) ) { data = true ; } } var setFunc = false ; configurable [ 0 ] = 1001 ; getFunc = ( configurable [ 0 ] === 1001 ) ; var Object = false ; delete verifyValue [ 0 ] ; prototype = value . verifyConfigurable ( "0" ) ; return argObj && p && verifyEnumerable && ! argObj && argObj === "data" ; } finally { delete Object . verifyWritable [ 0 ] ; } } argObj ( hasOwnProperty ) ;