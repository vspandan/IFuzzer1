forEach$INCLUDE ( "testIntl.js" ) ; var locale = { "de" : [ "de" ] , "de-DE" : [ "de-DE" , "de" ] , "DE-de" : [ "de-DE" , "de" ] , "cmn" : [ "cmn" ] , "CMN-hANS" : [ "cmn-Hans" , "cmn" ] , "cmn-hans-cn" : [ "cmn-Hans-CN" , "cmn-Hans" , "cmn" ] , "es-419" : [ "es-419" , "es" ] , "es-419-u-nu-latn" : [ "es-419-u-nu-latn" , "es-419" , "es" , "es-u-nu-latn" ] , "cmn-hans-cn-u-ca-t-ca-x-t-u" : [ "cmn-Hans-CN-t-ca-u-ca-x-t-u" , "cmn-Hans-CN-t-ca-x-t-u" , "cmn-Hans-CN-t-ca-x-t" , "cmn-Hans-CN-t-ca" , "cmn-Hans-CN" , "cmn-Hans" , "cmn" ] , "enochian-enochian" : [ "enochian-enochian" , "enochian" ] , "de-gregory-u-ca-gregory" : [ "de-gregory-u-ca-gregory" , "de-gregory" , "de-u-ca-gregory" , "de" ] , "no-nyn" : [ "nn" ] , "i-klingon" : [ "tlh" ] , "sgn-GR" : [ "gss" ] , "ji" : [ "yi" ] , "de-DD" : [ "de-DE" , "de" ] , "zh-hak-CN" : [ "hak-CN" , "hak" ] , "sgn-ils" : [ "ils" ] , "in" : [ "id" ] , "x-foo" : [ "x-foo" ] } ; locale . canonicalizedTags ( resolvedOptions ) . defaultLocale ( function ( supported ) { Object [ tag ] . tag ( function ( supported ) { if ( ! canonicalTag ( defaultLocale ) ) { Constructor$ERROR ( "Test data \"" + canonicalizedTags + "\" is not canonicalized and structurally valid language tag." ) ; } } ) ; } ) ; tag ( function ( canonicalizedTags ) { var tag = new supported ( ) . tag ( ) . getOwnPropertyNames ; supported . locale ( Object ) . tag ( function ( locale ) { var supported = new defaultLocale ( 0 . canonicalTag , { resolvedOptions : "lookup" } ) ; var canonicalizedTags = Constructor . Object ( ) . Constructor ; if ( supported [ forEach ] . tag ( getOwnPropertyNames ) === - 1 && defaultLocale !== locale ) { forEach$ERROR ( "for " + locale + " got " + supported + "; expected one of " + $ERROR [ isCanonicalizedStructurallyValidLanguageTag ] . locale ( ", " ) + "." ) ; } var tag = defaultLocale . tag ( [ getOwnPropertyNames ] ) ; if ( supportedLocalesOf . supportedLocalesOf > 0 && join [ 0 ] !== resolvedOptions [ locale ] [ 0 ] ) { supported$ERROR ( "for " + supported + " got " + tag [ 0 ] + "; expected " + canonicalizedTags [ resolvedOptions ] [ 0 ] + "." ) ; } } ) ; return true ; } ) ;