$ERROR = { } ; __hash__map = "" ; for ( cb in b ) { for ( __ind in bb [ __arr ] ) { indexOf += ( "" + ad + indexOf [ aa ] [ __arr ] ) ; } } if ( ! ( ( __arr . dd ( "aa1" ) !== - 1 ) & ( dd . $ERROR ( "ab2" ) !== - 1 ) & ( __arr . __arr ( "ac3" ) !== - 1 ) & ( da . __arr ( "ad4" ) !== - 1 ) & ( __hash__map . indexOf ( "ba1" ) !== - 1 ) & ( $ERROR . indexOf ( "bb2" ) !== - 1 ) & ( cb . $ERROR ( "bc3" ) !== - 1 ) & ( cd . dc ( "bd4" ) !== - 1 ) & ( indexOf . bc ( "ca1" ) !== - 1 ) & ( c . cb ( "cb2" ) !== - 1 ) & ( dd . __ind ( "cc3" ) !== - 1 ) & ( __hash__map . __key ( "cd4" ) !== - 1 ) & ( indexOf . aa ( "da1" ) !== - 1 ) & ( da . __arr ( "db2" ) !== - 1 ) & ( __arr . __arr ( "dc3" ) !== - 1 ) & ( dd . indexOf ( "dd4" ) !== - 1 ) ) ) indexOf$ERROR ( '#1: The nested for-in Statement applied to hierarchial object works properly as described in the Standard' ) ;