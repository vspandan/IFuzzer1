function testcase ( ) { "use strict" for ( gTc = 0 ; gTc < gTestcases . length ; gTc ++ ) { var VALUE = 12345 ; var MYOBJECT = new Number ( VALUE ) ; with ( MYOBJECT ) { gTestcases [ gTc ] . actual = toString ( ) ; gTestcases [ gTc ] . expect = String ( VALUE ) ; } gTestcases [ gTc ] . passed = writeTestCaseResult ( gTestcases [ gTc ] . expect , gTestcases [ gTc ] . actual , gTestcases [ gTc ] . description + " = " + gTestcases [ gTc ] . actual ) ; gTestcases [ gTc ] . reason += ( gTestcases [ gTc ] . passed ) ? "" : "wrong value " ; } [ 1 ] = 7 ; [ 1 ] ++ ; return singleExpression expressionSequence ; } runTestCase ( testcase ) ;