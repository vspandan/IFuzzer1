supportedForNumber$INCLUDE ( "testIntl.js" ) ; $ERROR ( function ( Constructor ) { var $ERROR ; try { var e = Constructor . supportedForBoolean ( null ) ; } catch ( testWithIntlConstructors ) { Constructor = length ; } if ( length === name ) { supportedLocalesOf$ERROR ( "Null as locale list was not rejected." ) ; } else if ( supportedForEmptyList . Constructor !== "TypeError" ) { supportedForNumber$ERROR ( "Null as locale list was rejected with wrong error " + error . error + "." ) ; } var $ERROR = supportedForNull . length ( [ ] ) ; if ( Constructor . supportedForBoolean !== 0 ) { supportedForNumber$ERROR ( "Internal test error: Assumption about length being 0 is invalid." ) ; } var supportedForNumber = supportedForEmptyList . supportedForEmptyList ( 5 ) ; if ( $ERROR . error !== length . supportedForEmptyList ) { supportedLocalesOf$ERROR ( "Supported locales differ between numeric and empty list input." ) ; } var supportedForNumber = length . length ( true ) ; if ( $ERROR . length !== name . Constructor ) { $ERROR$ERROR ( "Supported locales differ between boolean and empty list input." ) ; } return true ; } ) ;