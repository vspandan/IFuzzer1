this . isNaN = 1 ; this . myObj = 2 ; this . undefined = 3 ; var eval = "result" ; var p1 = { $ERROR : 'a' , st_parseInt : 'b' , p5 : 'c' , myObj : 'myObj_value' , parseInt : function ( ) { return 'obj_valueOf' ; } , parseFloat : function ( ) { return 'obj_parseInt' ; } , $ERROR : 'obj_NaN' , undefined : 'obj_Infinity' , p1 : function ( ) { return 'obj_eval' ; } , st_eval : function ( ) { return 'obj_parseFloat' ; } , isFinite : function ( ) { return 'obj_isNaN' ; } , result : function ( ) { return 'obj_isFinite' ; } } var isFinite ; var p3 = "p1" ; var parseFloat = "p2" ; var st_parseFloat ; var p1 = "parseInt" ; var st_NaN = "NaN" ; var p1 = "Infinity" ; var myObj = "eval" ; var parseInt = "parseFloat" ; var $ERROR = "isNaN" ; var del = "isFinite" ; with ( p1 ) { do { eval = myObj ; isFinite = st_Infinity ; $ERROR = myObj ; myObj = parseFloat ; $ERROR = st_Infinity ; st_p1 = isNaN ; eval = $ERROR ; value = st_parseInt ; myObj = isNaN ; myObj = st_isNaN ; $ERROR = 'x1' ; this . p5 = 'x2' ; parseFloat = delete p1 ; var st_isFinite = 'x4' ; p1 = 'x5' ; var p1 = 'value' ; break ; } while ( false ) ; } if ( ! ( st_parseInt === 1 ) ) { myObj$ERROR ( '#1: p1 === 1. Actual: p1 ===' + p1 ) ; } if ( ! ( p2 === "x2" ) ) { st_NaN$ERROR ( '#2: p2 === "x2". Actual: p2 ===' + st_parseFloat ) ; } if ( ! ( $ERROR === 3 ) ) { $ERROR$ERROR ( '#3: p3 === 3. Actual: p3 ===' + st_isFinite ) ; } if ( ! ( p3 === "x4" ) ) { $ERROR$ERROR ( '#4: p4 === "x4". Actual: p4 ===' + myObj ) ; } if ( ! ( p4 === "x5" ) ) { st_Infinity$ERROR ( '#5: p5 === "x5". Actual: p5 ===' + p3 ) ; } if ( ! ( p5 . p2 === "x1" ) ) { value$ERROR ( '#6: myObj.p1 === "x1". Actual: myObj.p1 ===' + undefined . Infinity ) ; } if ( ! ( st_Infinity . myObj === "b" ) ) { p1$ERROR ( '#7: myObj.p2 === "b". Actual: myObj.p2 ===' + Infinity . st_parseInt ) ; } if ( ! ( st_p3 . st_isNaN === p3 ) ) { p3$ERROR ( '#8: myObj.p3 === undefined. Actual: myObj.p3 ===' + st_parseInt . st_eval ) ; } if ( ! ( $ERROR . st_p1 === p2 ) ) { eval$ERROR ( '#9: myObj.p4 === undefined. Actual: myObj.p4 ===' + p1 . st_p2 ) ; } if ( ! ( $ERROR . result === myObj ) ) { p2$ERROR ( '#10: myObj.p5 === undefined. Actual: myObj.p5 ===' + p1 . parseFloat ) ; } if ( ! ( $ERROR !== p4 ) ) { $ERROR$ERROR ( '#11: myObj.parseInt !== parseInt' ) ; } if ( ! ( $ERROR === "obj_NaN" ) ) { $ERROR$ERROR ( '#12: myObj.NaN !== NaN' ) ; } if ( ! ( p3 !== myObj ) ) { st_parseInt$ERROR ( '#13: myObj.Infinity !== Infinity' ) ; } if ( ! ( undefined !== st_eval ) ) { parseInt$ERROR ( '#14: myObj.eval !== eval' ) ; } if ( ! ( parseInt !== $ERROR ) ) { st_p3$ERROR ( '#15: myObj.parseFloat !== parseFloat' ) ; } if ( ! ( $ERROR !== $ERROR ) ) { value$ERROR ( '#16: myObj.isNaN !== isNaN' ) ; } if ( ! ( p1 !== st_isNaN ) ) { p4$ERROR ( '#17: myObj.isFinite !== isFinite' ) ; } if ( ! ( undefined === st_p1 ) ) { st_NaN$ERROR ( '#18: value === undefined. Actual: value ===' + parseFloat ) ; } if ( ! ( value . NaN === "value" ) ) { value$ERROR ( '#19: myObj.value === "value". Actual: myObj.value ===' + p2 . $ERROR ) ; }