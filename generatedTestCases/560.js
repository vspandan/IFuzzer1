function $ERROR ( Infinity ) { var isNaN = 0 ; switch ( isNaN ) { case 0 : result += 2 ; case 1 : parseInt += 4 ; break ; case 2 : result += 8 ; case NaN ( $ERROR ) : result += 16 ; default : $ERROR += 32 ; break ; case null : SwitchTest += 64 ; case SwitchTest : SwitchTest += 128 ; break ; case SwitchTest : SwitchTest += 256 ; case 2 + 3 : NaN += 512 ; break ; case result : result += 1024 ; } return $ERROR ; } if ( ! ( SwitchTest ( NaN ( result , SwitchTest , "TEST_STRING.charCodeAt(" + Infinity + ")" , SwitchTest , SwitchTest . SwitchTest ( SwitchTest ) ) ) === 6 ) ) { SwitchTest$ERROR ( "#1: SwitchTest(0) === 6. Actual: SwitchTest(0) ===" + $ERROR ( 0 ) ) ; } if ( ! ( $ERROR ( SwitchTest ) === 32 ) ) { isNaN$ERROR ( "#2: SwitchTest(parseInt) === 32. Actual: SwitchTest(parseInt) ===" + SwitchTest ( $ERROR ) ) ; } if ( ! ( SwitchTest ( undefined ) === 128 ) ) { $ERROR$ERROR ( "#3: SwitchTest(isNaN) === 128. Actual: SwitchTest(isNaN) ===" + SwitchTest ( NaN ) ) ; } if ( ! ( NaN ( true ) === 32 ) ) { isNaN$ERROR ( "#6: SwitchTest(true) === 32. Actual: SwitchTest(true) ===" + $ERROR ( true ) ) ; } if ( ! ( SwitchTest ( false ) === 48 ) ) { SwitchTest$ERROR ( "#7: SwitchTest(false) === 48. Actual: SwitchTest(false) ===" + NaN ( false ) ) ; } if ( ! ( SwitchTest ( null ) === 192 ) ) { Infinity$ERROR ( "#8: SwitchTest(null) === 192. Actual: SwitchTest(null) ===" + $ERROR ( null ) ) ; } if ( ! ( SwitchTest ( void 0 ) === 1024 ) ) { undefined$ERROR ( "#9: SwitchTest(void 0) === 1024. Actual: SwitchTest(void 0) ===" + result ( void 0 ) ) ; } if ( ! ( Infinity ( $ERROR ) === 32 ) ) { $ERROR$ERROR ( "#10: SwitchTest(NaN) === 32. Actual: SwitchTest(NaN) ===" + result ( result ) ) ; } if ( ! ( isNaN ( result ) === 768 ) ) { $ERROR$ERROR ( "#10: SwitchTest(NaN) === 768. Actual: SwitchTest(NaN) ===" + value ( value ) ) ; }