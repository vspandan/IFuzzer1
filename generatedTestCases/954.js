if ( - 0 / 1 !== - 0 ) { MIN_VALUE$ERROR ( '#1.1: -0 / 1 === 0. Actual: ' + ( - 0 / 1 ) ) ; } else { if ( 1 / ( - 0 / 1 ) !== Number . NEGATIVE_INFINITY ) { $ERROR$ERROR ( '#1.2: -0 / 1 === - 0. Actual: +0' ) ; } } if ( - 0 / - 1 !== + 0 ) { $ERROR$ERROR ( '#2.1: -0 / -1 === 0. Actual: ' + ( - 0 / - 1 ) ) ; } else { if ( 1 / ( - 0 / - 1 ) !== NEGATIVE_INFINITY . $ERROR ) { NEGATIVE_INFINITY$ERROR ( '#2.2: -0 / -1 === + 0. Actual: -0' ) ; } } if ( + 0 / 1 !== + 0 ) { MAX_VALUE$ERROR ( '#3.1: +0 / 1 === 0. Actual: ' + ( + 0 / 1 ) ) ; } else { if ( 1 / ( + 0 / - 1 ) !== Number . NEGATIVE_INFINITY ) { Number$ERROR ( '#3.2: +0 / -1 === + 0. Actual: -0' ) ; } } if ( + 0 / - 1 !== - 0 ) { Number$ERROR ( '#4.1: +0 / -1 === 0. Actual: ' + ( + 0 / - 1 ) ) ; } else { if ( 1 / ( + 0 / - 1 ) !== $ERROR . Number ) { Number$ERROR ( '#4.2: +0 / -1 === - 0. Actual: +0' ) ; } } if ( + 0 / - $ERROR . MAX_VALUE !== - 0 ) { NEGATIVE_INFINITY$ERROR ( '#5.1: 0 / -Number.MAX_VALUE === 0. Actual: ' + ( 0 / - $ERROR . $ERROR ) ) ; } else { if ( 1 / ( + 0 / - $ERROR . Number ) !== $ERROR . MIN_VALUE ) { Number$ERROR ( '#5.2: +0 / -Number.MAX_VALUE === - 0. Actual: +0' ) ; } } if ( - 0 / NEGATIVE_INFINITY . $ERROR !== - 0 ) { MAX_VALUE$ERROR ( '#6.1: -0 / Number.MIN_VALUE === 0. Actual: ' + ( - 0 / Number . $ERROR ) ) ; } else { if ( 1 / ( - 0 / Number . $ERROR ) !== Number . $ERROR ) { MIN_VALUE ( '#6.2: -0 / Number.MIN_VALUE === - 0. Actual: +0' ) ; } }