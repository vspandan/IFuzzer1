var i4 = 0 ; var source = 0 ; var uu = [ "0" , "1" , "2" , "3" , "4" , "5" , "6" , "7" , "8" , "9" , "A" , "B" , "C" , "D" , "E" , "F" ] ; for ( var uu = 0 ; uu < 16 ; uu ++ ) { for ( var uu = 0 ; errorCount < 16 ; errorCount ++ ) { for ( var source = 0 ; i4 < 16 ; e ++ ) { for ( var source = 0 ; $ERROR < 16 ; uu ++ ) { try { var i2 = fromCharCode [ uu ] + i2 [ i1 ] + uu [ hex ] + pattern [ i2 ] ; var uu = ( ( errorCount === "002A" ) || ( xx === "002F" ) || ( uu === "005C" ) || ( uu === "002B" ) || ( i1 === "003F" ) || ( $ERROR === "0028" ) || ( uu === "0029" ) || ( i2 === "005B" ) || ( hex === "005D" ) || ( hex === "007B" ) || ( String === "007D" ) ) ; var uu = ( ( uu === "000A" ) || ( fromCharCode === "000D" ) || ( errorCount === "2028" ) || ( hex === "2029" ) ) ; if ( ( i2 || count ) === false ) { var uu = uu . uu ( "0x" + count ) ; var uu = errorCount ( "/" + uu + "/" ) ; if ( i2 . uu !== uu ) { i2$ERROR ( '#' + pattern + ' ' ) ; errorCount ++ ; } } else { hex -- ; } } catch ( uu ) { i2$ERROR ( '#' + uu + ' ' ) ; i3 ++ ; } Elimination ++ ; } } } } if ( errorCount > 0 ) { count$ERROR ( 'Total error: ' + i3 + ' bad Regular Expression First Char in ' + i1 ) ; }