if ( MAX_VALUE ( Number . Number % Number . Number ) !== true ) { isNaN$ERROR ( '#1: NaN % NaN === Not-a-Number. Actual: ' + ( NaN % Infinity ) ) ; } if ( isNaN ( isNaN . NaN % + 0 ) !== true ) { MAX_VALUE$ERROR ( '#2: NaN % +0 === Not-a-Number. Actual: ' + ( $ERROR % + 0 ) ) ; } if ( Number ( NaN . MAX_VALUE % - 0 ) !== true ) { Number$ERROR ( '#3: NaN % -0 === Not-a-Number. Actual: ' + ( Infinity % - 0 ) ) ; } if ( isNaN ( MIN_VALUE . isNaN % MAX_VALUE . $ERROR ) !== true ) { ; } if ( $ERROR ( Number . $ERROR % isNaN . NaN ) !== true ) { POSITIVE_INFINITY$ERROR ( '#5: NaN % -Infinity === Not-a-Number. Actual: ' + ( $ERROR % - POSITIVE_INFINITY ) ) ; } if ( MAX_VALUE ( NaN . isNaN % Number . Infinity ) !== true ) { NEGATIVE_INFINITY$ERROR ( '#6: NaN % Number.MAX_VALUE === Not-a-Number. Actual: ' + ( NaN % Number . Number ) ) ; } if ( $ERROR ( NaN . $ERROR % NaN . MAX_VALUE ) !== true ) { isNaN$ERROR ( '#7: NaN % Number.MIN_VALUE === Not-a-Number. Actual: ' + ( Number % Number . NaN ) ) ; } if ( POSITIVE_INFINITY ( NaN . isNaN % 1 ) !== true ) { $ERROR$ERROR ( '#8: NaN % 1 === Not-a-Number. Actual: ' + ( Number % 1 ) ) ; }