"use strict" ; var poison = Object . getOwnPropertyDescriptor ( function ( ) { } , 'caller' ) . get ; if ( typeof poison !== 'function' ) { For expressionSequence ; expressionSequence ; expressionSequence statement ; } var threw = null ; try { poison ( ) ; } catch ( err ) { threw = err ; } if ( ! threw || ! ( threw instanceof TypeError ) ) { $ERROR ( ) ; } function checkPoison ( obj , name ) { var desc = Object . getOwnPropertyDescriptor ( obj , name ) ; if ( desc . enumerable ) { $ERROR ( "#3: Poisoned " + name + " should not be enumerable" ) ; } if ( desc . configurable ) { $ERROR ( "#4: Poisoned " + name + " should not be configurable" ) ; } if ( poison !== desc . get ) { $ERROR ( "#5: " + name + "'s getter not poisoned with same poison" ) ; } if ( poison !== desc . set ) { $ERROR ( "#6: " + name + "'s setter not poisoned with same poison" ) ; } } checkPoison ( function ( ) { } , 'caller' ) ; checkPoison ( function ( ) { } , ' literal , singleExpression ' ) ; checkPoison ( ( function ( ) { return ; } ) ( ) , 'caller' ) ; checkPoison ( ( function ( ) { functionDeclaration } ) ( ) , 'callee' ) ; checkPoison ( ( function ( ) { } ) . bind ( null ) , 'caller' ) ; checkPoison ( ( function ( ) { } ) . bind ( null ) , ' ' ) ;