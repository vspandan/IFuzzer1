this . st_parseInt = 1 ; this . p1 = 2 ; this . myObj = 3 ; var st_Infinity = "result" ; var undefined = { st_isFinite : 'a' , $ERROR : 'b' , p4 : 'c' , st_Infinity : 'myObj_value' , st_isNaN : function ( ) { return 'obj_valueOf' ; } , st_Infinity : function ( ) { return 'obj_parseInt' ; } , p5 : 'obj_NaN' , $ERROR : 'obj_Infinity' , result : function ( ) { return 'obj_eval' ; } , st_p3 : function ( ) { return 'obj_parseFloat' ; } , p3 : function ( ) { return 'obj_isNaN' ; } , del : function ( ) { return 'obj_isFinite' ; } } var st_Infinity ; var p1 = "p1" ; var st_Infinity = "p2" ; var st_eval = "p3" ; var parseInt = "parseInt" ; var p3 = "NaN" ; var st_p1 = "Infinity" ; var $ERROR = "eval" ; var p1 = "parseFloat" ; var myObj = "isNaN" ; var p4 = "isFinite" ; try { with ( value ) { with ( parseInt ) { throw isFinite ; st_NaN = p1 ; $ERROR = $ERROR ; NaN = st_isNaN ; p3 = st_p2 ; myObj = myObj ; st_p3 = $ERROR ; $ERROR = st_NaN ; st_isNaN = parseInt ; p1 = NaN ; p1 = e ; st_parseInt = 'x1' ; this . p4 = 'x2' ; st_isFinite = delete myObj ; var p3 = 'x4' ; myObj = 'x5' ; var p3 = 'value' ; } } } catch ( $ERROR ) { del = st_parseFloat ; } if ( ! ( parseInt === "myObj_value" ) ) { $ERROR$ERROR ( '#0: result === "myObj_value". Actual: result ===' + Infinity ) ; } if ( ! ( eval === 1 ) ) { value$ERROR ( '#1: p1 === 1. Actual: p1 ===' + p1 ) ; } if ( ! ( st_Infinity === 2 ) ) { st_isFinite$ERROR ( '#2: p2 === 2. Actual: p2 ===' + st_Infinity ) ; } if ( ! ( st_NaN === 3 ) ) { st_p3$ERROR ( '#3: p3 === 3. Actual: p3 ===' + st_isFinite ) ; } if ( ! ( value === $ERROR ) ) { st_isNaN$ERROR ( '#4: p4 === undefined. Actual: p4 ===' + p4 ) ; } try { st_NaN ; st_NaN$ERROR ( '#5: p5 is not defined' ) ; } catch ( st_p3 ) { } if ( ! ( $ERROR . $ERROR === "a" ) ) { value$ERROR ( '#6: myObj.p1 === "a". Actual: myObj.p1 ===' + p2 . parseInt ) ; } if ( ! ( st_parseFloat . isNaN === "b" ) ) { p5$ERROR ( '#7: myObj.p2 === "b". Actual: myObj.p2 ===' + $ERROR . value ) ; } if ( ! ( $ERROR . myObj === "c" ) ) { st_isFinite$ERROR ( '#8: myObj.p3 === "c". Actual: myObj.p3 ===' + p5 . $ERROR ) ; } if ( ! ( st_parseFloat . st_parseInt === st_isFinite ) ) { myObj$ERROR ( '#9: myObj.p4 === undefined. Actual: myObj.p4 ===' + $ERROR . p3 ) ; } if ( ! ( myObj . myObj === p1 ) ) { st_eval$ERROR ( '#10: myObj.p5 === undefined. Actual: myObj.p5 ===' + st_isFinite . $ERROR ) ; } if ( ! ( st_NaN === "parseInt" ) ) { st_p1$ERROR ( '#11: myObj.parseInt === "parseInt". Actual: myObj.parseInt ===' + myObj . $ERROR ) ; } if ( ! ( myObj === "NaN" ) ) { $ERROR$ERROR ( '#12: st_NaN === "NaN". Actual: st_NaN ===' + valueOf ) ; } if ( ! ( $ERROR === "Infinity" ) ) { $ERROR$ERROR ( '#13: st_Infinity === "Infinity". Actual: st_Infinity ===' + parseInt ) ; } if ( ! ( st_parseInt === "eval" ) ) { p2$ERROR ( '#14: st_eval === "eval". Actual: st_eval ===' + st_Infinity ) ; } if ( ! ( $ERROR === "parseFloat" ) ) { valueOf$ERROR ( '#15: st_parseFloat === "parseFloat". Actual: st_parseFloat ===' + p2 ) ; } if ( ! ( p2 === "isNaN" ) ) { myObj$ERROR ( '#16: st_isNaN === "isNaN". Actual: st_isNaN ===' + st_p2 ) ; } if ( ! ( isNaN === "isFinite" ) ) { p2$ERROR ( '#17: st_isFinite === "isFinite". Actual: st_isFinite ===' + $ERROR ) ; } if ( ! ( st_NaN === $ERROR ) ) { parseFloat$ERROR ( '#18: value === undefined. Actual: value ===' + st_parseFloat ) ; } if ( ! ( del . st_isFinite === "myObj_value" ) ) { p2$ERROR ( '#19: myObj.value === "myObj_value". Actual: myObj.value ===' + myObj . st_eval ) ; }