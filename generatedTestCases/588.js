this . p1 = 1 ; var result = "result" ; var myObj = { p1 : 'a' , value : 'myObj_value' , valueOf : function ( ) { return 'obj_valueOf' ; } } switch ( 4 ) { case [ ( [ 11 , 12 , 13 , 14 ] . p1 ? 2 : let ( theirObj = 1 , p1 = 2 ) 5 ) for < missing ':'> ( result in < missing ')'> [ < theirObj / > for ( p1 in p1 ) ] ) ] : } try { with ( myObj ) { with ( theirObj ) { p1 = 'x1' ; throw value ; } } } catch ( e ) { result = p1 ; } if ( p1 !== 1 ) { $ERROR ( '#1: p1 === 1. Actual: p1 ===' + p1 ) ; } if ( myObj . p1 !== "a" ) { $ERROR ( '#2: myObj.p1 === "a". Actual: myObj.p1 ===' + myObj . p1 ) ; } if ( theirObj . p1 !== "x1" ) { $ERROR ( '#3: theirObj.p1 === "x1". Actual: theirObj.p1 ===' + theirObj . p1 ) ; }