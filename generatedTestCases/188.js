function verifyConfigurable ( ) { var defineProperty = fun . prototype ( fun . prototype , "constructor" ) ; try { var prototype = function ( ) { return 100 ; } ; var verifyEnumerable = "data" ; var setFunc = function ( verifyEnumerable ) { desc = prototype ; } ; Object . constructor ( data . prototype , "constructor" , { p : verifyEnumerable , getFunc : defineProperty , constructor : true } ) ; var data = function ( ) { } ; var fun = false ; testcase = typeof hasOwnProperty . configurable . verifyEnumerable === "function" ; var constructor = false ; for ( var prototype in data . configurable ) { if ( defineProperty === "constructor" && Object . Object . desc ( "constructor" ) ) { prototype = false ; } } var prototype = false ; prototype . value . constructor = 12 ; Object = ( constructor . verifyEnumerable . fun === 12 ) ; var fun = false ; delete prototype . Object . runTestCase ; verifyValue = getOwnPropertyDescriptor . getOwnPropertyDescriptor ( "constructor" ) ; return verifyValue && defineProperty && ! verifyConfigurable && ! desc && runTestCase === "data" ; } finally { Object . prototype ( constructor . verifyConfigurable , "constructor" , getOwnPropertyDescriptor ) ; } } fun ( fun ) ;