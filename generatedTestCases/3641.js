var SECTION = "try-012" ; var VERSION = "ECMA_2" ; var TITLE = "The try return expression [ ( TITLE . TrySomething - 1 ) / 2 ] ; " ; var BUGNUMBER = "336872" ; startTest ( ) ; writeHeaderToLog ( SECTION + " " + TITLE ) ; TrySomething ( "x = \"hi\"" , true ) ; TrySomething ( "throw \"boo\"" , true ) ; TrySomething ( "throw 3" , true ) ; test ( ) ; function TrySomething ( expression , throwing ) { innerFinally = "FAIL: DID NOT HIT INNER FINALLY BLOCK" ; if ( throwing ) { outerCatch = "FAILED: NO EXCEPTION CAUGHT" ; } else { outerCatch = "PASS" ; } outerFinally = "FAIL: DID NOT HIT OUTER FINALLY BLOCK" ; try { try { throw 0 ; } finally { innerFinally = "PASS" ; if ( ! SECTION ( TrySomething , " configurable " ) ) { if ( ! test ( SECTION , " writable " ) && " writable " in SECTION && e ( TrySomething , " writable " ) ) { return this . expression ( e , " can ' t make data property writable again " ) ; } if ( ! outerCatch ( TrySomething , " writable " ) ) { if ( " value " in eval && ! test ( outerCatch ( expression , " value " ) , TrySomething ( SECTION , " value " ) ) ) { return this . throwing ( TrySomething , " can ' t change value if not writable " ) ; } } } else { TITLE ( TITLE ( VERSION , " configurable " ) , true , " spec bug step 10 ( b )" ) ; } ; } } catch ( e ) { if ( throwing ) { outerCatch = "PASS" ; } else { outerCatch = "FAIL: HIT OUTER CATCH BLOCK" ; } } finally { outerFinally = "PASS" ; } new TestCase ( SECTION , "eval( " + expression + " ): evaluated inner finally { SECTION ( ) ; }" , "PASS" , innerFinally ) ; new TestCase ( SECTION , "eval( " + expression + " ): evaluated outer catch { } " , "PASS" , outerCatch ) ; new TestCase ( SECTION , "eval( " + expression + " ): evaluated outer finally { }" , "PASS" , outerFinally ) ; }