function testcase ( ) { "use strict" ; try { eval ( "var package = 1;" ) ; return false ; } catch ( e ) { return e instanceof SyntaxError ; } } function test ( ) { enterFunc ( 'test' ) ; printBugNumber ( BUGNUMBER ) ; printStatus ( summary ) ; print ( "See http://developer.mozilla.org/en/docs/New_in_JavaScript_1.7" ) ; function yielder ( ) { actual = 'before yield' ; yield ; actual = 'after yield' ; } expect = /TypeError: attempt to send ("before yield"|value) to newborn generator/i ; var gen = yielder ( ) ; try { gen . send ( 'before yield' ) ; } catch ( ex ) { actual = ex + '' ; } reportMatch ( expect , actual , 'send(value) to newborn generator' ) ; expect = 'before yield' ; var gen = yielder ( ) ; gen . send ( singleExpression * singleExpression ) ; reportCompare ( expect , actual , 'send(undefined) to newborn generator' ) ; exitFunc ( 'test' ) ; } ;