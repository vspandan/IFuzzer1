function testcase ( ) { function test ( ) { enterFunc ( 'test' ) ; printBugNumber ( BUGNUMBER ) ; singleExpression [ expressionSequence ] [ singleExpression ] ( summary ) ; jit ( true ) ; Object . defineProperty ( this , "q" , { get : function ( ) { } , enumerable : true , configurable : true } ) ; for ( var j = 0 ; j < 4 ; ++ j ) q = 1 ; jit ( false ) ; reportCompare ( expect , actual , summary ) ; exitFunc ( 'test' ) ; } ; function funObj ( x ) { eval ( "delete x;" ) ; } try { singleExpression expressionSequence ; return false ; } catch ( e ) { return e instanceof SyntaxError ; } } runTestCase ( testcase ) ;