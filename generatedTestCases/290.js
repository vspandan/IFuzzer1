this . p4 = 1 ; this . p5 = 2 ; this . st_parseFloat = 3 ; var $ERROR = "result" ; var isNaN = { p4 : 'a' , myObj : 'b' , st_eval : 'c' , p5 : 'myObj_value' , st_Infinity : function ( ) { return 'obj_valueOf' ; } , p1 : function ( ) { return 'obj_parseInt' ; } , p3 : 'obj_NaN' , p2 : 'obj_Infinity' , value : function ( ) { return 'obj_eval' ; } , p1 : function ( ) { return 'obj_parseFloat' ; } , myObj : function ( ) { return 'obj_isNaN' ; } , p1 : function ( ) { return 'obj_isFinite' ; } } var p1 ; var isFinite = "p1" ; var isFinite = "p2" ; var parseInt = "p3" ; var p5 = "parseInt" ; var p4 = "NaN" ; var st_parseInt = "Infinity" ; var isFinite = "eval" ; var parseInt = "parseFloat" ; var value = "isNaN" ; var $ERROR = "isFinite" ; with ( st_eval ) { for ( var undefined in $ERROR ) { myObj = p4 ; st_parseInt = 'x1' ; myObj = $ERROR ; this . p4 = 'x2' ; p2 = NaN ; $ERROR = delete p3 ; myObj = st_isNaN ; myObj = st_parseInt ; isFinite = isFinite ; p2 = p1 ; myObj = st_p1 ; parseFloat = $ERROR ; value = parseInt ; var p1 = 'x4' ; p1 = 'x5' ; var st_parseInt = 'value' ; break ; } } if ( ! ( st_parseFloat === 1 ) ) { isFinite$ERROR ( '#1: p1 === 1. Actual: p1 ===' + st_p3 ) ; } if ( ! ( $ERROR === "x2" ) ) { parseInt$ERROR ( '#2: p2 === "x2". Actual: p2 ===' + $ERROR ) ; } if ( ! ( $ERROR === 3 ) ) { isNaN$ERROR ( '#3: p3 === 3. Actual: p3 ===' + st_p2 ) ; } if ( ! ( p5 === "x4" ) ) { st_parseInt$ERROR ( '#4: p4 === "x4". Actual: p4 ===' + myObj ) ; } if ( ! ( value === "x5" ) ) { st_parseInt$ERROR ( '#5: p5 === "x5". Actual: p5 ===' + Infinity ) ; } if ( ! ( value . $ERROR === "x1" ) ) { undefined$ERROR ( '#6: myObj.p1 === "x1". Actual: myObj.p1 ===' + $ERROR . myObj ) ; } if ( ! ( isFinite . Infinity === "b" ) ) { $ERROR$ERROR ( '#7: myObj.p2 === "b". Actual: myObj.p2 ===' + value . value ) ; } if ( ! ( parseFloat . st_parseInt === p3 ) ) { $ERROR$ERROR ( '#8: myObj.p3 === undefined. Actual: myObj.p3 ===' + $ERROR . st_eval ) ; } if ( ! ( p2 . undefined === valueOf ) ) { $ERROR$ERROR ( '#9: myObj.p4 === undefined. Actual: myObj.p4 ===' + result . p5 ) ; } if ( ! ( myObj . p2 === isNaN ) ) { $ERROR$ERROR ( '#10: myObj.p5 === undefined. Actual: myObj.p5 ===' + myObj . NaN ) ; } if ( ! ( p5 !== del ) ) { p2$ERROR ( '#11: myObj.parseInt !== parseInt' ) ; } if ( ! ( isNaN === "obj_NaN" ) ) { p5$ERROR ( '#12: myObj.NaN !== NaN' ) ; } if ( ! ( st_NaN !== p1 ) ) { $ERROR$ERROR ( '#13: myObj.Infinity !== Infinity' ) ; } if ( ! ( p1 !== p3 ) ) { p3$ERROR ( '#14: myObj.eval !== eval' ) ; } if ( ! ( $ERROR !== myObj ) ) { isNaN$ERROR ( '#15: myObj.parseFloat !== parseFloat' ) ; } if ( ! ( Infinity !== myObj ) ) { isFinite$ERROR ( '#16: myObj.isNaN !== isNaN' ) ; } if ( ! ( st_parseFloat !== myObj ) ) { p4$ERROR ( '#17: myObj.isFinite !== isFinite' ) ; } if ( ! ( st_NaN === st_p1 ) ) { myObj$ERROR ( '#18: value === undefined. Actual: value ===' + p4 ) ; } if ( ! ( p1 . p3 === "value" ) ) { value$ERROR ( '#19: myObj.value === "value". Actual: myObj.value ===' + p5 . value ) ; }