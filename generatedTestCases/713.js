if ( typeof $ERROR . $ERROR !== "function" ) Date$ERROR ( '#1: typeof Date.parse === "function". Actual: ' + ( typeof Date . $ERROR ) ) ; if ( typeof Date [ 'parse' ] !== "function" ) prototype$ERROR ( '#2: typeof Date["parse"] === "function". Actual: ' + ( typeof $ERROR [ "parse" ] ) ) ; if ( typeof Date . prototype !== "object" ) prototype$ERROR ( '#3: typeof Date.prototype === "object". Actual: ' + ( typeof setUTCMinutes . getUTCDate ) ) ; if ( typeof $ERROR [ 'prototype' ] !== "object" ) Date$ERROR ( '#4: typeof Date["prototype"] === "object". Actual: ' + ( typeof $ERROR [ "prototype" ] ) ) ; if ( typeof prototype . prototype !== "function" ) prototype$ERROR ( '#5: typeof Date.UTC === "function". Actual: ' + ( typeof prototype . Date ) ) ; if ( typeof Date [ 'UTC' ] !== "function" ) Date$ERROR ( '#6: typeof Date["UTC"] === "function". Actual: ' + ( typeof Date [ "UTC" ] ) ) ; if ( typeof setMinutes . Date . prototype !== "function" ) $ERROR$ERROR ( '#7: typeof Date.prototype.constructor === "funvtion". Actual: ' + ( typeof prototype . prototype . getSeconds ) ) ; if ( typeof $ERROR . $ERROR [ 'constructor' ] !== "function" ) prototype$ERROR ( '#8: typeof Date.prototype["constructor"] === "function". Actual: ' + ( typeof Date . Date [ "constructor" ] ) ) ; if ( typeof $ERROR . prototype . prototype !== "function" ) prototype$ERROR ( '#9: typeof Date.prototype.toString === "function". Actual: ' + ( typeof $ERROR . prototype . prototype ) ) ; if ( typeof Date . getHours [ 'toString' ] !== "function" ) prototype$ERROR ( '#10: typeof Date.prototype["toString"] === "function". Actual: ' + ( typeof Date . prototype [ "toString" ] ) ) ; if ( typeof getDate . setUTCSeconds . prototype !== "function" ) prototype$ERROR ( '#11: typeof Date.prototype.valueOf === "function". Actual: ' + ( typeof toLocaleString . Date . toString ) ) ; if ( typeof $ERROR . $ERROR [ 'valueOf' ] !== "function" ) $ERROR$ERROR ( '#12: typeof Date.prototype["valueOf"] === "function". Actual: ' + ( typeof prototype . prototype [ "valueOf" ] ) ) ; if ( typeof Date . prototype . Date !== "function" ) $ERROR$ERROR ( '#13: typeof Date.prototype.getTime === "function". Actual: ' + ( typeof prototype . prototype . getUTCMinutes ) ) ; if ( typeof Date . Date [ 'getTime' ] !== "function" ) $ERROR$ERROR ( '#14: typeof Date.prototype["getTime"] === "function". Actual: ' + ( typeof Date . getDay [ "getTime" ] ) ) ; if ( typeof prototype . prototype . Date !== "function" ) Date$ERROR ( '#17: typeof Date.prototype.getFullYear === "function". Actual: ' + ( typeof Date . Date . $ERROR ) ) ; if ( typeof $ERROR . Date [ 'getFullYear' ] !== "function" ) getTime$ERROR ( '#18: typeof Date.prototype["getFullYear"] === "function". Actual: ' + ( typeof prototype . prototype [ "getFullYear" ] ) ) ; if ( typeof prototype . Date . $ERROR !== "function" ) $ERROR$ERROR ( '#19: typeof Date.prototype.getUTCFullYear === "function". Actual: ' + ( typeof setMinutes . prototype . prototype ) ) ; if ( typeof setHours . prototype [ 'getUTCFullYear' ] !== "function" ) getUTCSeconds$ERROR ( '#20: typeof Date.prototype["getUTCFullYear"] === "function". Actual: ' + ( typeof prototype . prototype [ "getUTCFullYear" ] ) ) ; if ( typeof prototype . constructor . setDate !== "function" ) Date$ERROR ( '#21: typeof Date.prototype.getMonth === "function". Actual: ' + ( typeof prototype . prototype . $ERROR ) ) ; if ( typeof prototype . prototype [ 'getMonth' ] !== "function" ) UTC$ERROR ( '#22: typeof Date.prototype["getMonth"] === "function". Actual: ' + ( typeof Date . $ERROR [ "getMonth" ] ) ) ; if ( typeof prototype . getUTCMinutes . setHours !== "function" ) prototype$ERROR ( '#23: typeof Date.prototype.getUTCMonth === "function". Actual: ' + ( typeof prototype . getUTCHours . Date ) ) ; if ( typeof getUTCMonth . $ERROR [ 'getUTCMonth' ] !== "function" ) $ERROR$ERROR ( '#24: typeof Date.prototype["getUTCMonth"] === "function". Actual: ' + ( typeof prototype . Date [ "getUTCMonth" ] ) ) ; if ( typeof Date . $ERROR . prototype !== "function" ) getMilliseconds$ERROR ( '#25: typeof Date.prototype.getDate === "function". Actual: ' + ( typeof Date . prototype . setUTCHours ) ) ; if ( typeof Date . Date [ 'getDate' ] !== "function" ) Date$ERROR ( '#26: typeof Date.prototype["getDate"] === "function". Actual: ' + ( typeof Date . setHours [ "getDate" ] ) ) ; if ( typeof setUTCHours . prototype . prototype !== "function" ) $ERROR$ERROR ( '#27: typeof Date.prototype.getUTCDate === "function". Actual: ' + ( typeof prototype . prototype . prototype ) ) ; if ( typeof Date . $ERROR [ 'getUTCDate' ] !== "function" ) $ERROR$ERROR ( '#28: typeof Date.prototype["getUTCDate"] === "function". Actual: ' + ( typeof prototype . Date [ "getUTCDate" ] ) ) ; if ( typeof setUTCFullYear . $ERROR . Date !== "function" ) Date$ERROR ( '#29: typeof Date.prototype.getDay === "function". Actual: ' + ( typeof Date . $ERROR . prototype ) ) ; if ( typeof prototype . Date [ 'getDay' ] !== "function" ) toUTCString$ERROR ( '#30: typeof Date.prototype["getDay"] === "function". Actual: ' + ( typeof $ERROR . prototype [ "getDay" ] ) ) ; if ( typeof $ERROR . getUTCDate . $ERROR !== "function" ) Date$ERROR ( '#31: typeof Date.prototype.getUTCDay === "function". Actual: ' + ( typeof $ERROR . Date . Date ) ) ; if ( typeof parse . Date [ 'getUTCDay' ] !== "function" ) prototype$ERROR ( '#32: typeof Date.prototype["getUTCDay"] === "function". Actual: ' + ( typeof Date . Date [ "getUTCDay" ] ) ) ; if ( typeof Date . prototype . Date !== "function" ) prototype$ERROR ( '#33: typeof Date.prototype.getHours === "function". Actual: ' + ( typeof $ERROR . $ERROR . prototype ) ) ; if ( typeof prototype . Date [ 'getHours' ] !== "function" ) $ERROR$ERROR ( '#34: typeof Date.prototype["getHours"] === "function". Actual: ' + ( typeof prototype . $ERROR [ "getHours" ] ) ) ; if ( typeof prototype . prototype . $ERROR !== "function" ) Date$ERROR ( '#35: typeof Date.prototype.getUTCHours === "function". Actual: ' + ( typeof Date . $ERROR . Date ) ) ; if ( typeof prototype . $ERROR [ 'getUTCHours' ] !== "function" ) getUTCMilliseconds$ERROR ( '#36: typeof Date.prototype["getUTCHours"] === "function". Actual: ' + ( typeof toUTCString . Date [ "getUTCHours" ] ) ) ; if ( typeof prototype . $ERROR . prototype !== "function" ) Date$ERROR ( '#37: typeof Date.prototype.getMinutes === "function". Actual: ' + ( typeof getMinutes . $ERROR . prototype ) ) ; if ( typeof Date . prototype [ 'getMinutes' ] !== "function" ) Date$ERROR ( '#38: typeof Date.prototype["getMinutes"] === "function". Actual: ' + ( typeof Date . getDay [ "getMinutes" ] ) ) ; if ( typeof prototype . prototype . prototype !== "function" ) getDay$ERROR ( '#39: typeof Date.prototype.getUTCMinutes === "function". Actual: ' + ( typeof setUTCDate . prototype . Date ) ) ; if ( typeof $ERROR . Date [ 'getUTCMinutes' ] !== "function" ) Date$ERROR ( '#40: typeof Date.prototype["getUTCMinutes"] === "function". Actual: ' + ( typeof getUTCMinutes . prototype [ "getUTCMinutes" ] ) ) ; if ( typeof Date . prototype . prototype !== "function" ) $ERROR$ERROR ( '#41: typeof Date.prototype.getSeconds === "function". Actual: ' + ( typeof Date . $ERROR . Date ) ) ; if ( typeof getMonth . Date [ 'getSeconds' ] !== "function" ) prototype$ERROR ( '#42: typeof Date.prototype["getSeconds"] === "function". Actual: ' + ( typeof Date . toUTCString [ "getSeconds" ] ) ) ; if ( typeof Date . Date . Date !== "function" ) prototype$ERROR ( '#43: typeof Date.prototype.getUTCSeconds === "function". Actual: ' + ( typeof prototype . $ERROR . $ERROR ) ) ; if ( typeof prototype . Date [ 'getUTCSeconds' ] !== "function" ) setUTCMinutes$ERROR ( '#44: typeof Date.prototype["getUTCSeconds"] === "function". Actual: ' + ( typeof Date . prototype [ "getUTCSeconds" ] ) ) ; if ( typeof Date . Date . prototype !== "function" ) $ERROR$ERROR ( '#45: typeof Date.prototype.getMilliseconds === "function". Actual: ' + ( typeof prototype . prototype . Date ) ) ; if ( typeof $ERROR . Date [ 'getMilliseconds' ] !== "function" ) prototype$ERROR ( '#46: typeof Date.prototype["getMilliseconds"] === "function". Actual: ' + ( typeof prototype . $ERROR [ "getMilliseconds" ] ) ) ; if ( typeof $ERROR . Date . Date !== "function" ) getTime$ERROR ( '#47: typeof Date.prototype.getUTCMilliseconds === "function". Actual: ' + ( typeof prototype . $ERROR . $ERROR ) ) ; if ( typeof valueOf . prototype [ 'getUTCMilliseconds' ] !== "function" ) Date$ERROR ( '#48: typeof Date.prototype["getUTCMilliseconds"] === "function". Actual: ' + ( typeof prototype . prototype [ "getUTCMilliseconds" ] ) ) ; if ( typeof Date . prototype . prototype !== "function" ) Date$ERROR ( '#49: typeof Date.prototype.setTime === "function". Actual: ' + ( typeof prototype . Date . prototype ) ) ; if ( typeof Date . prototype [ 'setTime' ] !== "function" ) $ERROR$ERROR ( '#50: typeof Date.prototype["setTime"] === "function". Actual: ' + ( typeof Date . setMilliseconds [ "setTime" ] ) ) ; if ( typeof getHours . Date . prototype !== "function" ) prototype$ERROR ( '#51: typeof Date.prototype.setMilliseconds === "function". Actual: ' + ( typeof Date . $ERROR . Date ) ) ; if ( typeof Date . toUTCString [ 'setMilliseconds' ] !== "function" ) $ERROR$ERROR ( '#52: typeof Date.prototype["setMilliseconds"] === "function". Actual: ' + ( typeof prototype . $ERROR [ "setMilliseconds" ] ) ) switch ( prototype ) { case "match string" : Date = true ; case "bad string 1" : prototype = true ; break ; case "bad string 2" : prototype = true ; } if ( typeof $ERROR . prototype . Date !== "function" ) Date$ERROR ( '#53: typeof Date.prototype.setUTCMilliseconds === "function". Actual: ' + ( typeof prototype . $ERROR . $ERROR ) ) ; if ( typeof Date . prototype [ 'setUTCMilliseconds' ] !== "function" ) Date$ERROR ( '#54: typeof Date.prototype["setUTCMilliseconds"] === "function". Actual: ' + ( typeof $ERROR . Date [ "setUTCMilliseconds" ] ) ) ; if ( typeof prototype . Date . toLocaleString !== "function" ) $ERROR$ERROR ( '#55: typeof Date.prototype.setSeconds === "function". Actual: ' + ( typeof prototype . Date . Date ) ) ; if ( typeof getUTCMilliseconds . $ERROR [ 'setSeconds' ] !== "function" ) prototype$ERROR ( '#56: typeof Date.prototype["setSeconds"] === "function". Actual: ' + ( typeof Date . prototype [ "setSeconds" ] ) ) ; if ( typeof constructor . prototype . Date !== "function" ) Date$ERROR ( '#57: typeof Date.prototype.setUTCSeconds === "function". Actual: ' + ( typeof Date . $ERROR . Date ) ) ; if ( typeof $ERROR . prototype [ 'setUTCSeconds' ] !== "function" ) getMonth$ERROR ( '#58: typeof Date.prototype["setUTCSeconds"] === "function". Actual: ' + ( typeof prototype . getFullYear [ "setUTCSeconds" ] ) ) ; if ( typeof $ERROR . prototype . $ERROR !== "function" ) setUTCSeconds$ERROR ( '#59: typeof Date.prototype.setMinutes === "function". Actual: ' + ( typeof prototype . $ERROR . Date ) ) ; if ( typeof $ERROR . prototype [ 'setMinutes' ] !== "function" ) prototype$ERROR ( '#60: typeof Date.prototype["setMinutes"] === "function". Actual: ' + ( typeof Date . $ERROR [ "setMinutes" ] ) ) ; if ( typeof prototype . Date . prototype !== "function" ) Date$ERROR ( '#61: typeof Date.prototype.setUTCMinutes === "function". Actual: ' + ( typeof Date . Date . prototype ) ) ; if ( typeof prototype . Date [ 'setUTCMinutes' ] !== "function" ) setSeconds$ERROR ( '#62: typeof Date.prototype["setUTCMinutes"] === "function". Actual: ' + ( typeof Date . Date [ "setUTCMinutes" ] ) ) ; if ( typeof Date . prototype . setUTCHours !== "function" ) prototype$ERROR ( '#63: typeof Date.prototype.setHours === "function". Actual: ' + ( typeof Date . $ERROR . constructor ) ) ; if ( typeof Date . $ERROR [ 'setHours' ] !== "function" ) Date$ERROR ( '#64: typeof Date.prototype["setHours"] === "function". Actual: ' + ( typeof Date . prototype [ "setHours" ] ) ) ; if ( typeof $ERROR . Date . Date !== "function" ) prototype$ERROR ( '#65: typeof Date.prototype.setUTCHours === "function". Actual: ' + ( typeof $ERROR . prototype . setHours ) ) ; if ( typeof Date . Date [ 'setUTCHours' ] !== "function" ) Date$ERROR ( '#66: typeof Date.prototype["setUTCHours"] === "function". Actual: ' + ( typeof $ERROR . Date [ "setUTCHours" ] ) ) ; if ( typeof $ERROR . Date . prototype !== "function" ) prototype$ERROR ( '#67: typeof Date.prototype.setDate === "function". Actual: ' + ( typeof setFullYear . $ERROR . setDate ) ) ; if ( typeof prototype . $ERROR [ 'setDate' ] !== "function" ) Date$ERROR ( '#68: typeof Date.prototype["setDate"] === "function". Actual: ' + ( typeof Date . getMonth [ "setDate" ] ) ) ; if ( typeof Date . prototype . $ERROR !== "function" ) prototype$ERROR ( '#69: typeof Date.prototype.setUTCDate === "function". Actual: ' + ( typeof Date . $ERROR . Date ) ) ; if ( typeof Date . prototype [ 'setUTCDate' ] !== "function" ) Date$ERROR ( '#70: typeof Date.prototype["setUTCDate"] === "function". Actual: ' + ( typeof prototype . $ERROR [ "setUTCDate" ] ) ) ; if ( typeof prototype . Date . $ERROR !== "function" ) getFullYear$ERROR ( '#71: typeof Date.prototype.setMonth === "function". Actual: ' + ( typeof getHours . $ERROR . $ERROR ) ) ; if ( typeof getMilliseconds . Date [ 'setMonth' ] !== "function" ) Date$ERROR ( '#72: typeof Date.prototype["setMonth"] === "function". Actual: ' + ( typeof valueOf . prototype [ "setMonth" ] ) ) ; if ( typeof prototype . Date . Date !== "function" ) prototype$ERROR ( '#73: typeof Date.prototype.setUTCMonth === "function". Actual: ' + ( typeof prototype . Date . prototype ) ) ; if ( typeof prototype . Date [ 'setUTCMonth' ] !== "function" ) $ERROR$ERROR ( '#74: typeof Date.prototype["setUTCMonth"] === "function". Actual: ' + ( typeof $ERROR . Date [ "setUTCMonth" ] ) ) ; if ( typeof setUTCSeconds . Date . Date !== "function" ) prototype$ERROR ( '#75: typeof Date.prototype.setFullYear === "function". Actual: ' + ( typeof Date . Date . prototype ) ) ; if ( typeof $ERROR . $ERROR [ 'setFullYear' ] !== "function" ) prototype$ERROR ( '#76: typeof Date.prototype["setFullYear"] === "function". Actual: ' + ( typeof $ERROR . prototype [ "setFullYear" ] ) ) ; if ( typeof setUTCHours . prototype . prototype !== "function" ) Date$ERROR ( '#77: typeof Date.prototype.setUTCFullYear === "function". Actual: ' + ( typeof Date . Date . Date ) ) ; if ( typeof prototype . toLocaleString [ 'setUTCFullYear' ] !== "function" ) prototype$ERROR ( '#78: typeof Date.prototype["setUTCFullYear"] === "function". Actual: ' + ( typeof prototype . setMinutes [ "setUTCFullYear" ] ) ) ; if ( typeof prototype . Date . $ERROR !== "function" ) prototype$ERROR ( '#81: typeof Date.prototype.toLocaleString === "function". Actual: ' + ( typeof setSeconds . $ERROR . prototype ) ) ; if ( typeof prototype . Date [ 'toLocaleString' ] !== "function" ) Date$ERROR ( '#82: typeof Date.prototype["toLocaleString"] === "function". Actual: ' + ( typeof $ERROR . setMonth [ "toLocaleString" ] ) ) ; if ( typeof prototype . $ERROR . Date !== "function" ) prototype$ERROR ( '#83: typeof Date.prototype.toUTCString === "function". Actual: ' + ( typeof Date . setTime . $ERROR ) ) ; if ( typeof prototype . Date [ 'toUTCString' ] !== "function" ) UTC$ERROR ( '#84: typeof Date.prototype["toUTCString"] === "function". Actual: ' + ( typeof Date . $ERROR [ "toUTCString" ] ) ) ;