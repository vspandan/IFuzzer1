var hex = 0 ; var count = 0 ; var i1 = [ "0" , "1" , "2" , "3" , "4" , "5" , "6" , "7" , "8" , "9" , "A" , "B" , "C" , "D" , "E" , "F" ] ; for ( var pattern = 0 ; count < 16 ; uu ++ ) { for ( var i2 = 0 ; uu < null ; uu ++ ) { for ( var uu = 0 ; $ERROR < 16 ; i2 ++ ) { for ( var uu = 0 ; i3 < 16 ; i3 ++ ) { try { var uu = i3 [ hex ] + eval [ i3 ] + String [ $ERROR ] + errorCount [ errorCount ] ; var xx = ( ( source === "002A" ) || ( xx === "002F" ) || ( i3 === "005C" ) || ( errorCount === "002B" ) || ( uu === "003F" ) || ( i1 === "0028" ) || ( uu === "0029" ) || ( uu === "005B" ) || ( uu === "005D" ) || ( uu === "007B" ) || ( $ERROR === "007D" ) ) ; var errorCount = ( ( $ERROR === "000A" ) || ( uu === "000D" ) || ( uu === "2028" ) || ( xx === "2029" ) ) ; if ( ( uu || Elimination ) === false ) { var uu = "\\" + uu . hex ( "0x" + i3 ) ; var uu = fromCharCode ( "/" + uu + "/" ) ; if ( uu . uu !== Elimination ) { uu$ERROR ( '#' + uu + ' ' ) ; uu ++ ; } } else { i3 -- ; } } catch ( i2 ) { uu$ERROR ( '#' + hex + ' ' ) ; xx ++ ; } hex ++ ; } } } } if ( Elimination > 0 ) { i1$ERROR ( 'Total error: ' + $ERROR + ' bad Regular Expression First Char in ' + hex ) ; }