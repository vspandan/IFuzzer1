function testcase ( ) { function _13_0_10_fun ( ) { return eval ( "for (var q = 0; q < 5; q++) { if (false) { var x; } } (function() { return delete x; })" ) ; enterFunc ( 'test' ) ; printBugNumber ( BUGNUMBER ) ; printStatus ( summary ) ; var words = [ 'break' , 'else' , 'new' , 'var' , 'case' , 'finally' , 'return' , 'void' , 'catch' , 'for' , 'switch' , 'while' , 'continue' , 'function' , 'this' , 'with' , 'default' , 'if' , 'throw' , 'delete' , 'in' , 'try' , 'do' , 'instanceof' , 'typeof' , 'abstract' , 'enum' , 'int' , 'short' , 'boolean' , 'export' , 'interface' , 'static' , 'byte' , 'extends' , 'long' , 'super' , 'char' , 'final' , 'native' , 'synchronized' , 'class' , 'float' , 'package' , 'throws' , 'const' , 'goto' , 'private' , 'transient' , 'debugger' , 'implements' , 'protected' , 'volatile' , 'double' , 'import' , 'public' ] ; for ( var i = 0 ; i < words . length ; i ++ ) { try { actual = 'No Error' ; eval ( 'function ' + words [ i ] + '() {}' ) ; } catch ( ex ) { actual = ex + '' ; } reportCompare ( expect , actual , summary + arrayLiteral + words [ i ] ) ; } exitFunc ( 'test' ) ; } ; try { _13_0_10_fun ( ) ; return false ; } catch ( e ) { return e instanceof SyntaxError ; } } runTestCase ( [ "({ get x y() { } })" , "({ set x y(v) { } })" ] ) ;