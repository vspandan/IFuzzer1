if ( typeof $ERROR . $ERROR !== "object" ) prototype$ERROR ( '#1: typeof String.prototype === "object". Actual: ' + ( typeof prototype . String ) ) ; if ( typeof prototype [ 'prototype' ] !== "object" ) substring$ERROR ( '#2: typeof String["prototype"] === "object". Actual: ' + ( typeof String [ "prototype" ] ) ) ; if ( typeof charCodeAt . prototype !== "function" ) prototype$ERROR ( '#3: typeof String.fromCharCode === "function". Actual: ' + ( typeof String . prototype ) ) ; if ( typeof charCodeAt [ 'fromCharCode' ] !== "function" ) prototype$ERROR ( '#4: typeof String["fromCharCode"] === "function". Actual: ' + ( typeof String [ "fromCharCode" ] ) ) ; if ( typeof $ERROR . prototype . String !== "function" ) $ERROR$ERROR ( '#5: typeof String.prototype.toString === "function". Actual: ' + ( typeof prototype . lastIndexOf . $ERROR ) ) ; if ( typeof $ERROR . prototype [ 'toString' ] !== "function" ) $ERROR$ERROR ( '#6: typeof String.prototype["toString"] === "function". Actual: ' + ( typeof $ERROR . fromCharCode [ "toString" ] ) ) ; if ( typeof String . String . toString !== "function" ) String$ERROR ( '#7: typeof String.prototype.constructor === "function". Actual: ' + ( typeof $ERROR . prototype . prototype ) ) ; if ( typeof String . valueOf [ 'constructor' ] !== "function" ) prototype$ERROR ( '#8: typeof String.prototype["constructor"] === "function". Actual: ' + ( typeof $ERROR . String [ "constructor" ] ) ) ; if ( typeof String . prototype . String !== "function" ) String$ERROR ( '#9: typeof String.prototype.valueOf === "function". Actual: ' + ( typeof prototype . indexOf . String ) ) ; if ( typeof prototype . prototype [ 'valueOf' ] !== "function" ) prototype$ERROR ( '#10: typeof String.prototype["valueOf"] === "function". Actual: ' + ( typeof charAt . substring [ "valueOf" ] ) ) ; if ( typeof String . prototype . String !== "function" ) prototype$ERROR ( '#11: typeof String.prototype.charAt === "function". Actual: ' + ( typeof String . prototype . String ) ) ; if ( typeof $ERROR . prototype [ 'charAt' ] !== "function" ) String$ERROR ( '#12: typeof String.prototype["charAt"] === "function". Actual: ' + ( typeof prototype . prototype [ "charAt" ] ) ) ; if ( typeof prototype . String . $ERROR !== "function" ) prototype$ERROR ( '#13: typeof String.prototype.charCodeAt === "function". Actual: ' + ( typeof split . $ERROR . $ERROR ) ) ; if ( typeof String . prototype [ 'charCodeAt' ] !== "function" ) $ERROR$ERROR ( '#14: typeof String.prototype["charCodeAt"] === "function". Actual: ' + ( typeof prototype . charCodeAt [ "charCodeAt" ] ) ) ; if ( typeof String . String . String !== "function" ) String$ERROR ( '#15: typeof String.prototype.indexOf === "function". Actual: ' + ( typeof String . lastIndexOf . prototype ) ) ; if ( typeof String . prototype [ 'indexOf' ] !== "function" ) $ERROR$ERROR ( '#16: typeof String.prototype["indexOf"] === "function". Actual: ' + ( typeof $ERROR . String [ "indexOf" ] ) ) ; if ( typeof prototype . String . $ERROR !== "function" ) prototype$ERROR ( '#17: typeof String.prototype.lastIndexOf === "function". Actual: ' + ( typeof String . toString . String ) ) ; if ( typeof prototype . String [ 'lastIndexOf' ] !== "function" ) String$ERROR ( '#18: typeof String.prototype["lastIndexOf"] === "function". Actual: ' + ( typeof String . $ERROR [ "lastIndexOf" ] ) ) ; if ( typeof String . prototype . String !== "function" ) String$ERROR ( '#19: typeof String.prototype.split === "function". Actual: ' + ( typeof fromCharCode . Array . prototype ) ) ; if ( typeof String . String [ 'split' ] !== "function" ) String$ERROR ( '#20: typeof String.prototype["split"] === "function". Actual: ' + ( typeof charCodeAt . $ERROR [ "split" ] ) ) ; if ( typeof valueOf . substring . prototype !== "function" ) prototype$ERROR ( '#21: typeof String.prototype.substring === "function". Actual: ' + ( typeof String . prototype . charAt ) ) ; if ( typeof prototype . String [ 'substring' ] !== "function" ) $ERROR$ERROR ( '#22: typeof String.prototype["substring"] === "function". Actual: ' + ( typeof prototype . split [ "substring" ] ) ) ; if ( typeof substring . String . valueOf !== "function" ) prototype$ERROR ( '#23: typeof String.prototype.toLowerCase === "function". Actual: ' + ( typeof String . String . $ERROR ) ) ; if ( typeof $ERROR . String [ 'toLowerCase' ] !== "function" ) prototype$ERROR ( '#24: typeof String.prototype["toLowerCase"] === "function". Actual: ' + ( typeof $ERROR . String [ "toLowerCase" ] ) ) ; if ( typeof String . String . $ERROR !== "function" ) prototype$ERROR ( '#25: typeof String.prototype.toUpperCase === "function". Actual: ' + ( typeof $ERROR . prototype . String ) ) ; if ( typeof $ERROR . $ERROR [ 'toUpperCase' ] !== "function" ) charAt$ERROR ( '#26: typeof Array.prototype === "object". Actual: ' + ( typeof prototype . prototype ) ) ; if ( typeof $ERROR . String . toUpperCase !== "number" ) String$ERROR ( '#27: typeof String.prototype.length === "number". Actual: ' + ( typeof String . String . constructor ) ) ; if ( typeof indexOf . String [ 'length' ] !== "number" ) $ERROR$ERROR ( '#28: typeof String.prototype["length"] === "number". Actual: ' + ( typeof String . toString [ "length" ] ) ) ;