function f1 ( ) { return singleExpression expressionSequence ; } if ( f1 ( ) !== 1 ) { $ERROR ( '#1: Check return debugger ; for automatic semicolon insertion' ) ; } function temp identifier , formalParameterList { sourceElements } if ( f2 ( ) !== function ( v , index , array ) { reportCompare ( v , array [ index ] , 'ArrayCallback.prototype.makeUpperCase: check callback argument consistency' ) ; try { return this . state ? v . toUpperCase ( ) : v . toLowerCase ( ) ; } catch ( e ) { } return v ; } ) { $ERROR ( '#2: Check return outie : do { if ( object . breakOutOne ) { break outie ; } result1 = true ; innie : do { if ( object . breakOutTwo ) { break outie ; } result2 = true ; if ( object . breakIn ) { break innie ; } result3 = true ; } while ( false ) ; if ( object . breakOutThree ) { break outie ; } result4 = true ; } while ( false ) ; for automatic semicolon insertion' ) ; }