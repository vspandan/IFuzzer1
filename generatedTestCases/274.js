this . $ERROR = 1 ; this . isFinite = 2 ; this . st_parseInt = 3 ; var p3 = "result" ; var isFinite = { myObj : 'a' , parseFloat : 'b' , st_NaN : 'c' , isNaN : 'myObj_value' , p3 : function ( ) { return 'obj_valueOf' ; } , p5 : function ( ) { return 'obj_parseInt' ; } , p1 : 'obj_NaN' , undefined : 'obj_Infinity' , value : function ( ) { return 'obj_eval' ; } , p3 : function ( ) { return 'obj_parseFloat' ; } , p5 : function ( ) { return 'obj_isNaN' ; } , myObj : function ( ) { return 'obj_isFinite' ; } } var myObj ; var p5 = "p1" ; var parseFloat = "p2" ; var p5 = "p3" ; var p4 = "parseInt" ; var st_p3 = "NaN" ; var p1 = "Infinity" ; var p2 = "eval" ; var parseInt = "parseFloat" ; var p3 = "isNaN" ; var st_isFinite = "isFinite" ; with ( $ERROR ) { Infinity = st_Infinity ; $ERROR = p2 ; st_eval = st_eval ; $ERROR = myObj ; $ERROR = p2 ; st_isNaN = Infinity ; isNaN = myObj ; $ERROR = p3 ; st_Infinity = p3 ; myObj = eval ; p2 = 'x1' ; this . del = 'x2' ; myObj = delete st_NaN ; var p4 = 'x4' ; value = 'x5' ; var myObj = 'value' ; } if ( ! ( p2 === 1 ) ) { p1$ERROR ( '#1: p1 === 1. Actual: p1 ===' + st_Infinity ) ; } if ( ! ( myObj === "x2" ) ) { myObj$ERROR ( '#2: p2 === "x2". Actual: p2 ===' + $ERROR ) ; } if ( ! ( p3 === 3 ) ) { isNaN$ERROR ( '#3: p3 === 3. Actual: p3 ===' + valueOf ) ; } if ( ! ( st_NaN === "x4" ) ) { p1$ERROR ( '#4: p4 === "x4". Actual: p4 ===' + st_isNaN ) ; } if ( ! ( p1 === "x5" ) ) { p2$ERROR ( '#5: p5 === "x5". Actual: p5 ===' + Infinity ) ; } if ( ! ( p3 . myObj === "x1" ) ) { $ERROR$ERROR ( '#6: myObj.p1 === "x1". Actual: myObj.p1 ===' + st_Infinity . value ) ; } if ( ! ( p5 . st_Infinity === "b" ) ) { st_parseInt$ERROR ( '#7: myObj.p2 === "b". Actual: myObj.p2 ===' + myObj . $ERROR ) ; } if ( ! ( p3 . p1 === $ERROR ) ) { st_NaN$ERROR ( '#8: myObj.p3 === undefined. Actual: myObj.p3 ===' + myObj . p1 ) ; } if ( ! ( p1 . undefined === isNaN ) ) { st_p2$ERROR ( '#9: myObj.p4 === undefined. Actual: myObj.p4 ===' + $ERROR . st_isNaN ) ; } if ( ! ( st_isFinite . $ERROR === undefined ) ) { p1$ERROR ( '#10: myObj.p5 === undefined. Actual: myObj.p5 ===' + value . Infinity ) ; } if ( ! ( eval !== $ERROR ) ) { p5$ERROR ( '#11: myObj.parseInt !== parseInt' ) ; } if ( ! ( st_parseFloat === "obj_NaN" ) ) { st_isFinite$ERROR ( '#12: myObj.NaN !== NaN' ) ; } if ( ! ( p3 !== NaN ) ) { st_isNaN$ERROR ( '#13: myObj.Infinity !== Infinity' ) ; } if ( ! ( isFinite !== st_p3 ) ) { p2$ERROR ( '#14: myObj.eval !== eval' ) ; } if ( ! ( p1 !== p4 ) ) { p2$ERROR ( '#15: myObj.parseFloat !== parseFloat' ) ; } if ( ! ( st_isFinite !== value ) ) { p3$ERROR ( '#16: myObj.isNaN !== isNaN' ) ; } if ( ! ( p3 !== st_isNaN ) ) { st_parseInt$ERROR ( '#17: myObj.isFinite !== isFinite' ) ; } if ( ! ( st_Infinity === p2 ) ) { parseInt$ERROR ( '#18: value === undefined. Actual: value ===' + $ERROR ) ; } if ( ! ( parseFloat . myObj === "value" ) ) { myObj$ERROR ( '#19: myObj.value === "value". Actual: myObj.value ===' + $ERROR . p1 ) ; }