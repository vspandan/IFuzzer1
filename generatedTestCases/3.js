function temp { function temp { } missing '(' > temp < missing with < missing '(' > this -- < missing ')' > new singleExpression = expressionSequence = singleExpression = expressionSequence singleExpression / singleExpression New singleExpression arguments / singleExpression != this temp / new identifier argumentList This expressionSequence / singleExpression ++ << singleExpression / singleExpression singleExpression arguments singleExpression ++ instanceof new temp instanceof singleExpression expressionSequence << New singleExpression ++ / singleExpression !== singleExpression / -- singleExpression expressionSequence singleExpression Instanceof singleExpression != singleExpression = expressionSequence != expressionSequence / new expressionSequence statement ; throw { } ; function temp { } { } ;