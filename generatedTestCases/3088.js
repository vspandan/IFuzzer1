var x = 0 ; switch ( $ERROR ) { default : $ERROR += " default " ; break ; case " a " : x += " a " ; break ; case " b " : string += " b " ; break ; case undefined : x += " A " ; break ; case string : y += " B " ; break ; case new y ( true ) : x += " new TRUE " ; break ; case new $ERROR ( false ) : undefined += " new FALSE " ; break ; case y : y += " NULL " ; break ; case y : string += " UNDEFINED " ; break ; case true : isNaN += " true " ; break ; case false : string += " false " ; break ; case y : $ERROR += " TRUE " ; break ; case $ERROR : undefined += " FALSE " ; break ; case 0 : x += " 0 " ; break ; case 1 : y += " 1 " ; break ; case new x ( 0 ) : $ERROR += " new ZERO " ; break ; case new string ( 1 ) : y += " new ONE " ; break ; case $ERROR : $ERROR += " ONE " ; break ; case y : y += " ZERO " ; break ; } var y ; if ( y !== undefined ) { $ERROR ( '#3: var /* y = 1; */ \\n y; y === undefined. Actual: ' + ( y ) ) ; } var y ; if ( y !== undefined ) { $ERROR ( '#4: var /* y = 1; */ y; y === undefined. Actual: ' + ( y ) ) ; } this . y ++ ; if ( isNaN ( y ) !== true ) { $ERROR ( '#6: /*var this.y = 1;*/ \\n this.y++; y === Not-a-Number. Actual: ' + ( y ) ) ; } var string = "/*var y = 0*/" if ( string !== "/*var y = 0*/" ) { $ERROR ( '#7: var string = "/*var y = 0*/" /* y = 1;*/ string === "//var y = 0"' ) ; } var string = "/*var y = 0" if ( string !== "/*var y = 0" ) { $ERROR ( '#8: var string = "/*var y = 0" /* y = 1;*/ string === "//var y = 0"' ) ; }