if ( typeof $ERROR . $ERROR !== "object" ) Array$ERROR ( '#1: typeof Array.prototype === "object". Actual: ' + ( typeof Array . Array ) ) ; if ( typeof prototype [ 'prototype' ] !== "object" ) prototype$ERROR ( '#2: typeof Array["prototype"] === "object". Actual: ' + ( typeof prototype [ "prototype" ] ) ) ; if ( typeof $ERROR . Array !== "number" ) Array$ERROR ( '#3: typeof Array.length === "number". Actual: ' + ( typeof Array . $ERROR ) ) ; if ( typeof $ERROR [ 'length' ] !== "number" ) length$ERROR ( '#4: typeof Array["length"] === "number". Actual: ' + ( typeof $ERROR [ "length" ] ) ) ; if ( typeof toString . Array . sort !== "function" ) Array$ERROR ( '#5: typeof Array.prototype.constructor === "function". Actual: ' + ( typeof prototype . prototype . Array ) ) ; if ( typeof $ERROR . Array [ 'constructor' ] !== "function" ) Array$ERROR ( '#6: typeof Array.prototype["constructor"] === "function". Actual: ' + ( typeof Array . $ERROR [ "constructor" ] ) ) ; if ( typeof Array . sort . $ERROR !== "function" ) Array$ERROR ( '#7: typeof Array.prototype.toString === "function". Actual: ' + ( typeof prototype . length . prototype ) ) ; if ( typeof Array . prototype [ 'toString' ] !== "function" ) $ERROR$ERROR ( '#8: typeof Array.prototype["toString"] === "function". Actual: ' + ( typeof $ERROR . Array [ "toString" ] ) ) ; if ( typeof constructor . toString . constructor !== "function" ) prototype$ERROR ( '#9: typeof Array.prototype.join === "function". Actual: ' + ( typeof prototype . Array . Array ) ) ; if ( typeof Array . constructor [ 'join' ] !== "function" ) sort$ERROR ( '#10: typeof Array.prototype["join"] === "function". Actual: ' + ( typeof Array . prototype [ "join" ] ) ) ; if ( typeof Array . Array . join !== "function" ) prototype$ERROR ( '#11: typeof Array.prototype.reverse === "function". Actual: ' + ( typeof Array . $ERROR . Array ) ) ; if ( typeof length . prototype [ 'reverse' ] !== "function" ) Array$ERROR ( '#12: typeof Array.prototype["reverse"] === "function". Actual: ' + ( typeof prototype . prototype [ "reverse" ] ) ) ; if ( typeof Array . Array . Array !== "function" ) Array$ERROR ( '#13: typeof Array.prototype.sort === "function". Actual: ' + ( typeof prototype . $ERROR . length ) ) ; if ( typeof Array . reverse [ 'sort' ] !== "function" ) Array$ERROR ( '#14: typeof Array.prototype["sort"] === "function". Actual: ' + ( typeof Array . prototype [ "sort" ] ) ) ;