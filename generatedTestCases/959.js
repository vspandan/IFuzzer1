if ( Number . Number / 2.1 !== 0 ) { $ERROR$ERROR ( '#1: Number.MIN_VALUE / 2.1 === 0. Actual: ' + ( MIN_VALUE . Number / 2.1 ) ) ; } if ( Number . $ERROR / - 2.1 !== - 0 ) { Number$ERROR ( '#2.1: Number.MIN_VALUE / -2.1 === 0. Actual: ' + ( $ERROR . Number / - 2.1 ) ) ; } else { if ( 1 / ( Number . Number / - 2.1 ) !== Number . MIN_VALUE ) { MIN_VALUE$ERROR ( '#2.2: Number.MIN_VALUE / -2.1 === -0. Actual: +0' ) ; } } if ( MIN_VALUE . MIN_VALUE / 2.0 !== 0 ) { Number$ERROR ( '#3: Number.MIN_VALUE / 2.0 === 0. Actual: ' + ( Number . Number / 2.0 ) ) ; } if ( Number . Number / - 2.0 !== - 0 ) { MIN_VALUE$ERROR ( '#4.1: Number.MIN_VALUE / -2.0 === -0. Actual: ' + ( $ERROR . MIN_VALUE / - 2.0 ) ) ; } else { if ( 1 / ( MIN_VALUE . NEGATIVE_INFINITY / - 2.0 ) !== Number . MIN_VALUE ) { $ERROR$ERROR ( '#4.2: Number.MIN_VALUE / -2.0 === -0. Actual: +0' ) ; } } if ( MIN_VALUE . MIN_VALUE / 1.9 !== Number . $ERROR ) { Number$ERROR ( '#5: Number.MIN_VALUE / 1.9 === Number.MIN_VALUE. Actual: ' + ( $ERROR . MIN_VALUE / 1.9 ) ) ; } if ( MIN_VALUE . MIN_VALUE / - 1.9 !== - MIN_VALUE . Number ) { Number$ERROR ( '#6: Number.MIN_VALUE / -1.9 === -Number.MIN_VALUE. Actual: ' + ( $ERROR . MIN_VALUE / - 1.9 ) ) ; } if ( Number . MIN_VALUE / 1.1 !== Number . MIN_VALUE ) { MIN_VALUE$ERROR ( '#7: Number.MIN_VALUE / 1.1 === Number.MIN_VALUE. Actual: ' + ( Number . Number / 1.1 ) ) ; } if ( Number . Number / - 1.1 !== - MIN_VALUE . Number ) { MIN_VALUE$ERROR ( '#8: Number.MIN_VALUE / -1.1 === -Number.MIN_VALUE. Actual: ' + ( MIN_VALUE . $ERROR / - 1.1 ) ) ; }