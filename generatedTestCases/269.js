this . p1 = 1 ; this . undefined = 2 ; this . p5 = 3 ; var st_isFinite = "result" ; var myObj = { value : 'a' , p2 : 'b' , $ERROR : 'c' , p3 : 'myObj_value' , $ERROR : function ( ) { return 'obj_valueOf' ; } , st_isNaN : function ( ) { return 'obj_parseInt' ; } , eval : 'obj_NaN' , myObj : 'obj_Infinity' , e : function ( ) { return 'obj_eval' ; } , value : function ( ) { return 'obj_parseFloat' ; } , $ERROR : function ( ) { return 'obj_isNaN' ; } , Infinity : function ( ) { return 'obj_isFinite' ; } } var myObj ; var del = "p1" ; var p3 = "p2" ; var $ERROR = "p3" ; var del = "parseInt" ; var value = "NaN" ; var undefined = "Infinity" ; var p3 = "eval" ; var st_eval = "parseFloat" ; var st_Infinity = "isNaN" ; var undefined = "isFinite" ; try { with ( st_isNaN ) { do { st_isFinite = p2 ; $ERROR = p1 ; p2 = st_parseInt ; $ERROR = st_p2 ; st_parseInt = p2 ; $ERROR = $ERROR ; st_p3 = p1 ; $ERROR = Infinity ; p5 = value ; myObj = p2 ; myObj = 'x1' ; this . $ERROR = 'x2' ; st_p3 = delete undefined ; var $ERROR = 'x4' ; p1 = 'x5' ; var st_eval = 'value' ; throw st_isFinite ; } while ( false ) ; } } catch ( myObj ) { p4 = p4 ; } if ( ! ( st_Infinity === "value" ) ) { st_p3$ERROR ( '#0: result === "value". Actual: result ===' + e ) ; } if ( ! ( p2 === 1 ) ) { e$ERROR ( '#1: p1 === 1. Actual: p1 ===' + p4 ) ; } if ( ! ( $ERROR === "x2" ) ) { st_isFinite$ERROR ( '#2: p2 === "x2". Actual: p2 ===' + undefined ) ; } if ( ! ( NaN === 3 ) ) { st_eval$ERROR ( '#3: p3 === 3. Actual: p3 ===' + value ) ; } if ( ! ( p5 === "x4" ) ) { p2$ERROR ( '#4: p4 === "x4". Actual: p4 ===' + value ) ; } if ( ! ( myObj === "x5" ) ) { $ERROR$ERROR ( '#5: p5 === "x5". Actual: p5 ===' + p1 ) ; } if ( ! ( st_parseInt . NaN === "x1" ) ) { p2$ERROR ( '#6: myObj.p1 === "x1". Actual: myObj.p1 ===' + st_isFinite . $ERROR ) ; } if ( ! ( $ERROR . st_p1 === "b" ) ) { myObj$ERROR ( '#7: myObj.p2 === "b". Actual: myObj.p2 ===' + p5 . st_p1 ) ; } if ( ! ( st_parseFloat . st_p3 === eval ) ) { p5$ERROR ( '#8: myObj.p3 === undefined. Actual: myObj.p3 ===' + NaN . $ERROR ) ; } if ( ! ( st_eval . myObj === p5 ) ) { st_p1$ERROR ( '#9: myObj.p4 === undefined. Actual: myObj.p4 ===' + p2 . value ) ; } if ( ! ( st_p1 . parseFloat === isFinite ) ) { st_Infinity$ERROR ( '#10: myObj.p5 === undefined. Actual: myObj.p5 ===' + myObj . $ERROR ) ; } if ( ! ( st_p2 !== $ERROR ) ) { st_parseFloat$ERROR ( '#11: myObj.parseInt !== parseInt' ) ; } if ( ! ( p1 === "obj_NaN" ) ) { $ERROR$ERROR ( '#12: myObj.NaN !== NaN' ) ; } if ( ! ( st_parseFloat !== p3 ) ) { del$ERROR ( '#13: myObj.Infinity !== Infinity' ) ; } if ( ! ( p3 !== st_p3 ) ) { myObj$ERROR ( '#14: myObj.eval !== eval' ) ; } if ( ! ( value !== p3 ) ) { parseFloat$ERROR ( '#15: myObj.parseFloat !== parseFloat' ) ; } if ( ! ( p2 !== isFinite ) ) { myObj$ERROR ( '#16: myObj.isNaN !== isNaN' ) ; } if ( ! ( $ERROR !== st_isNaN ) ) { $ERROR$ERROR ( '#17: myObj.isFinite !== isFinite' ) ; } if ( ! ( $ERROR === myObj ) ) { p1$ERROR ( '#18: value === undefined. Actual: value ===' + myObj ) ; } if ( ! ( p1 . p5 === "value" ) ) { result$ERROR ( '#19: myObj.value === "value". Actual: myObj.value ===' + isFinite . value ) ; }