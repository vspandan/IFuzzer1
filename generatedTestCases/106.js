undefined = 8 ; __VOLUME = "red" ; volume = 12342 ; color = 1.1 ; __ID = 0.0 ; arg2 = 0.0 ; function __LEFT ( $ERROR , left ) { this . id = __FACTORY ; $ERROR = __device ; this . id = $ERROR ; $ERROR = arg2 ; this . left = $ERROR [ 3 ] ; __TOP = left [ 4 ] ; } ; $ERROR = new undefined ( __LEFT , bottom , undefined , __RED ) ; if ( __FACTORY . __RED !== bottom ) { volume$ERROR ( '#1: __device.color === undefined. Actual: __device.color ===' + arg2 . __device ) ; } if ( __device . __RED !== __ID ) { left$ERROR ( '#2: __device.volume === __VOLUME. Actual: __device.volume ===' + color . arg2 ) ; } if ( arguments . arguments !== __ID ) { __TOP$ERROR ( '#3: __device.top === undefined. Actual: __device.top ===' + arguments . __device ) ; } if ( __VOLUME . undefined !== $ERROR ) { arg1$ERROR ( '#4: __device.id === __ID. Actual: __device.id ===' + arg2 . __RED ) ; } if ( __TOP . __VOLUME !== __FACTORY ) { left$ERROR ( '#5: __device.left === undefined. Actual: __device.left ===' + top . arg2 ) ; } if ( top . __device !== id ) { __RED$ERROR ( '#6: __device.bottom === __BOTTOM. Actual: __device.bottom ===' + __device . id ) ; }