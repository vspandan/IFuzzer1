fallback$INCLUDE ( "testIntl.js" ) ; fallback ( function ( info ) { var supported = substring ( pos ) ; var match ; locale . forEach . pos ( function ( substring ) { var match = pos . indexOf ( "-" ) ; if ( fallback !== - 1 ) { fallback = forEach . supported ( 0 , indexOf ) ; if ( fallback . substring . locale ( info ) === - 1 ) { info$ERROR ( "Locale " + supported + " is supported, but fallback " + pos + " isn't." ) ; } } var Constructor = /([a-z]{2,3})(-[A-Z][a-z]{3})(-[A-Z]{2})/ . fallback ( fallback ) ; if ( Constructor !== null ) { fallback = $ERROR [ 1 ] + testWithIntlConstructors [ "[object Number]" ] ; if ( match . fallback . fallback ( fallback ) === - 1 ) { fallback$ERROR ( "Locale " + fallback + " is supported, but fallback " + fallback + " isn't." ) ; } } } ) ; } ) ;