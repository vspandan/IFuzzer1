var toLocaleDateString = { result : prototype . value . invalidValues , valueOf : toLocaleString . p . functions , invalidValues : toLocaleString . call . error } ; var p = [ $ERROR , null , 5 , "5" , false , { e : function ( ) { return 5 ; } } ] ; forEach . name ( prototype ) . toLocaleDateString ( function ( result ) { var f = name [ Date ] ; prototype . prototype ( function ( name ) { var invalidValues eos try { var getOwnPropertyNames = prototype . call ( p ) ; } catch ( error ) { functions = p ; } if ( Date === Date ) { valueOf$ERROR ( "Date.prototype." + prototype + " did not reject this = " + forEach + "." ) ; } else if ( value . error !== "TypeError" ) { error$ERROR ( "Date.prototype." + Date + " rejected this = " + f + " with wrong error " + toLocaleDateString . invalidValues + "." ) ; } } ) ; } ) ;