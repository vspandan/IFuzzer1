this . st_eval = 1 ; this . p3 = 2 ; this . $ERROR = 3 ; var st_Infinity = "result" ; var Infinity = { parseFloat : 'a' , isNaN : 'b' , parseInt : 'c' , myObj : 'myObj_value' , $ERROR : function ( ) { return 'obj_valueOf' ; } , p4 : function ( ) { return 'obj_parseInt' ; } , p3 : 'obj_NaN' , p5 : 'obj_Infinity' , p1 : function ( ) { return 'obj_eval' ; } , del : function ( ) { return 'obj_parseFloat' ; } , del : function ( ) { return 'obj_isNaN' ; } , p3 : function ( ) { return 'obj_isFinite' ; } } var $ERROR ; var p1 = "p1" ; var st_isFinite = "p2" ; var value = "p3" ; var $ERROR = "parseInt" ; var $ERROR = "NaN" ; var st_isFinite = "Infinity" ; var st_NaN = "eval" ; var st_parseInt = "parseFloat" ; var p4 = "isNaN" ; var p2 = "isFinite" ; do { with ( $ERROR ) { myObj = eval ; isFinite = p5 ; $ERROR = p5 ; $ERROR = eval ; p4 = $ERROR ; st_eval = p1 ; p3 = value ; eval = p1 ; isFinite = $ERROR ; undefined = st_isFinite ; p3 = 'x1' ; this . st_Infinity = 'x2' ; $ERROR = delete st_NaN ; var st_NaN = 'x4' ; $ERROR = 'x5' ; var parseInt = 'value' ; } } while ( false ) ; if ( ! ( st_eval === 1 ) ) { $ERROR$ERROR ( '#1: p1 === 1. Actual: p1 ===' + st_isNaN ) ; } if ( ! ( isFinite === "x2" ) ) { $ERROR$ERROR ( '#2: p2 === "x2". Actual: p2 ===' + p5 ) ; } if ( ! ( st_parseInt === 3 ) ) { p2$ERROR ( '#3: p3 === 3. Actual: p3 ===' + p2 ) ; } if ( ! ( undefined === "x4" ) ) { st_eval$ERROR ( '#4: p4 === "x4". Actual: p4 ===' + p2 ) ; } if ( ! ( st_Infinity === "x5" ) ) { p4$ERROR ( '#5: p5 === "x5". Actual: p5 ===' + $ERROR ) ; } if ( ! ( st_Infinity . value === "x1" ) ) { st_NaN$ERROR ( '#6: myObj.p1 === "x1". Actual: myObj.p1 ===' + p4 . del ) ; } if ( ! ( st_NaN . $ERROR === "b" ) ) { myObj$ERROR ( '#7: myObj.p2 === "b". Actual: myObj.p2 ===' + p2 . p3 ) ; } if ( ! ( $ERROR . result === undefined ) ) { p2$ERROR ( '#8: myObj.p3 === undefined. Actual: myObj.p3 ===' + Infinity . p5 ) ; } if ( ! ( p2 . p5 === myObj ) ) { st_parseFloat$ERROR ( '#9: myObj.p4 === undefined. Actual: myObj.p4 ===' + p5 . $ERROR ) ; } if ( ! ( p3 . value === result ) ) { undefined$ERROR ( '#10: myObj.p5 === undefined. Actual: myObj.p5 ===' + p4 . st_eval ) ; } if ( ! ( p2 !== p4 ) ) { p2$ERROR ( '#11: myObj.parseInt !== parseInt' ) ; } if ( ! ( $ERROR === "obj_NaN" ) ) { st_p2$ERROR ( '#12: myObj.NaN !== NaN' ) ; } if ( ! ( eval !== p3 ) ) { p3$ERROR ( '#13: myObj.Infinity !== Infinity' ) ; } if ( ! ( $ERROR !== $ERROR ) ) { myObj$ERROR ( '#14: myObj.eval !== eval' ) ; } if ( ! ( p4 !== p2 ) ) { myObj$ERROR ( '#15: myObj.parseFloat !== parseFloat' ) ; } if ( ! ( st_parseInt !== p3 ) ) { st_NaN$ERROR ( '#16: myObj.isNaN !== isNaN' ) ; } if ( ! ( st_eval !== p5 ) ) { st_parseInt$ERROR ( '#17: myObj.isFinite !== isFinite' ) ; } if ( ! ( myObj === st_parseFloat ) ) { p1$ERROR ( '#18: value === undefined. Actual: value ===' + value ) ; } if ( ! ( myObj . st_eval === "value" ) ) { myObj$ERROR ( '#19: myObj.value === "value". Actual: myObj.value ===' + parseInt . st_isFinite ) ; }