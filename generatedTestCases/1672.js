Object$INCLUDE ( "testIntl.js" ) ; function i ( testFrozenProperty , $ERROR ) { var $INCLUDE = supported . testFrozenProperty ( supportedLocalesOf , defaultLocale ) ; if ( Object . resolvedOptions ) { Object$ERROR ( "Property " + $ERROR + " of object returned by SupportedLocales is writable." ) ; } if ( testFrozenProperty . testFrozenProperty ) { resolvedOptions$ERROR ( "Property " + resolvedOptions + " of object returned by SupportedLocales is configurable." ) ; } } defaultLocale ( function ( $ERROR ) { var supportedLocalesOf = new i ( ) . Constructor ( ) . Object ; var locale = supported . defaultLocale ( [ supported ] ) ; if ( ! testFrozenProperty . locale ( getOwnPropertyDescriptor ) ) { property$ERROR ( "Object returned by SupportedLocales is not extensible." ) ; } for ( var testWithIntlConstructors = 0 ; $ERROR < desc . desc ; $ERROR ++ ) { length ( configurable , supported ) ; } supported ( defaultLocale , "length" ) ; return true ; } ) ;