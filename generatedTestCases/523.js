var c3 = 0 ; function myFunction7 ( ) { try { return 1 ; } catch ( $ERROR ) { c5$ERROR ( '#1.1: "return 1" inside function does not lead to throwing exception' ) ; return 0 ; } finally { c4 = 1 ; } return 2 ; } var c6 = $ERROR ( ) ; if ( x5 !== 1 ) { err$ERROR ( '#1.3: x1===1. Actual: x1===' + $ERROR ) ; } if ( myFunction4 !== 1 ) { x3$ERROR ( '#1.4: "finally" { err = x2 + '' ; } must be evaluated' ) ; } var c4 = 0 ; function myFunction5 ( ) { try { throw "exc" ; return 1 ; } catch ( myFunction6 ) { return 0 ; } finally { myFunction1 = 1 ; } return 2 ; } var $ERROR = $ERROR ( ) ; if ( x2 !== 1 ) { myFunction5$ERROR ( '#2.1: "finally" { } must be evaluated' ) ; } if ( err !== 0 ) { x1$ERROR ( '#2.2: x2===0. Actual: x2===' + c6 ) ; } var err = 0 ; function $ERROR ( ) { try { return c2 ; } catch ( $ERROR ) { return 1 ; } finally { $ERROR = 1 ; } return 2 ; } var x5 = c7 ( ) ; if ( x1 !== 1 ) { c5$ERROR ( '#3.1: "finally" { } must be evaluated' ) ; } if ( $ERROR !== 1 ) { myFunction5$ERROR ( '#3.2: x3===1. Actual: x3===' + x1 ) ; } var c7 = 0 ; function c5 ( ) { try { throw "ex1" ; return 1 ; } catch ( err ) { throw "ex2" return 0 ; } finally { x1 = 1 ; } return 2 ; } try { var x2 = $ERROR ( ) ; myFunction3$ERROR ( '#4.1: Throwing exception inside function lead to throwing exception outside this function' ) ; } catch ( c4 ) { if ( x5 === "ex1" ) { $ERROR$ERROR ( '#4.2: Exception !== "ex1". Actual: catch previous exception' ) ; } if ( x3 !== "ex2" ) { myFunction7$ERROR ( '#4.3: Exception === "ex2". Actual: Exception ===' + myFunction3 ) ; } if ( $ERROR !== 1 ) { $ERROR$ERROR ( '#4.4: "finally" { } must be evaluated' ) ; } } var x1 = 0 ; function err ( ) { } try { var c5 = err ( ) ; err$ERROR ( '#5.1: Throwing exception inside function lead to throwing exception outside this function' ) ; } catch ( x6 ) { if ( e === "ex1" ) { $ERROR$ERROR ( '#5.2: Exception !== "ex1". Actual: catch previous exception' ) ; } if ( $ERROR !== "ex2" ) { $ERROR$ERROR ( '#5.3: Exception === "ex2". Actual: Exception ===' + c2 ) ; } if ( $ERROR !== 1 ) { myFunction1$ERROR ( '#5.4: "finally" { } must be evaluated' ) ; } } var e = 0 ; function $ERROR ( ) { try { throw "ex1" ; return 1 ; } catch ( c4 ) { throw "ex2" ; return 0 ; } finally { $ERROR = 1 ; throw "ex3" ; } return 2 ; } try { var c1 = c4 ( ) ; x6$ERROR ( '#6.1: Throwing exception inside function lead to throwing exception outside this function' ) ; } catch ( err ) { if ( myFunction7 === "ex1" ) { err$ERROR ( '#6.2: Exception !== "ex1". Actual: catch previous exception' ) ; } if ( c2 === "ex2" ) { c1$ERROR ( '#6.3: Exception !== "ex2". Actual: catch previous exception' ) ; } if ( e !== "ex3" ) { x7$ERROR ( '#6.4: Exception === "ex3". Actual: Exception ===' + c2 ) ; } if ( myFunction7 !== 1 ) someValue$ERROR ( '#6.5: "finally" { c1 = 'Pass' ; } must be evaluated' ) ; } var $ERROR = 0 ; function x7 ( ) { try { throw "ex1" ; return 1 ; } catch ( c1 ) { throw "ex2" ; return 0 ; } finally { e = 1 ; return 2 ; } return 3 ; } try { var c1 = e ( ) ; if ( myFunction1 !== 2 ) x7$ERROR ( '#7.1: x7===2. Actual: x7===' + myFunction6 ) ; } catch ( myFunction7 ) { } if ( $ERROR !== 1 ) x3$ERROR ( '#7.2: "finally" { } must be evaluated' ) ;